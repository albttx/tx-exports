{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1e75yydvy5zldw8f334tq4qshetmpqts5hljp74","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"sR9JLSqsgEeo+OtorWnhlpLoCmzIBjkLFGq4/y+zQNkxASSkbinR6pywhBfVNjUst4EKobLF7O3GsI0UxXhiAw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1m6n5eyss5mxmxcytzjwvs4c6nps2fjyu7yf4rs","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"nXSWwZ2mfokhK/4fDPMLHuDxbO7IidwnWzmCoLC14MF+l7kXe8x3dHs4TH+j/7t+oSCbPnW/0xvgXpbv44pzsA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1scx5dg6m76kr205e7hs2eae28flsz3r7jdmmfs","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"+2xR9kgReFyOrk/vMTdvXl8gI9zW3Zcxe7uDEKwDDek6sb8f2WaeBfElVK+4e6uJTJumXXpPQ2tutvst5YMsWQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1wtwz3jetj6hmjlwnu4pv0flc3t8th8kd690hal","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"uuumEWliXxKbQf4i75qknj893+y01XReh96XhaGM5wESfzpEdkREZbYnfS+aOcQns/1zhEJeiSxp8YLzxnj4xw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1c5uat57zr3sy3kz4ujhan6sr29y7q52hc43c7v","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"TMqVpuIaxW2rJllXMmkiS9e9rKz0aXOljy1/GsFDoJBznBVlcO8A6D+459N3roYHVqcYOzv/aJ2B5w4tha1uyg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1wcgt92d7nmanxjlycxc6n70s8v7xmfwlk7hsem","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"qiYCm33T6mVUdS0yBnvX86aWsV+uX+Fq+lPRtRKNJj5Izvvqy21PLgu/JRy5ZiS8oH+u9PvbytcxObV9OOMB0Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g10dljy6cq8edwn4nydthzh8wwmka9jkva3tnyr9","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"nsBeug3AHD7i2Wb57s0Eet28RrgRIedAwlhQrSqvTPkvj1uX3TC0Uk9hW2aDXaT46Vjz3DSrxlaPCa3eP7NgoA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19yltltjed5688sullftzurhdshmjwtm8vlqdr2","to_address":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","amount":"210000000ugnot"}],"fee":{"gas_wanted":"59129","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoXFomwlVbbLZSPKTPFbYTS1JX/eNqYPtzLcd7f/VcK8"},"signature":"zgf/a6S+THjs7ziCsHdZOkvIB0AkBofA7O/lJ4yp5mBGFuOM3Po4uG3x/846NkZzAw+zOgLZ2H+PX3dbC8IWpQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g15xfhxxymvmuj0gzggfnd09w0rzl426d5w823zf","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"zjU/1ZsenCJyAYPYG70C8ClDg19l6wkX3aSkhxtghGV/g+TQDiE7nyZWD45cVKVrkcIdjZMjS2YNLSPvJWQgCQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g15xfhxxymvmuj0gzggfnd09w0rzl426d5w823zf","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"f6IDZUg5atvv4QoDVLBYchnzJDrtjLgO2AJQKNVlG8ZaGyxW0vg0Y37W5ZdblLmUnCDfbkxXxtn1dGnnaGVdsw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g15xfhxxymvmuj0gzggfnd09w0rzl426d5w823zf","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"px7iCwANyaEqFUOhwTF/la3Gk0Eo/bqHtImR/mgVKGpKqx7JvfFnhFkvdw0R4xgI2AeHdhYJlVProsoJZSewvQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1c5uat57zr3sy3kz4ujhan6sr29y7q52hc43c7v","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"omEtNhu+mM0JUoEGgsda0T7kArffb4IAQ018bUORhNF3XIv+RNv5hckTkOZj1BhjVotoLRPJRby4nlb9mua+8Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1e260zn9l5l79xxuk2rt7nnjuv27mc58tk23tx4","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"+PEp2ISsKX2uucVOx1em/P2BH+n+KOHz2yyQtNjPnK5FUqlop7YWjCLV8P1UJNCFmJc4944hKSvypVcgSu0p3Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g15xfhxxymvmuj0gzggfnd09w0rzl426d5w823zf","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"pkJ8wnYdOWo5Qb6t7hPjbp1bpU3bqd/mTaLi4REUK3BDmrnZ/ujh45uJc4+v74KExP/nxknFdBh9MPKuA4zIWg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1u52gals5th9udxuxhx4r9cynka69aakdzerrq7","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"RD8W4C4wWjNN7VqZb17XoVsvrQqhigdq3LGNyo9vmu0RPxU8BjOJLMO5kIYDu3aCrCz3CLTk2Ou0wAKK8Jc0GQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1978c92dwldv278wk3nsavusak3anlwy9d3vx9w","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"X9zsrvux7/z2ivLgmZNaJXwn0JTsJxTrM1AFqoUVqH1WNE85gPKSf/715cYzNb2MFqfRUSu+9uRIxB82GH7XmA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1g5jxk964w9c5vjadnnhpz0542e55n30remqc6g","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"JDhjSA8m0XK1J3hK21leTBzgtiwUfausP1cWWTVfW6YZGion3fmUZYT2sZB9wdvBZ3i93QxUscc6TXxaFyXZuw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1j2m3y9e7rrt8jc68qv3gvp0dyzvcdwglhlre63","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"3lLO7GBmxfH1SE2ek9wXF9Hra4TTV6TbambrzATqYZUQfFsE2wHNKvnYvVY4q8Q+6gSh4h4oCzz4fFlaY3AzOQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g15xfhxxymvmuj0gzggfnd09w0rzl426d5w823zf","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"s4QCaxUF2FZ5JICE6WSXUfXE7jtTjkSILewc4r8ptoNmUyXn51LNe+6AFB8lizocK8wvoT6vJm27S7a0znXfDg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g10dljy6cq8edwn4nydthzh8wwmka9jkva3tnyr9","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"ToK7PsClXCRlEMIPkCy7LikgNLG3a7/qOYqeUfgwdkhF/jDvfL8obtQj9BWbvxL/ZzBQ7eXB/MECpS4dJsdY4Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1vz5nsp4rdws3p89q92xwv7r242whmzpcw95u9t","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"hLwKeiX1PNr8PuWQUqGjNNU91ceckZQzZk/L9D4oHmlKxMyoIM8/BWD0bgEPnFxRk1i7zR43+yOGSwgeHeRLOw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g15xfhxxymvmuj0gzggfnd09w0rzl426d5w823zf","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"DhRW6iQQibj2++djcwY/cF58ZS3j3O9E6tZfkJ9cMbJz8Zk3EzA5i1MliVdLEpq+D4hnRMj/8NGHPKpYtDg6tQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g19u7h0a3fv5vde2svaj3urrsawnttp3lkt8q367","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"PMnqc6b2O0DdJavrJ9m0HvoG+FXm/dbrfnPX67kymVcnq9XKvr9UbhdktNiwLSSGff4ssHr4NobYTvR6uMKzBQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1j2m3y9e7rrt8jc68qv3gvp0dyzvcdwglhlre63","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"1KgXdWcKXIHi2D7c5rRS/gTqud4rxQi7jbu89DFenT1sLyAk4sAy5Yc98nkUm8ul4xQBHx6RznMWiwBBeP2bww=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g19n4ftjvys99lj3ljv5y8gghv6anv3ld6wa6hh0","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"SljqjessZYLHQPdABFOn11yzCpdIebghHvxi3SmC8u1QJHiFZU6LFhG2/4Heu5hrW9zkT2FuEzimYfzTgYLVxQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g10dljy6cq8edwn4nydthzh8wwmka9jkva3tnyr9","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"Oh5I99AgpOcj4ZA5rV2NJbn+9lyskb2whgisxW4sfNpWWS3gor08LbvNWIfUNK5VoOT3JDdaiKYx5I6w0Mb6OQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1xcx4ylaya723tyce9uaup25gw69am0ulrnedt2","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"LJaXnThgvsFYoPRwwksT5pDkfWf6loL3noRipipSk+9ql3QqmOYWQMCjLCAj0UXssqs/UD1MvTaZg8sLUKZQzg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1pc3ljvqywcyxmvy8rk4z9urffdxxlsh04l07s6","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"Azb15ZiofJCO/Z6bP2CKLWHpdIlJIa4aKJwVR30GY0dQFnRabVwiHfierjINQutku7Wg6jvhYejfHuBx3qUW5w=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1smmqxjnszt86yrw27lcspyrrqjry9zhdude0k5","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"KFwcHu/z/qcbocBKCgPfarxo2QoHaS9Fxt6/euS7juhQSgjAb3wgHhjGQ6jC8Gr8QTNHmM5Uarr64B1QPktwag=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1r4h8qyf727tqlyckauecq7tlap9za2kdwqtx3j","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"CG5EPyAG0UNCXBEKcz5wS5GC5APMucusnScUUuTaM9oVOdFoHBgSUo/ooA9/zkrr/TkYzOFf1HKXsU23lyorVA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g19n4ftjvys99lj3ljv5y8gghv6anv3ld6wa6hh0","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"u/1u7EseFE9dn0/UfVWE2R9A0HiPKuOGjWcYSNpsdREqdDWk+kSCq738qm9bVZ7P/ekNRwyLrmtGjfv5YAT2yw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g19prm80v0vz3uy85ujsngqd6rewwqhef49yqkr4","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"J3FyrESojl1DQeKDnTaOZWzGdqTz8MCHVchAGLuYk0I1PLeFr6w8q3OqyG0RBxeV6R4hloyN4y5MCSRsZ6atYQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1nuw4vglutgj20taxf5ulgayzzlmqjuyuwcvg86","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"9PKddGSZ1eTjk9sSvqYhBpnSKx5ycj2UR2n0lwPc+pIXeVbOK0kozI2URr2tNikNaIVvKZBq7yp6Z3kEL2G7yw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1h48jcml2jrxzy3dpf022hmama6f7y5cd08xehr","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"dW8DHEmSo6/ioB95FO9jd9IKlST1DvZkUgnOggMFtjVm2Sm0DQyzztUW9qgKkWYL9fC4PWREidppUMN34iBx+w=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1h48jcml2jrxzy3dpf022hmama6f7y5cd08xehr","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"Z5SY6f9lKcWhUcd5tArR7rUSZg19xXRzKf1O0elLsTQI7DV2RFNOGY603LuVPHVSx/RTN/ZCve4s6XNxtcXRgA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g19n4ftjvys99lj3ljv5y8gghv6anv3ld6wa6hh0","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"zEWWL6xplfB+gik4Dpgq3FXpRWyTdYTRIaA3lDHrQVJZ6/8svAvatwUMZ2nyasTABYiEpDp8jtygs0Do9eLD6w=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1h6qwe42e7kz44san04elj4n9jrn8rzrarx4e3j","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"NJDaDMXxBNI281LA3T3F+UqybO45pSbQl5Y42wI/3qp7uE7LDwMSnnWMVZrgh2TDr4+5Y3bu9AqGeBTJYVQlhw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1h48jcml2jrxzy3dpf022hmama6f7y5cd08xehr","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"YkQcmGq6uAr0yUkl1ydhxmJsE6yxi2HP3vWMuyN9KPg6Y0g18xRstQoysJFGAJHyKTpq55mmc6MdEEBK11FXkg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1mp2zdc9fczwlkv23pktmnwwnk6ecqfrxh29ytw","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"q3eHZWpYrVwAqxbMD+syQceBvPacyjxuHHfI5T/h8XVK1X2IAeKKmeVJAa8s9b30MVCR1/QgNmGfzK9sru08tw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1j2m3y9e7rrt8jc68qv3gvp0dyzvcdwglhlre63","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"l1Ws2iKVUaiqOw8Vui1/GleJ9LZ6vg+obSvQYKvKfvl88sLxkXiqNr68S9w32+5sqPbxTFK+52pM93DHW5Si3Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1mn344qdd7ldzu8h8vr3gjrqa9khhvsacf3zqgf","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"p3C4SZ5jx8abMSEa7MRrYexMqj9ftIvIBMAixuME0gFd3mbYXD460u6/Vjx3fM0VnJebLjAzpKYhWL4jumvtJQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1h3xz8p29ugfaspqltes5reuxla534r9uxjanv0","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"KWVlGn70EyAJrOLrSQM0QdbiBZsKXxM56LGbhjo9xUBAjytaNzwjWExY4PCEyjxY25VCP/Y5MRmQ/cXVOixTjg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g19prm80v0vz3uy85ujsngqd6rewwqhef49yqkr4","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"0m2TUA2fjJmwWdQ/PLUFoUaHzRjhyBwUJs68e3aDT7hVn7motVpf3lgqfNL+XQnn+dynvv3vKLGcyvzwqhZIjw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1vz5nsp4rdws3p89q92xwv7r242whmzpcw95u9t","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"O1JeIOmuxY1Vpgp99+iCz0TzY4FtbludUflsjMSYpdFUAzGf/zZBFix9Vkgqx7certMs68BjPCGai6pkMN1eFA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1u52gals5th9udxuxhx4r9cynka69aakdzerrq7","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"TqLCZ96G+D5hUavM+mZcpPoet/SvCViggixzJ0e35rVPBxWmbDQhla/dTEkTxAVM5y3ca1fPuIy0I+p7jyNXNA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1j2m3y9e7rrt8jc68qv3gvp0dyzvcdwglhlre63","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"uczLOlH4xZ5HZ6/r8C6ckMufvKRlH01eJyedakzfFghEFKFKhby8YIa9jYJ3VpGB59+fKuAEzS+W9pcdW9jAjw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1y3x2c9w6t66v3ats47fe8k5zmshm7v43h2q0gv","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"VG/dtUMqItI8ON0pCNrrY3wxLLIFn9GEWCGA2uehekcJPPjbIN46NaLw/Y7HGbG1yTJK2a3arnOLkUHaFF0gpg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1mn344qdd7ldzu8h8vr3gjrqa9khhvsacf3zqgf","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"LqCR0ty+HnIGCChvLRGPk23eMzwhdGYQ88h5qXBJdK1lN6tRV6fju8G8+7ZHqCwUapSiE8DdRbmizMxqLXzLbA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1ff2uvqpn7xwyvuyynrnd2r6zvx68g7fwcw7dzw","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"dnX0j8GuZZS5ZbwkswmDI/AHos2bLrq1Iw265h+InXt3FsBMjQFSVWNGnE3XvuyxNm1w/sSs8kQvvx0Hnb2AWQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1h6qwe42e7kz44san04elj4n9jrn8rzrarx4e3j","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"UcpwrPZZTiZip00pJ2pJzfiz1QFYzt0qJfK09SvNWvdOhO3WSrjRfgsfeaQgSfiy1FwkkbgeAViFCGfm7SGK1A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g12h2xcem6yqwvym0vd03323q9z9g5l0t3ttg3m5","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"/hhuBDZRdJORfmmt7X+0cDVhXQxFXEhL4HL4lhIM9/IWEuXfTZgz9WGG4C+Lps3mvoEWTo2crlX/iuAxZsGBnQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1scx5dg6m76kr205e7hs2eae28flsz3r7jdmmfs","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"+FXrRMg1qLKyh4bsiyMnnI+/ttU6M0VmCEvL9M3dhMAGPEfBaMHsICr4onXzGVD0GuMSTpKtQcS1zFZ6YEsS/Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g17vqyj2hurh9rscudmjmce3l2zrw05z2zdhwc7k","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"9OpaDFwxCT6+g7H/+Cm3BCqO2JYqVGFmYc2ZqlnLH3QF4P820iVBSeuZEAHngagEgSAt/TjVSTLrUnVkK2hQhg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g16r2gk0fvpsesvjh5hfjqex43ee3ncyq4kwym3p","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"PpHz0a71W8pMrlEnHCcL6Sj8BeNSR0NIRDsfVHlaiFkV96aDTArvLb3W2wnRkduFHPkM9H/K6wlyDjRwC7QMGA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1n576etrtrl699w39um8pf6law67v589pjud2wz","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"poMf8k3lgPpLm8h7Vgp1PWo7DRPUcQcs7YSVzs2vM5QOb1By5ecl5G8XdLZwuMcUgeIa5J8rTaUxyqKOPWCRMg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g19prm80v0vz3uy85ujsngqd6rewwqhef49yqkr4","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"2SOYs1fKTE8HsLSpvHwMFqIMR2zVwxasbnO4WpRdVWx6Xj99OU7sgy2szpvFPck3vnVn+rBSMiDO3Yfyo6Kv7w=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1mn344qdd7ldzu8h8vr3gjrqa9khhvsacf3zqgf","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"DGS1MMfu5SU4NDjW16egik8ST6A7/tqbsYje1Wc5TtZogX7sjBFRretBrzGyrfKLcQmzZ6beHDgh/34qPJ5VeA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1kklz0zjq4esayharw8u54tddqw5vvkrkq2tqt6","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"3byZHh0RHSNVaKZOOUKQKIthK6Mysk2fVARBgnv0pOhWXw8fQNEnF0I44esL06MlLLKBWTuz+446B7vzRtn66w=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1h6qwe42e7kz44san04elj4n9jrn8rzrarx4e3j","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"pUJKQ2QUoK1vpdMYB5iOt/Yj4nCJlMafBCvJy7yVdC4K3C8kCY+H+28BlN1jwMWGMeFRhucRFhMNz1tA3s6l+g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1zldc8uhmegy2nynkh0707aex6cxzpa5qus6fpc","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"NrP5lWofkwivTPHAkNq9VaMezPnftxGw4rMje6O5pUhfvTu6spgf/zp9iU8mgR0Jbu/oPmwPqlMCQolhCqdtBg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1gwpvr73wkxsdt0xexfwfzjzeec020kdwnjaeu2","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"EI0KHCq+fskU4bBhAFtheAxiiUPSAXmFk7scCD2IlwF4LzxCghQIyWTsXSwtZhLqcm9e6urCdX1xaKXbxFT3gw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g16xcn7d8m9udj5dsqghjc4pf4ff5eunsq36e8fs","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"uL7ZMWqvHgJKtPn47zD9lethO6Unn0aynhE7P4Dw1FNci1yG30oVDmaVpn9m3PgfOQZVs6FkKzcAhpNNSolvuQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1dlq6yffq7528dhqkj7yhy0sv0lcngq8k902tlq","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"NlZSdLG14fRIKGkeEJljXACTePedzo7dsJQSGigN73NxFwTpFSMW6iZ7pL5xErO74N1qIDvSuuXLi9G4B16/ww=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1xcx4ylaya723tyce9uaup25gw69am0ulrnedt2","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"jgz434BOVPYEdL4vVZPc1zliEamqM2JC3FW1PtPeZDNKfns0I9+VkTaRZkiX4xnqMmIxXHHDq+tkb3J5Wk0X1g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1q5ac3dhlypms4kngz6jwadc944mzy0nzwcfmkw","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"awLpp+rQ06EasNtx2uwPeryadpsFH3XORFxKRhNUby9pU112qsX/koHMKM3z75LcRETdxWT3ksKSsd/qC6EZKg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1x0wndkk6psf0q9fhfkrddj0k8hhg04d6h5hm45","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"+yy2DODFN2lGpoYrxFBNurtUbUoeDH17YeSiYVT6UHVA7nmOB63cYxEzbKmbWX83851hjXAvENDj9wZAfKXGxA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1wcgt92d7nmanxjlycxc6n70s8v7xmfwlk7hsem","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"lqS3wW2B3U56LwWXjNK1A0DTCIxvhVX1l8q7wwjEqqprLlQFsZHQ95wSNodBv2/Hqd2s7F8y1Mhyi5MVWBXMNw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","giansalex","https://github.com/giansalex"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"528hcVXPdoexREwchPe7T4UQqlY8i17ad54Y3ZKWUAd9fFG0jSBqU8NZzp30cW2xKDj7KkTfI0+o3pTWwxIu7Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1uwfulplqmund66h7we9rmavxh85lwsjhue0gax","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"TevfoeQbgx8uIy00U/h4+E8dLxSryERwiH0+UavqPw8q2tFFknUKfxg2Z2m09lLfLusKULH0meBqYsnYkDLKXQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1h6qwe42e7kz44san04elj4n9jrn8rzrarx4e3j","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"2Sr4HFi2oFc0hbfZWF2LY1UUO7DqQfKxvNaJ3DDw4NRzScR7z5Mp1YdKMTslaSrW8w2UKDwczO+8yS4j3XxcYw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1nuw4vglutgj20taxf5ulgayzzlmqjuyuwcvg86","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"Rt8O5osv2dyY2LE+Kj0xHlgQzkEY9RV5ixf86P56Vv8Nn951unGquVsuAfJ4kmVeC60Bcu7MiaQwOfEm6chiQQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1mxj22a8nhmvwetxd4w4ylwr4ep5n87p67j4ex7","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"siCZv3UjKryqnzCh/pso5k5LGxaP/6l/g40cfYsda0E8PI/l54w7AoW51n74Ys2pyJz9JlmzogTn25lhBpAewA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g19prm80v0vz3uy85ujsngqd6rewwqhef49yqkr4","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"ZUxCp04BOgxELwHxQdc/NBc5Dbi57nonsJ4yOyvysQNX18eIGFd1A39YnPMAdt4bjG8uEK05OHRh7ngHGV+IJQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1e75yydvy5zldw8f334tq4qshetmpqts5hljp74","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"3esQ5b/okD/oAw9ioNrNVKqCI59e1Z3jQeAKuCRfHgoMYNdcwEdwYEjMZFjkVoiUbwqy+u00bK6J3shJlK2WrA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g10dljy6cq8edwn4nydthzh8wwmka9jkva3tnyr9","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"elK3A6NzYgs4U3kAOFUNv3hpCjriZcR+GsnPNJq0OTEZiPFX1kYe/Nyj8tkAtnMCTagtChBvN2Jcj1slqKmQ7g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g16xcn7d8m9udj5dsqghjc4pf4ff5eunsq36e8fs","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"6YLXCloAAbuU3wajArKSFR1S3kpUGMYx2zX/NRjTKEYzeoobMw6Di4l4TcjJLTrkLwHJSwVj8dDrGfINmnL80w=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1h6qwe42e7kz44san04elj4n9jrn8rzrarx4e3j","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"m7LFGS8KDHczbv1tgDnbTNgQIaP/jecTWHW+EZ5U3IwFtSl1KX/l4/X+XGbuRGhLtJ46MJPR7JmOHVntjP0+DQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1mxj22a8nhmvwetxd4w4ylwr4ep5n87p67j4ex7","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"TrOup7c4WzgC66KCqdgeILqqAeYQzQiMPlwkT85lmQkS0wGN/jr7scWtS2amrHKIeMpuhYtdJ+r63HDvy7Fzwg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1fmvc4ja8g5u6z4znngsdfxz5nlgagwfsstfw5q","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"ymC6O44qbDCfPo4i9rcGCCOKUb6iloPSSTGQ1wh/acxcWRjQTEYJsPeQKpRpBYQzPuOtfB5jZ1TUsFnOqvggFA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1mxj22a8nhmvwetxd4w4ylwr4ep5n87p67j4ex7","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"ba9oWcUmitsbq83SpyNXcY7KvwXS5F5sSI3ZvKodsphJxTV8JBGO7aEeehty4FkuC+BdFeTODkjSF7Eewy7gjA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1xmytzxw6wrkrymtwq2l6x3p5vjx25j9ndm3dyp","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"cBYDwU5Y4tS3wvDZfW5O7yEmLQXH5+yBZJZMGifwtkJerzFjgsHjzqLwnN2ks9tl0Z398BexTKf313k3Oo/XBw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g123xx8h9ap2tpy7gen858ku5tcfgel3taxymd76","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"mDIVZ8TSewIHZM7LnJHSbBekJoVRS9fXrwSrN2sFpBI4nOV/LI9ZT76wXzncEptOFM1TNq4r6e2fRedY9GPFvQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1mxj22a8nhmvwetxd4w4ylwr4ep5n87p67j4ex7","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"hgMRFy5xXzMLdNFR8rZxaPCiK7XtmW7q/dvX7IbdTFFhd0gSJ1969eIEEbduD885VgWd2Aym9rB7CdrUYHFNig=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1gwpvr73wkxsdt0xexfwfzjzeec020kdwnjaeu2","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"BCyjRt9QRfnpGQE40l1ge1gxnr6GD4DW9ssTLrwGf0ZHkailwou/qjgk6RVBb6DjLBykD7VkW7QtrQAKdAc65Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1h6qwe42e7kz44san04elj4n9jrn8rzrarx4e3j","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"yRQ4OELHA73wVyg8z2/uRgdF3BQ0qrEeowqboH/wkywfacF79BDKjoqiDk4Q+WYWty/AoDl/YoBzohv2WHbXAw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1uwfulplqmund66h7we9rmavxh85lwsjhue0gax","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"c7C7e6qHJoD4klIVhWd59lYFaZkt+YeiwOidjSrmER4zKw2eldMFBoVdzxXhfujbt7ha9gn+a4llydnf15pREQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1mxj22a8nhmvwetxd4w4ylwr4ep5n87p67j4ex7","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"N/pdCYhAT3bWCNcbkjfcEXVzWqcPBGfYeE9sqT2/88dYiwb40H5Dr5SREdXWcvcRcEXZnyAfTt+h+twP3SQykg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1u52gals5th9udxuxhx4r9cynka69aakdzerrq7","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"PYWt3GBbjE77C6PJ7ydFd9QS68QhPodbhjW1MwEn6jBgeU4LzeZMXvkZ/u6NXcXYdOV2rYOTURZG9czEcCyzoA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g14r9q6ngpyse7u9v7dx4d9m4j3mfd077gpwly46","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"mmamnUGY/9NImVJ7LCm5K/ZaxDk/swYukVKe3N9pr1wZuFmg68nzMN1edE+++Jty4YFtrusMCh1C2OeTJXJ0Rw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g10l08f9g5cj2cns88x72ghtnneey4um7y8ktd9a","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"s5qQYGU4dv26J5z8F/rsgYFs0VGLQ1ldtPviMZXzkXlneUvgWsgNcB5V1r9ev3b0ilR1IlDmTqx0r8dibPZ+oQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g123xx8h9ap2tpy7gen858ku5tcfgel3taxymd76","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"F94UuuE2HlqWx+vDXyfRTtA0+CCfYVXKHIr2l91zXvcDbOaNIG8F9VWjPsgJbSwcIJ8RLwv+XHN1CFTt0huD1A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g144w4rzkxllw7z503qc0svnl3yvq9j8np9zcjny","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"7L8r0XxTaYuzvKx0sZXZ21SbogvyBf55SwSHqEEB/zB5AGL5QX+Ieb07GhOMtzmtAopdMhk9cyQRvYIiKGzL/g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1gxggrff8pqsw9tfrzpz3dphef0g0va68zgw6xu","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"ew0KbqIPrcAg2S10BhBUm50UD+6M9Y5VP/MQAlTHmUEMkXuAnUaWDL2T9xYSmRwLcBH7goFeEU3TZ7C9Qb9kbg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1h6qwe42e7kz44san04elj4n9jrn8rzrarx4e3j","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"/ib4PZIOeKCqDx9YgTQycgmEIbkM9RRNET6Cf/cnkb9mCBA8G8va7oLgBPw0WH/dj5e/5mutvS4Vugl7hRi0Fg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1e75yydvy5zldw8f334tq4qshetmpqts5hljp74","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"92Qoy9btISFE6mu69xMUzgxTabIWEw317pKpi644qudLxObeJ0xRocoX056L70Iate2k9GfrGgddYpgRgmOsWA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1x0wndkk6psf0q9fhfkrddj0k8hhg04d6h5hm45","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"eSN3fo22cnBaou0hzXG+Vh42QwGWL5Ue9Ct/8pe1oGoIgK8+xKnlw5dpraItIemKwBpRtnXvC+3dxfvY15QN5w=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1nuw4vglutgj20taxf5ulgayzzlmqjuyuwcvg86","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"xjZ+jzTWBoHtMOqBS1BcGzvLp+KNiP8StNWDZCwnPsk155l8//zqZcRdaXL6amMV/gVrz3+4hb+z2X7rfcVKbA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g123xx8h9ap2tpy7gen858ku5tcfgel3taxymd76","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"wcjiXTt1yjkmuJNK6cfGLkZg/XWg2OhjKrM8fK0ghzY5pbHv6IXx7qFxL2UEhFRvwcCPh8nqFo1NXnMQ8xcfXA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1gxggrff8pqsw9tfrzpz3dphef0g0va68zgw6xu","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"ZfxSPDyOspjckULM6xsBiK+IKxIHYQCj2+kqz5PXIPEcp58NOGofVzN7z0O8aIs/cDqdXmYPH+lDflcN5aFVGg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1wcgt92d7nmanxjlycxc6n70s8v7xmfwlk7hsem","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"8VBZA876mLPpHS/M75pJ6RtGTkVXnRwm6bvkR0N+NCkmYLgkdUhy2hNvwWmG2A7NN0A+Lg1zpDiQ1yvKzjWTUQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1djvd8958c8plsapcqg3t76n4j27j7zw44uvncw","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"Yl4FMR0gfFCVtWQd0AN1WixYz4Dbuku4YKANmneD2JoobgVfiwedDInL4JOwWjxNbgQW0M9U3IrueBeWUxE3PA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g10dljy6cq8edwn4nydthzh8wwmka9jkva3tnyr9","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"dK+psF3NKUa9aw+WI34SuGxU3CbM7oaw/b/+ODsMJ9Bo3s10ogubimWLrzTkrE7tn0ZY9P6qKKVKiMY3eU/4yg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1dfsjwekhjutzjaw4ttu8z0hf67dwtzege5gr65","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"AyNs5kI14fnkM1584kZrEJBuDyycNzaizVWTTbiAmTBLqFvaIiew0Ysm5BCXHGvXUvIl+UMeBlDWscnWpzTtSA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g10sg64mzjjdxd96t2aphayaug8x5ex453fgnjn3","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"aae3HemugvDYXtSA2yShrbupsOGteCs1eA5CCmt9vnMHh4oxwOxbu5vTPDv1s8iG/3W3TP3Z9B+obQ4wa65TXg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g14r9q6ngpyse7u9v7dx4d9m4j3mfd077gpwly46","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"X/IuqllQ2iCnORjZZ2ZQizoXtLkUNitSmNnpyY38zZ1eNiCRmQz0Qu15L1JQBjS1nZ/wbbejUjU2q9d/mSQZfg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g136y6gj8l7cfz50dlg4mxs7khp8ffr9y5n98zpu","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"wGiZRe/jYQlwgtbiJyDNQJX1VMMSD8RRqCNiiQYY2QlLXckMuUWagcDb6k/KKy1bCyeAtlsRREW5aTzeLS5p7w=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1v4ateecerxjm7200dv2k3khyhqglltm9a9lduv","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"PFnIU3vnEdeTMQsaUfZaxhu2uHJKL+DZ+Wp4OWxuyv4cebftCCdHMI/R6SJWFdJr4Xrw2huTbk/DTz6RSEz+5g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1g7w5439hlytvfrpd68grak6ulzjak450c0e3ft","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"UytfgPgi5Flokwj18gakfQyES88gdSgUOOzM83YicfZwcAMiTIfGbuR5pXCNKf/D5fWv7xIyXK9pLNdMWAxHeg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1gwpvr73wkxsdt0xexfwfzjzeec020kdwnjaeu2","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"rBFAEr6v/N6F5ckywTOOCQpFEVBZSOx+Zs2apCrTvo4aNNq15vOQB0nRpNk7NhzuKD3WIqa4gLoYyWm47MxaxA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1xcx4ylaya723tyce9uaup25gw69am0ulrnedt2","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"UOMDzriHKajHwG4kTAAhy4BUSEHFiaetY9/xx2jflQBPkCFlOyR+vZuRuNUEsUN9/CDCuvFfVe3gcml7TJsrtA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1g7w5439hlytvfrpd68grak6ulzjak450c0e3ft","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"1Z61fhte0GCQ++47R9YAs+MoHm68BCePvA0Nr7vU2hx6alg+5jS8LcocKOnGyNQXdwUmPqaJNwnIFclCr7YltA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1dfsjwekhjutzjaw4ttu8z0hf67dwtzege5gr65","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"vXkaWe/nO/kzZQqNnnUBVRpjXDssE6kifqPW8k79UZddsbHR/Q9Df7Up30ZBo68Zxq/Smecaws0U05hIxM5Tag=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1xmytzxw6wrkrymtwq2l6x3p5vjx25j9ndm3dyp","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"9KJbTYO2J0h+LOrBS1Gfg+SylAPEJaD3Sd4E+FlyTRpo5WRhez5rIXiQVNtNUADYdVzPTO62eiOB2rWqdkt9iA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1wcgt92d7nmanxjlycxc6n70s8v7xmfwlk7hsem","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"F82boGEIWmEGVX3Bb9Zb3ta7y+lhiEpqdZpqRqXRWQM7Hb/sgvg770nvY9fc+HRtBFkI0WEWmxHIkgo42ChXrA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1wtwz3jetj6hmjlwnu4pv0flc3t8th8kd690hal","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"823+3Pb1dmcqpvf7FcNP/8u9AxO9t3lM4T2eeVGHZcdH8woGyarztpKYQXVWjFKUGzPMqr5pfxLjr1fT8ccMEA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1mn344qdd7ldzu8h8vr3gjrqa9khhvsacf3zqgf","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"AqlJcua1lXkJD9u84Mzd3pKaKrpYz//Iv+cBGGD8dCgYJutybcw9eXPxsg4KberFXxuxgeqOpgXocIQ7Yem6vg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1gxggrff8pqsw9tfrzpz3dphef0g0va68zgw6xu","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"Iwfa+ikaW8DrUeDkUhWBfyqzm5xdXuVMzeqrXf/Rz6Y+2HgtlDr+XqKjZIq3DCLFLIFMzghqmm1Dc0gCryCJiw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1zxkqga6x0xadkyy4kvc50j069ad9ve0yzltv85","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"iDwFvsYOUcK5FUMfxHyry0kAlsu3//2hylBYfZl6KK4uI1aG4InryZ2rW3w3iMrSk23vQx4JRPYYEjWnsIvx8g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1nxr45s0awz8x9thdm8gwqqfvj8lud8aus8ns5t","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"rVXsrvNKELFkpmJghEPHsyE14L2IStvTiCii/sDs4+pBxRAZTJK8telCzBv4QmYG6cF9Cy86eLTHxjB3NAn6NA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1e75yydvy5zldw8f334tq4qshetmpqts5hljp74","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"Wqc4PDkqZQwZ0nFe1NV93X4DMlYGwX5bQOAPFmZ4WMBQdeabCCe3EAC34xKBVmQhGoUR9+KjFXeJOpq4c++vrQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1dfsjwekhjutzjaw4ttu8z0hf67dwtzege5gr65","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"+HceBloHE3yTrW306qB3qlP3ZKO+m1UAoeYgeKzVQ3x+tjoRdwiyYundOj2vMCP+Va/XgM9GgYIdezzUZ18IGA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g14r9q6ngpyse7u9v7dx4d9m4j3mfd077gpwly46","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"UwvxBY6HA4wvg1Alb/Ak6aQXqIO1oLqLPFSvpg1Bm9kjHAlk0Wh2vz0VIVADIrjPKb9wganRIiHNaiDB3lGcHA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1sj39lmg9hy67agd7wwxwkerp4w4wgmuyxvj4mt","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"veT16z9dKD4Dnn+KPvW/Ydx9xfZLnKz1IunJ+bEDv/gz5zPhvanewb+XRkHE7DcCN8pUI8CHV9T/G/1XMNJhBA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g10dljy6cq8edwn4nydthzh8wwmka9jkva3tnyr9","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"jR4cK/hW/dack8KuehCW28Tvb1J2vuEUNYNormUhlKZ+tEAAoRESyb9v0NZUK2s+6qaRMVYCqjSFJ0SOUJsUHg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1u52gals5th9udxuxhx4r9cynka69aakdzerrq7","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"IC7mOzKki5dK36oguhF6yDuXDC6DpnryK60+HfGseExopaFU8f0MnZqnPuWWf1PwHK/dq2VkiSm6Z7dzK9tRAw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g103ekz0j5v4wjwl2mzt8r0p3j3zhpt7zehyegu7","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"lPATQSfRBZgRi6hqluCSVZptfbZH+x/poD95Ua4p5LMgBOt1fG+vodTHgzP5sg3PZPcHpzthCcLIYi8hADYlEQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1n576etrtrl699w39um8pf6law67v589pjud2wz","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"5yBSbPt14Pc7+SVQaJNCdv1HV3FfxcDn0K5YaQtwTl0wfIV3jkfy6CZlDDwue2TnMolfyMLLE6qkxTRCb3BFPw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1zxkqga6x0xadkyy4kvc50j069ad9ve0yzltv85","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"z3yNpNbA2WpDy+3TTvJGqV6giv05GHyJJp5/Mzy8vPdNzOh6RNSrYHz+L+LNboJKlR9Bwfqh9GWF/4k4RebiPQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1yym6v5gpknu4utsa4vxvjad548k4hswvngytcs","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"K+xqbCwBzo3jZBjDQ4w0BUbUw1t9QEcIW8IV45BvRqA4VEuUAE9GyIKHTJn6aA8/o95IMbxgXkbFS4vdDDwI2g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1pakghcftjam82nuhl0d282f3an3un6j62wkfts","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"qMEbb3kjqTerFjEly55nfDjh8ZNBOCXlgeCoBmnRkmNZIZPLq65Ycxt1IVOPjnXV2VNsryoyf+06K76omSJ3oA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1gwpvr73wkxsdt0xexfwfzjzeec020kdwnjaeu2","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"omE0HeRMCQmg02RrxEZgJgJbzw4SM0eDoIH3nHn/InRVFtkwqHb9eXccjt2DbsIP4vYRN16ckoqtniQx6NtcLQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1xcx4ylaya723tyce9uaup25gw69am0ulrnedt2","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"ZfEL1PfylPISak5mYLPJ6HfF1QOK4MxXJ52NTNJtqNIPgcdHJyOw7ECAyYEbmsZzNEUhAJPTR7F+VZh5o17xiQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1w8fxz3f4wg8k3q9d3uskvryfwgx5afrqq0l0c3","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"aNWLs9PKe2wuKMkXHL90dBPvbLSYxeZI8tsLBn0S8eIoZSqshzwt2MeSqC19ALQpxh3KxvRRvg7tQZlmzRWBUw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1pakghcftjam82nuhl0d282f3an3un6j62wkfts","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"JMa2966zLiasJbEKghnGIk5rZw05WBm6qGVkgoMgUZV72YAo0nhfJhDVycDLj5/STKqZhwG5YQZ7dcbbQOCK1w=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1h6qwe42e7kz44san04elj4n9jrn8rzrarx4e3j","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"qhzXJyZzGn0BOOyKAonqXaHbdWs2zLdsjQS2HULkmxBDKqC8vFgYvCpPQUig/F0zJpDUe8tBsttluBZdG5eVZA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1pakghcftjam82nuhl0d282f3an3un6j62wkfts","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"6KioAIKOPLvMUnJCUx1bdIGlnVdiM4QBf6s5bMMA6H9MAWqm+7k+KW4ZULN4nVaqL6Wbjut2OfiRl7ZaFj9KEg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1xmytzxw6wrkrymtwq2l6x3p5vjx25j9ndm3dyp","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"zrfTaDnTIGlp39e4747gH05aYJcEyAkF7teAyrZeM+838Q4EwRn4Z/xg2tx/iAUYxAMezYtvXPPoBVkIU0JsdQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1yym6v5gpknu4utsa4vxvjad548k4hswvngytcs","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"KDkTS050/RvoYCnvRzUICKd62SSlES+ZrmxdLm3dh390V1XtDURS7IajrAH3Psd63CVcH2C9YfDhjKWzd80DJg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1mn344qdd7ldzu8h8vr3gjrqa9khhvsacf3zqgf","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"aZfEqyx9hnfWxaNABzrCDWOjdSBhfH5JcZ/wN7u362wzv/DNqOGrGeVXg15BTHZCDVNA91NZpGV96HqgSyIYsQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1lchr8py6u5hc2qrewretnfkedszstu7nacs3ve","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"yqVaCsIzuuRWkkRYpKOSZbMKUEugnbSW2pwO307qBKFr6YcHR4hTBigI5zpgBOd7UH2elhADXKssOT5YJLys9A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1n576etrtrl699w39um8pf6law67v589pjud2wz","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"U3Gsh00GqTyUUcfr7OMGWJo9bFDv0a7qCDiv8p0p9jVTbgSJiCy8rJQrcP4Tz775td+QQ+BiBSdESosVjb/qmw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1lchr8py6u5hc2qrewretnfkedszstu7nacs3ve","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"1kT0xgE4EKmO/Mc1XhIluvYe3WdXlSB0DqfE3K9zKigvmxW/wr1SnOm3GMZdx8n6yMochtUVHS2sNQH8WTtgRg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g10dljy6cq8edwn4nydthzh8wwmka9jkva3tnyr9","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"1+yl47u1pd6DesmsYwCsay1wQ1MH4XnntlJaDxXILh9+IxUjuPh2pVrkuMkKE7sVD4Bkm2Y6wcn6iO5pH8PdNw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1lchr8py6u5hc2qrewretnfkedszstu7nacs3ve","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"ImBKFrriEXFKx1ojp3nSlOQO+woKZGmVAwjC+T+pGycnMcVnnZgsbRU0UotOLh8uD4iutS/APgMvqDLmwLMeGw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1fc406se2h5hqcwh82jq2jv2xvtg3k75gtldjz6","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"Il73sBVudY0UbRFpoHCZblT8AfefTKrOAY1HFSycP/pvUK+hoFAUnRhrJIPJGy7W+bGkyWG/d7SU2Xw9J+sgkw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1yqheq2rgrne6tarua49xq0nyluexg9fr4hkdne","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"3C7nDtcUyBStDF44Xdo+xZtMgvpDHbDokhGf4zv17IYfg6nmHbrSeslaU1fG0toGlOMAhaOxhnpZ+LpGj4VA4w=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1yym6v5gpknu4utsa4vxvjad548k4hswvngytcs","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"WoDV/wcgTbNivPH91ZG596mRmMsBIXd6UDEDB4LTvzQkI6e7uizuVV8AlLjYGgFEv8cSCKXiW0Ueg2QJ3s3AOA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1u52gals5th9udxuxhx4r9cynka69aakdzerrq7","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"pgtmPp9E9kTw0BON5qmkT+IIyPDH3VOw0oj+RKpuvuULch6GpT3f1MdgxWzSCoWZSKOsX4PNqIRp8sNbKlc0mw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1v66yfqf6wpufppcvk6wlgt63t6ml9qzajr89hy","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"+MZ1IZ09nD/LMeSQbOBOAgt34zOBUO4CQCBwJ+/lgfA+RyoobITVJNbvUMpkYuU5AI3+s6hlpNtdGB76Ds+9CQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1zxkqga6x0xadkyy4kvc50j069ad9ve0yzltv85","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"1+SzBpak/51wU7t48CZpQ5vaYWb5I9HGdm1MkqSOQw5xZQMPaqNsIdlyc4IAIDSro1upszVANPbAUKvverc/Gw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1xtn8e8rcs0860rzkcq6gj9rql5ewft5dw0mj8t","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"OAxpD1is1HGcjD8qpHhSm3DF8TdK1gk0k/ihaLpgNVETrQ9ZQViUCRLiHYlBMvhupjZXfSp02FwrtgRrTqUNGQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1e75yydvy5zldw8f334tq4qshetmpqts5hljp74","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"SSRR6IN3URbYasIphGDHlK2YDIO1AG4jD2xBemiDHV5lqamg65pxb+yuvJ8Od38I0tG3vBDKWeR6qQ2P83AAzA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g13qxwp9wj2n9c5vut5fdsdltvj80jcz5den2hkp","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"7Lu/hw+oUqoQ4uCCxbFIKzzDjSVdIFu6nIOEWAi1VS8bX5EqnkplepEE8pddY8RLsZ9JER+8lav+gUtG3o9EvA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g14r9q6ngpyse7u9v7dx4d9m4j3mfd077gpwly46","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"91S5/1TsfQjLm5BK1NYen901O8XH3Yd4+P9UnIjJY4hRoggirtb9egnxfzc7aChUF7ifvnHSVCGPVenj5SjinA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1x0wndkk6psf0q9fhfkrddj0k8hhg04d6h5hm45","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"OZuLKYyNreIANaa+o+EjQHEkulQmkwUM4hTcxvUzq+A6oaAnHESm8klMdRlBr9ooANQ3oY9tcUmNcMNkBCCtLA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1nuw4vglutgj20taxf5ulgayzzlmqjuyuwcvg86","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"6lAlHA1prpL24ZU3QMzu0cSypQEy+KI0L3jD47X2aBATwNrZv62/j4ISQkOHkuYqOxL313WqEXHnHKjx2mZcFA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1x5gwpurng5003w8g96ejkv7hwfpw6y87nxqyg4","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"G4E1knGJ97cPMSVNdaxnqtLlb97Tw0NzsjnaUs7gQTwpb74wepQFygE79NIZgWOCnajL2+vvyLLy2l63IJEFKA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1v66yfqf6wpufppcvk6wlgt63t6ml9qzajr89hy","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"fUWLAvBbaKFPmmjYPZTWn7jWRKz13KaYmpJPpOyeEzk/S2sYp8iireGPAiyDZSsqhD0yPmXIUKTabVrCWEmg5w=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1x0wndkk6psf0q9fhfkrddj0k8hhg04d6h5hm45","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"ZrOWgS43Zikz4QN0/RB9XyTpOE77KWgbE/fytSTISygqtWLD0HHLH1GZcnFPGLbMWbhoXDiCrCenlyQuTGXsjw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1x5gwpurng5003w8g96ejkv7hwfpw6y87nxqyg4","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"AsT5guzxLFD2MV9ZMV3ppwMPwQJomooHCclvPzpP+JVdyr2oJGg/xuQrVs0Cjv2OsIh04r6uvVxm+J5aFqLqCg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g14r9q6ngpyse7u9v7dx4d9m4j3mfd077gpwly46","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"A0NbvST/1tkm1Qlv8QMYysMTF544AECggICztHnIqzBj/+h3ga+E83y9Lnnr9aS4ZUpWvM536GyK7wzDO3jYTg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1gwpvr73wkxsdt0xexfwfzjzeec020kdwnjaeu2","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"jIn9uuLkxn4PZVYGOzs79xFZXzG9KYKCwacjrchYdBcR+j9/qB/WDiJS25a0fyqOWiK3aolDiooqF6u+JygnUA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1xcx4ylaya723tyce9uaup25gw69am0ulrnedt2","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"TSh7B5H6HMpZmUdHQRXz2SWyf/QcP0WV7m0hdVjNCacbOMYPs9NdFOLa+IzsqVXD6VCfny6k0MWxxF1gaVr3GQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1x0wndkk6psf0q9fhfkrddj0k8hhg04d6h5hm45","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"+fD+Z4tElv3dGjUwWkN/n190UnERW3+ufwkq1EmkoMIomphwiqzY5AARDKzS+xAmTcBNZFliaPO8Bb0+4xzVyA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g135mkz0m7xqzvppt2jvdmn2ngzdz9gnvgy96sc3","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"G+7xM7hVJYNha/+Qh9UquaUyXv9lLVIKemDis0GrbNssaMrIcyxwSIY2ODDiNgV8h+0hs6X1NvwAssDtZq6Jog=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1vuqp4fygcej2ezl43jw99v6p6nymyv34jf7h34","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"DIoQjLGDK2gkxqDoute/5vhlXiK17pNY8z/Q5IikZ51sx9M5YNnRU8NmCAsUunsRzbm6CmKOehYaUvwaN1FZlQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g10dljy6cq8edwn4nydthzh8wwmka9jkva3tnyr9","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"MV3oAhWydkUZCd9CuOsex40/pVV7wNkHO7aD3efEsFdSYBcPVikE1dHddwcb9OkqKVmlpDKWJS2OTMaPSCxm6w=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1lffdnkd43cgr3fugjagczs3ak2dt4ctajsxzv7","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"nl5/OugHTJqUJXb1HZPy58CIWI6gbUxku26SATmae0l+rY3TFR4UlH/GR+ebHFT70Uid6RSZjDkQFWq5k/eSEw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1u52gals5th9udxuxhx4r9cynka69aakdzerrq7","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"hY+0wO9njm5Tz1Y0IiL0SQGC6b/4ix3BN2oCv3O+93czYLTcyDpCHIDfVdfZrXyFHud9bZbdEdjLI3DM5d9MJQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g14r9q6ngpyse7u9v7dx4d9m4j3mfd077gpwly46","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"ijZLQfEoiVjAC6X7GRQ+6dHREI3X5MQw7v/lHLP7Y4tSkEmhGnTKmqMknxjKh55JG/rQ7iBjuRbMHy1uPnVnRw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g135mkz0m7xqzvppt2jvdmn2ngzdz9gnvgy96sc3","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"mUTAV33hVGK890Ln8+IkNv7bm2SVdneE9ihlwFdbILQYTcnW+H6mTL1/3YS5aiQEdw/ylktSqhV89DvgDlocPQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1vuqp4fygcej2ezl43jw99v6p6nymyv34jf7h34","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"/Y+S5/yWOk/lCgXiEuiSdKKqAYlJ9KIWgz7TXp5ZxEVq/ewyIDI9Qa/kRQADAey7SJ1UKZVnkQC68JUMsFit8g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g14r9q6ngpyse7u9v7dx4d9m4j3mfd077gpwly46","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"5TZ5dewB3294+Fivy4eYtshAW92f8ZQMx7xJ4cB+LTxxxynfztONaalbzBc5aPwDKrn8Be8l6w+96Sd5Wwv0BA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1e75yydvy5zldw8f334tq4qshetmpqts5hljp74","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"8iNmt+2qfIHVD5NuyTA+vVAfcBjaTpq45DRkDFfO3DVp8SkDWNQ6qWNeHMktrOyMPAcuCQQZKwff6sudf8NtEQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1a94a69q2qchz7ws4n26hesaezyv7fh5yjagtqj","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"QFc/t4aWqE6jKnMFucwETb0YqgrR4Yua+McWecu9yYJQAhmiaQqP5Z5dEBH9DEBNBgUq6/Xqcj4g6QIQkckHZQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1nuw4vglutgj20taxf5ulgayzzlmqjuyuwcvg86","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"wPqIklgfwwrG9IRablhoCYY9wcMZ03RSDMlHLdmImt8KFFioSC6L+kNXie+ubM3mVSClXkXxzwPHb9ZOIGyjYA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1nz7nm0hz4y4kk2lzq2l3chvltw6wss2ep8fx27","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"x6tTg31Pc2vtxxvIKfJRSJ17Tw+EiPkxwIqtpKlzzWI5Qm94q78aSw1HBvRjIt/uz50xOcLIBBJoJ9+umVe9wg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1zvtujh8dcc579a3s75ya067uqdy5j3gesag9xl","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"kECkA4rle+QSsPVIBQWKw0RMJYtP8vD2Jf3UKy/iBG95haAldRhq/6hlXfXu8dEVuPU0QdDyS/h3v5Q7/9U+bA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1wcgt92d7nmanxjlycxc6n70s8v7xmfwlk7hsem","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"lciT+QVysZmwjzFuSRWUFqtAt+If8Uhi5a/GkM1Ea0lFo+SW6qBtLtZXlqtT3ORAMYRNTLtQWLQNmi/ocoiZqg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1ju9zqdf7kgc5jwj29h4749e4j0svekg6zhgzxy","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"f216m/csG74qjBYyOvo/8lE/+urqMSPQ5sAkquZTrTYOaFP1YUObdEv/n4dm+AlwzQhx6Jsyy2MbZYGguYIpzQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1mwhshg9pyx70c7gh4ppm62zc0vx9f6da99zlcs","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"u5gsa2b64KJB2imWaNB28yYAqDMnwbsdWqk+rvPlgY4uOkhDX+xNh4az8Q/EHa1R8/5/XN4fY0SOXV/mLswYDg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1t7m25lecmk2xtmwqrhs4sgmdz44njun45vpxm7","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"gjK63QFMDOYJlbVH31BpEy7hgMC85BhnDpsL2WiyhW5rW/xBmwU5MQwviYVsxmAa9WRGDregggNh+1V9fLCIlA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1esk3zpug2888hh0jqafv77dfnm7tjac74ac2jr","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"c9J8YkwCboD/sqdazZ5mScD/0hcYUlOlJrfNyYHSGX5WD4JTVUWx0Ytrip//5OMxuzQVs8+BAfjRHR88VFwJLw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1skt2dft7vwfw24f4f7auqqp46chpem8w92ucns","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"rxhP4V+A6in8HfzXvnSjPRFNDZx+//cyFiMRJZtFzxgKY3WH63xsQLDjDi2+2z8If18BlsQqCalA1y9bsfdf+A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1cyg5m9swdd8ahdvl3npm0a2ckjqhamwcme7elv","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"AyTSY13IvNo14bkRLRjapBZVDbCzq5/sfhyNkCL3oLF8k/Shh6sLJ47MKq3ExsRNlAMcIyLo/dWa/Sr+bDaPUg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1xmytzxw6wrkrymtwq2l6x3p5vjx25j9ndm3dyp","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"L/syhEG0iwqpK/LhjW27D820nnViX7kO95i/qg/yKYEDtKmGQw0qWkvbIu6LHhEA0E3DpIOgIEYplOdypX3Z0g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1254ngqugr4qvgd8qvxx8qh253uzv5crv5x43ts","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"f7zs7QtAsppcDit8zV85N+DE4+v4gD1h9Hw6bgZGdJBWOqX9ey6rnZf6CXK+fQ/FElxYX+4NTlmzOvfHsrG8ig=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1q6szz234cte0xh78lm86azdqvdaff9z8rmhaqd","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"I6TLEFViQqBEdOMl6/aPUymgZHWtdVdDJei6CiIrK1J3t+Y5lCGCd6xA282EpI7p9UGGQ8V4jgbtmPjgmnpjcQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1z9lj2aau929kmva3m92xwl694pvfrn29y4lns4","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"j/zidfJYyja9dlteoDmIPhLFqt+5BI9sm+Tb18tIYpokzkhIzo8lYeFR9ozUQpf4LOEm1fOHpdJguGYjp+B+UQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1254ngqugr4qvgd8qvxx8qh253uzv5crv5x43ts","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"kYXdRykCOeSpILpwBxASc5u2bIhT1AHq48EweuDMFttd2Uc9+uDjD7yHLadtJEr/KsFp4lgXWZii/VMGRbnPKA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1gwpvr73wkxsdt0xexfwfzjzeec020kdwnjaeu2","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"XelgLp/T0Ebkb3vbnL4+E1nIMm/X8Zje3Dovlt++nq88JImIK7354zlxBoT0amlkI2QaBVzE6qjRqDXl//LtDw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g15yjzzgh5dttj5t58zyu5epfdnm3p7tzdypfuj6","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"fyE0SIjzx91ZzG6xs5ev//PJDJT3YzKnuHceP2Ht/6UIxuv8i3N2SsM4mKx5ZdTyi9bcMvvDch4gAYc2+zao4g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1254ngqugr4qvgd8qvxx8qh253uzv5crv5x43ts","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"++4sgunZSP7kx7jFaj2xv/Up28XuHsTux4aY/unlimE2eLXG4mbenxh1gTUUkhAnqOVjEoVxkpW0fpme7huq3A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1gwpvr73wkxsdt0xexfwfzjzeec020kdwnjaeu2","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"qx4Tw03dRZR+KP96UjZFXeFF2CRnzhAMewmKex3mJRBwBnQBU/c+4giNxg/keyKjaGNFW3SrCexaa3cTL/MZtw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1xmytzxw6wrkrymtwq2l6x3p5vjx25j9ndm3dyp","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"s4Za9FeqwhcClfQKmwgss4bqlBSQZU310mrGtJgSaEoHK/3unyasc2CAH+1GwQVe7EuccYITh4Tu2SFfwN9VxQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g13k26a9mtx625wekxlnh8kln9a72nx5yh4z46wt","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"IuIhJ3FyZA4EzARvUEqjj4ZjhhCgMl4zH3zCMjd4dhwzSoG4aVkbZh4BWPd3Vn9S9uOiGFA4RPdNtYIPcTmuHg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1alqvus032zdkz0lta53um75skfpa7kdp9n3she","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"E+HMnDy5Lg+QaUWRQT5pEOEZ9JipQJCDyKNZZf+IKylKmNT+yts9x3HEZskC+8mfo9acb+bMqnjW6sNr9xVLwg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1z930vmnj9fxedyyp54f2d8ezde6uyjwssxeh4v","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"MD+iO7VrtFFDbS2vm8ZgG/dVyBIikXBKTFARn3Dyf5EgtM3+6gmiwoBzNfrsPmQLNJONPz3/RV9o+Cbl6R0mmQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1kvav9qa0tugcnnqc3h39ma6jqqndn6zr5eepqx","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"KSod5pQyqlwqfy1duJ3rtFRPFzcP/pxd9H8PwmdLRlI+8JFDYj0JsMFWOTcVzdVMG4SXzQRk6NNJ7BwwkFJxcQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g183x2sjvfdx7c37nqzpk0s0xn6wy7ny0lktnazv","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"sabx1LOeApg8sYDa3EM244Cb9bUOMToyCmvc0wfYe3IvvRD5013v/xW1yMx+bxv/UGqhQZQfJnJ7VS+xFU/Kxw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1xcx4ylaya723tyce9uaup25gw69am0ulrnedt2","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"pfrZAAgsfzmkDO0tZVHNlYjvhB7fG0k1fvPm1L+CgLlHBoh2MgEJ+emTbPBL+DSGSkPPzXnPtU6EVpx58zPqvQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1upfq4h8sd7p22qwe8y4nwvxnxz2ytfmww7zt4e","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"P7h/Y3vvdKRqxzF1G6QiA9EgUEPkNVQ0P3+BlRdtHepdp63yqLW408KywbNSHzx+I+qVS3kmtuRfcZgAE+K9/A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1alqvus032zdkz0lta53um75skfpa7kdp9n3she","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"7xEBOKem0133xsNwYYBAk1OxlM0DGUKFO8CTDl+mzARNNEPc/8BnQ4zhLih0r7pmH1non3Thke6XU/xst6UBqw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1z930vmnj9fxedyyp54f2d8ezde6uyjwssxeh4v","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"oOeDSRvtz0uKmSuisO/Td2r8sbJEahfQEfQUuQvTmv49N4bE0e4XOHyYq9aNIt67Y9RqbkGaCiEjy7YQRzN2Ag=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g15yjzzgh5dttj5t58zyu5epfdnm3p7tzdypfuj6","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"VdDS0peGr6rYi6juzqhnjfxkcb5/zNoodrMTT3ySnWAhOOxqllzIi3gOxkk1aYxKbb5DADfnuQyd3Uf3DX64hQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1upfq4h8sd7p22qwe8y4nwvxnxz2ytfmww7zt4e","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"Paq/jjtlcaeHEeboG4zZe6E6sWzIKRfpLTjF0T92KKc28Ph351/yvjNH5M5cEfijWL8L1zhIh8w4G1tdQpemgw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1e75yydvy5zldw8f334tq4qshetmpqts5hljp74","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"avNE/gdtV0MfwyPYBdhn1RCqJEt7Sw98TtSjGlS23G1gr091DoM8oN0pLnxgrHVK1kJDDKnFToZVAY+HxU0Ncw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1upfq4h8sd7p22qwe8y4nwvxnxz2ytfmww7zt4e","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"2XzBwDr2+rolTAiZNaiRhF5+2C7mRTFHqpQRVKl+H8Uqsz6g1eEIxj4gX1qlB86f5PzYfDdlHe+rZgO+McRNbw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1mwhshg9pyx70c7gh4ppm62zc0vx9f6da99zlcs","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"SHwT+a9tlF5h2SQUzr+Ba2gHlvL7+dH+82bcqTGQw/gb2F5FqJcGNvY87Ym8me04qtm1zCKjhHZvQ9HMPNHHsw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1alqvus032zdkz0lta53um75skfpa7kdp9n3she","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"RYWdCpk0eXkSgyMvLjKCK0aQQjY8yBrxvcvv76oMw9QQzXLvc0BuTjLl+iMEOLdH5kN7/Ch6W4hJhJUeWq7LzQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1upfq4h8sd7p22qwe8y4nwvxnxz2ytfmww7zt4e","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"L03vXDc5ki4maccqIGvN4o1F6yZ37SVD61EWOxXZhzA2b4SJR2vGeh7aLm1d6sGblAyw6H5+PIWXEsFaVAznYA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g19xvt3qfu6wqgw0p0vsrws770cuf49k2svjhv3z","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"KB9IzPm4V4v9XeELoEzsRJ7yTMQcMWdvVvc5L1mlOYxo4XuyIHqrwbA994CnnWmyjNWFs4tYSSJsaDarCB0RNQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1upfq4h8sd7p22qwe8y4nwvxnxz2ytfmww7zt4e","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"GwPM7d5Ee2xsWHZcuFpMDLy67rp1H5iRFpi8bb+v2uRSQlgZGcEuuKc+WHoyFrQbjJk7dg2H4fVOLx9C2tGAuQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1alqvus032zdkz0lta53um75skfpa7kdp9n3she","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"UR6dtl2Ruj5brkCAqDYWavxHhcd/+OR2Dfs0kESTAp4lxnVv4V3U+MhFV+yUNH3Mp3sbHvqb/CcmQxr3cLfW7A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1h8kus20uv9669qncgjftzawe2z0l5vaef2q8yw","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"+2VT8ZTigLfLxdHbj3dBmjiRwlHRP0dNDzXuwvXUBqksbOCU85oO7Ahhczo9ujRFhXwE+woH3OzS+lxw8sOzNg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1wcgt92d7nmanxjlycxc6n70s8v7xmfwlk7hsem","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"D3RKk9zD48aBysFE0fzuiYX6HMIBVBTvBUqlxpopU5N9wTuYxXTxLIHxVGQ219sT89+laNg4BI0e0A/OsHCfcQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g17zpplyaldrmjzquvk88snnzxg70nz3nth0xxye","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"MF7iyZGAvPBhzEsKPBMo6LqzL9UuLzelS6gp9Dl0f3QTR8yHLQEqEniOVWKwCWocPmlvsTXXRUc/7uX7sRtkmg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g15xjx7m4qfeuh8g9jn289frr8p6q6j5046sdpqr","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"tT0CXobBNZ5dqpBbEiu2O3caiufgH8daBNPBR3aUwjpTfPOvD0xAB1ZOgZfUCHDldAbF8S5XSxn2xec8za6/nQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1h8kus20uv9669qncgjftzawe2z0l5vaef2q8yw","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"o4fA5psjkyK3ZH75kqIZ+PxKSjWHknq7bzkPXSH2+mNDV8LjcOr/zdR1zamWmRMojDRoUFkCgUUNG7vwC80epg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g12c0wzrj5ce84ujdx860kx7ud2zxfjhqw7jqueg","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"KVqAYEE/B2apX4xfWcvK4o4MRE4gBRe41DBNfc3i0YcxbHpw9yfVhLtvRiQtHid1SwSuvhU0dDziozmZZiXZ0g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1upfq4h8sd7p22qwe8y4nwvxnxz2ytfmww7zt4e","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"p8ofzZjo6811A6jw5b8rSJlQILa0M8qef/GW2Ursxrd9ZUR6odYsQVvLrzvDmEGpSTfFo0N4mSM35XYyKm1fBw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1fmcfejk4llzfys7jtmjw04q0kzm57673tqu2we","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"EDRmoswypLP4vvgmHtETg+be+qnFgwKoes9WpAwy1fBHbe4VIAeRCSgBB2DtC5XNd1iFlUZc01a3lMKarniMeg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1upfq4h8sd7p22qwe8y4nwvxnxz2ytfmww7zt4e","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"hRcsRE5sfe2vnK8HCCWQk7BSDybARACM9lo7kySnNZs5XSaDfib01pFJzpXFJHxX0nZ138WddH52ELR6PBMkjQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1mn344qdd7ldzu8h8vr3gjrqa9khhvsacf3zqgf","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"h+meBifjJdNrGtVVd9BMVOO65Jg3BbM1VceKsqG42cBJH3yB7ufe+3xILdHPU/iWXFcwFN2SGWT79EX5jEh9lQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1s42t5hlmxx4p3fvppu2w4awfnj7cpf3v0m58gj","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"u6SuVIdADBoxcvwAvZEGVWODCTEcC0V6tiHtzicnx9hSZonEiJMl91n9VGuSGd7WVry0qLKuz9X1QoDWZ10JNQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1kzyrhy0cqjq28gr3x9le873aafwwt4cvr59dck","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"/q+5yHdau5zwsyZINKx8BEjYt2vaw0hQP+lcgRcC3vNqWoQCCOVUA/IPsjyqCkP6QZbG+YaSG6AzcjYxjhkDhg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1upfq4h8sd7p22qwe8y4nwvxnxz2ytfmww7zt4e","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"AYTUH6RUS/EZgxZppXOZ+45Et/t8EseXNEBgE+vjD/EFMwQlCZnYNG5PBCOtgrFKu02v0JaIWpfsdcYyZF0YEg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1kzyrhy0cqjq28gr3x9le873aafwwt4cvr59dck","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"TWq5XRhyPGdTo+/UH3aL+Q5B3FdgDVlmO8NibNDjRNF8ok2fYUxG5E3j0XCQoUO66saYuGqB6cnSarjVSy7WmA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1s42t5hlmxx4p3fvppu2w4awfnj7cpf3v0m58gj","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"kgnKPWGPhzyQJ1wmifImkmZnXqC9B/FriWXTGenBJdwSOE+as/OwHp1r9RJZHVONGOywfFYpKIA/roXXY2RN8g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1upfq4h8sd7p22qwe8y4nwvxnxz2ytfmww7zt4e","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"GhcB4dAi9gU2kvqetAwxgwsRpqAxdKaH/Ni2ASQZnF0TANo/ZVrG+DV/0Zdhhq7lnXJmgsCpvs0VUxjPfanrWg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1upfq4h8sd7p22qwe8y4nwvxnxz2ytfmww7zt4e","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"p7WQSqBleT6vu0iLKkPf5q3t0Ah1cZ441JABBxnuNGFi4BGcO8cgMhIQLnXQqrVwGA8v6XVs6phwqVyhUsRupQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1gwpvr73wkxsdt0xexfwfzjzeec020kdwnjaeu2","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"SEBMta9RATemNKGzBUHmAyzlf34Zm2c4Zyj7y3duLOoNlVy8cg3J1HUh9+4ERe4aqDc1ARZsgh4V40LOn9HpKg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1wefl2vpgeqd6gc7tezxlv6gqadqc4csyw6z2s6","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"EJD4/6Yqf1hk0noLurE3PeSeSzW0xmCfx78jcXlqNbcgH9OhrFYuhip0UBRAXO30l/BwpMS5NsN51qrixaCgzA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1s42t5hlmxx4p3fvppu2w4awfnj7cpf3v0m58gj","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"8hh/bmxzp/G9b4Y6OFuZWnON1veT0W8bAd+v2eczRxIh5GJKtt7RpS6feRvBQCRmeETP4Qr3rC6oaEPV4kTLfw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1upfq4h8sd7p22qwe8y4nwvxnxz2ytfmww7zt4e","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"JhenIufNXmyDKbxnCTpfDOWj8cfv972++M7I970FCOohlYQAz8qXBmLMf32s46aeCrSfXQDIN9QUepPaE2A/Jg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1upfq4h8sd7p22qwe8y4nwvxnxz2ytfmww7zt4e","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"/Zli8QI6WoMM7eo1HxJuZGwjWH8/6Q3hjJEVJCXvuS9UNjxNYqQJBO9aUylfcqnvX49gf65zYgdbHm1IsCKkJg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1nnl8gkv2l9l2zpvmgp8g3ku4wy395rhhv7lc8z","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"uW5PYTgVyd5PeeVvK/OjiPu8oyMXqFMz9T9nnEN0S9sTFTraHkEvxYLDN8v0aiMh4cB22PZ4OKyhS4p21c2f/g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1n576etrtrl699w39um8pf6law67v589pjud2wz","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"1l9qA0jZN1dL/MzepfR15X8VbMgt8Rht5fTRA1JLnHQ1TUBDtHwl0ldKwYIYuUTCRgjQAK5Zczl3FSr1BRUR0Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g14r9q6ngpyse7u9v7dx4d9m4j3mfd077gpwly46","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"2U98xveTphORzLEyrc4uVTRoxwuDBrMM5OMzXv/IJ9du7x/of9kSJFikLrS8wvWAkQHiLKgUkavFwq8oN24fgg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1yq0q0pw9rczrymgfxaz69gmtcp97gv6jheadl2","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"OJM5pmTi1mW89NJEmtC+63kjiekwq+6hMVyj7/JetZ44JLtQMEqyQR6GWJBPgw53b8nBkqyE1G5/rOeqUpUO2A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1t3drd4eqs2jgdkn2c2tm649z6wncnmr2dsjnp4","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"rlnLDIqpCReO9wZVm34kE4PIFsRM4Wbx/LcmcCvaoIFRJ/0cPCTkT4j10NUNDx+/OaaJ66ncTRmecR7UgYURrg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1z836ejfsgsv3h2tapp7w5j0chpkdsv78pf4fgd","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"GNZ8roTQY33SSWNArfUEAsemQyS4gGP/5K4aZV4dV8oX5UuQD97I094PHotgYzejP39KNUxBN9vUDCUrA5AOuQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1yq0q0pw9rczrymgfxaz69gmtcp97gv6jheadl2","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"+0U9CGjfkooxpDJsLRtA76JARxRK7Bh1UL8cPT/C7HMTlKvJxDAdqlFqQTNL7cB00N+D7XAzHUS5C/EOm9vP8Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1mwhshg9pyx70c7gh4ppm62zc0vx9f6da99zlcs","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"dnFRFMo3j4Z3XBHinieqauRT7vn2py4zB+DMRMDhjw46VfSLv0+Mp70kxrA1+g8Hu3EiWR2CpmQyIc6BOTiRkw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1upfq4h8sd7p22qwe8y4nwvxnxz2ytfmww7zt4e","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"1X3agcccCuZjS0nTA38l/QJO0cku3YUZvHcFxeHjWjtPmyKvj8F96615fQWAEjO7zxHcgHA+D7Uj+S7QC0bcPA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1x0hp0p3cv66gth0qndv3n3nzsjeaqutel46zvs","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"ijIU12qO+SCbqu1ugMMC6b2T9XWQVRfaTHGiO/JPiG57Q9h4hDk4oGukAbzGD+jUOeqV8CNoLfoQ5m88Wg7Yjw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1ghfwqhpyfvr0ls77vg2mzuk7d5gjnzeaa9aeuy","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"SjJRsMYpxZCe19k7J5670YSmUy9LeA6vvFIE7mdEmzVG7IkMg55HnnAom4D3X9OPPhS0P7K7jC8E3u+QMPYIPg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1skt2dft7vwfw24f4f7auqqp46chpem8w92ucns","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"RSzyzXTtoSDf23DCLjdVj38DtsmbeT0G+bN6G1JExZMDehBzmNTaFguPbqkWyBCMwjG5q5Tu7/OVGbxHYWOtvw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1wcgt92d7nmanxjlycxc6n70s8v7xmfwlk7hsem","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"aZeIwDG6QSnbZIHtNIq10wT01IJ06mywcYj9If9ikxwDGbz6AK3phhppQcnnp2RnVGASZsCbh0ocQsSDkJBZ6A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1upfq4h8sd7p22qwe8y4nwvxnxz2ytfmww7zt4e","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"Yi7EXFGShCp2wQzM0W33JvvkYq0ueccnnTMAEd4snjB19hYsavpR+/i3lsn+CH7Hzw6Mm70rzSZH1UyUaLR72Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1nuw4vglutgj20taxf5ulgayzzlmqjuyuwcvg86","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"w6e179lKKa8LKZR+hG/T/DvpHRSiZn8xR4L/+1sWSXYJJDf8lr80sRZOIhiUi/O05O5X7B40PmYwdbCsT/6MZQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1yq0q0pw9rczrymgfxaz69gmtcp97gv6jheadl2","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"LDDuF6brClbK/oN/ti9yIz/8WToRh4QCHO/9rFKFoMQKbquKEVP/oCPnfEPlXcsp6x1aeWQRNXX/gziuOcu3YQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1e75yydvy5zldw8f334tq4qshetmpqts5hljp74","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"bV3uSq3GwAb83wP2C70DF0GxUDnfkLHIbGXjsYiaXWoXmx8d1B/8oQxU6RnbZ28emUDtUfdIRpFWYqfj5oe2EQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1upfq4h8sd7p22qwe8y4nwvxnxz2ytfmww7zt4e","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"zqkEIoC5ooANT1hCZJQ5VBVIdu6hl1NjVP0Eu67M9dxyErtblvWIc6DWtnj3ZnibcONJs6l8eqVvQXrcDcFF9g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1rkav4v5h26u5606n7ng462uwpkmkycew6hdvpk","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"vSH0gMFr2UkW56anYGx2Bk0G3giHgr1YnsOcIBrlQV4iFaaa+Q3S+mi9X0UD/lS6ndtftl3FVjsqiqIAas3qeQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1yq0q0pw9rczrymgfxaz69gmtcp97gv6jheadl2","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"g+AY20UbWe+yXLr6B8LIwNSf5ngnWyxAbB4E0+7nh/J0qFbueMOHet+JzQE1a2+/9B3L22PqflfVJ0tfPXeG+A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1upfq4h8sd7p22qwe8y4nwvxnxz2ytfmww7zt4e","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"SvkRRLm1Vs9cw+wEOViFlv2t7G8EIPlR4+Dh2HX2ci4xSQlmgUWqKJbdjQeUhJiKQhGbDBJknwyqrQmPXySXdA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1rgxjmgv5r8zf30lyt4gs2fx0f0624af5ht8h8w","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"ywDb6I6MXUn5XYdKPxaI6Tni4OMfQxNDlt/+GpmfchNjNvDAstMl1YOLhaYAwqe+/cDsGjAAsz/+0Pv9fPNg6Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1mwhshg9pyx70c7gh4ppm62zc0vx9f6da99zlcs","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"EJBSnNrrB1TQDRpLGRZKnSLDTLJtSTEM7YLgiVjqBeJ9NrNLFt/UgjyOfo6p0sDAUP6c3Ggixj4y9eM1/BM5iw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g10szg6w37l30z66cc68sylgxu4dgk977pvm3nhr","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"jNoSld/6FfS/KVuHdAcxPBSoO5ZQ4QFaiNF9nGsq8ec9N+K7m+ksEIDacC5kb6n8P0ER6miQZPPxU5GXFZPDrg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1vz5nsp4rdws3p89q92xwv7r242whmzpcw95u9t","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"z5YoRAMyyp8328pnN77Eoz2GGYOGxE8nxiBpsJQl6zRnMkLIKlUgxIx/bNCsx1jSMEuru9N/TQfhSLMDoq3hGg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1u52gals5th9udxuxhx4r9cynka69aakdzerrq7","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"mu8LwwlSDCAifI1F2OhSOvLlNvrNG23JJ34oZYq/1KA3s/KpANHHOU/Agozhaauwn898XJoAZjTI/j7Q8Tr62w=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g127jydsh6cms3lrtdenydxsckh23a8d6emqcvfa","to_address":"g1v69xdx0es5y2ks080yhgs3gyp8vxys6cmyfuht","amount":"50000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApFD0bqBG+7AAM8XJGJXtPCQPf571XuNwriEn4trrXcK"},"signature":"PLQwwY0ZI4VEZ1PMOfTqLDIrJJyZE+OkV9l8DA2z4iBvcJ7iFk2LrcNNpD0r3aL43NCI2B+7Tr6r3g/7i7BUcw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/boards","func":"DeletePost","args":["7","3","3",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"3M1Sy6QaXjSiQEzEpBffPNDTOVdtTB5S4icmrpAjb4ZV8jcwVzoQAHg+HzDR7PfQM2jbWnyUSRktfV+9hwmqRg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/boards","func":"DeletePost","args":["7","2","2",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"75EptC7YEpxJPicdECeXofD3ThXgdca+wW4BSKawaRcFL/h45pNHucqI4bFLzlZXB78RND4X0r81b1SWGf3J3A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/boards","func":"DeletePost","args":["7","1","1",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"T+sTdiQ03OLbYNZPsoJJ4c28OfFGRqJmfLqfwU/jR3xoNM7BEA+47srT/T1i1A+QveIG/a2JSHK1P3/vU+aJiQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["7","Create Thread","```\n#!/bin/bash\n\nset -e\nset -x\n\nCHAINID=test3\nNODE=test3.gno.land:36657\nWALLET=g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5\n\nOPT=\"--chainid $CHAINID --remote $NODE --broadcast true\"\nGAS=\"--gas-fee 1000000ugnot --gas-wanted 2000000\"\n\n#\n# contract: CreateThread \n# params:\n#   args: bid\n#   args: title\n#   args: body \n#\ngnokey maketx call $WALLET $OPT $GAS \\\n  --pkgpath \"gno.land/r/demo/boards\" \\\n  --func \"CreateThread\" \\\n  --args \"7\" \\\n  --args \"Create Thread\" \\\n  --args\\#file \"/tmp/scripts.md\" \n```\n"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"K0vuKn4mJRWwS1IySgWTVykNrnOaftHnM34GCaT1SM8wTdArGsZkY2ggCixwv+40tr7pV7Gzh8aXyreISQTyXw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["7","Create Thread","Click the link above to view the script content\n\n```\n#!/bin/bash\n\nset -e\nset -x\n\nCHAINID=test3\nNODE=test3.gno.land:36657\nWALLET=g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5\n\nOPT=\"--chainid $CHAINID --remote $NODE --broadcast true\"\nGAS=\"--gas-fee 1000000ugnot --gas-wanted 2000000\"\n\n#\n# contract: CreateThread \n# params:\n#   args: bid\n#   args: title\n#   args: body \n#\ngnokey maketx call $WALLET $OPT $GAS \\\n  --pkgpath \"gno.land/r/demo/boards\" \\\n  --func \"CreateThread\" \\\n  --args \"7\" \\\n  --args \"Create Thread\" \\\n  --args\\#file \"/tmp/scripts.md\" \n```\n"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"sI1d08E13LzoezyHnHsgcWl5OuV234wk2RU2o3BpCigNcAvmlK49iuiE5ek1U302VY7wNOucV//rU13ogAFSYQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["7","Boards","Click the link above to view the script content\n\n```\n#!/bin/bash\n\nset -e\nset -x\n\nCHAINID=test3\nNODE=test3.gno.land:36657\nWALLET=g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5\n\nOPT=\"--chainid $CHAINID --remote $NODE --broadcast true\"\nGAS=\"--gas-fee 1000000ugnot --gas-wanted 2000000\"\n\n#\n# contract: CreateThread \n# params:\n#   args: bid\n#   args: title\n#   args: body \n#\ngnokey maketx call $WALLET $OPT $GAS \\\n  --pkgpath \"gno.land/r/demo/boards\" \\\n  --func \"CreateThread\" \\\n  --args \"7\" \\\n  --args \"Create Thread\" \\\n  --args\\#file \"/tmp/scripts.md\" \n```\n"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"fNRL6LpFVOSAhJl0aAYgtusRFhkvKXK0DlPcMOelFJNccyDa4vSTf7oyJKviLFNut8Z1PWWk78ufa/R+dOz2/g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/boards","func":"DeletePost","args":["7","4","4",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"zfC28n5JpFwkye3h0kmMSKcXrOcq3qzKdm9g3sQ9uidRxCQtcgueHOpuvxhQsW3fikN/OP8DFphraxC0ifIcwA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/boards","func":"DeletePost","args":["7","3","3",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"nD8yzjJDlbtTzmtf6hmF8ozTZFiruJrWVefXPVH9XZUl+1NDPVENy/xMqJfbuocbgPQbV4MJdxKlnUPGhWWw7A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/boards","func":"DeletePost","args":["7","5","5",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"+ncZ6M0qB23/wvTmhYItKZoWrdhwbVxcOTnsg7eRwScut02LyAvER7jeKzkHs8y4fmGCivGm71Y89JkV6BF7tQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["7","Boards","Create Thread\n\n```\n#!/bin/bash\n\nset -e\nset -x\n\nCHAINID=test3\nNODE=test3.gno.land:36657\nWALLET=g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5\n\nOPT=\"--chainid $CHAINID --remote $NODE --broadcast true\"\nGAS=\"--gas-fee 1000000ugnot --gas-wanted 2000000\"\n\n#\n# contract: CreateThread \n# params:\n#   args: bid\n#   args: title\n#   args: body \n#\ngnokey maketx call $WALLET $OPT $GAS \\\n  --pkgpath \"gno.land/r/demo/boards\" \\\n  --func \"CreateThread\" \\\n  --args \"7\" \\\n  --args \"Create Thread\" \\\n  --args\\#file \"/tmp/scripts.md\" \n```\n"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"1G2ovDNa32ksBtVdaZt2EDpAw7Lsb4EAQ/MPeFoGzNxAvFANscgffp0KDC4NPIB+Nu8H+ibT+k96dXfXotrgmg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g13k26a9mtx625wekxlnh8kln9a72nx5yh4z46wt","to_address":"g1dzst637p2lk8m4fcy9s7f29dg8a596jw956t9k","amount":"10000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArVa/OWwPulG4spc1iwQ88aY8cgOvjqZ6Zoz+tQ58IIh"},"signature":"aAB9o9+YcgY3h7sQAkZtTd3e5PflvX4YUzghJeG68ZZRTDKYZeFVjdh43uHurrmZUBtr/5XOKX4tvO1Kznz5wA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/boards","func":"DeletePost","args":["7","6","6",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"L0cNJNJI1FEKTjXhueoBbbdz+I7SXNkOYQ/i96cLpOlZsZv/ViYsUCncAT4Qk7nYsqINfy3rH4B9Iz7qO1UO0g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/boards","func":"DeletePost","args":["7","7","7",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"RRR6fK+yIornghQnrTAYywxZOojxIGlQK3CExSlQEBYwPDNu7YI0H+oFtMRdS0vFi+y8UXpzpx8NK/MOvj/l/w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["7","Boards","Operation by script\n\n```\n#!/bin/bash\n\nset -e\nset -x\n\nCHAINID=test3\nNODE=test3.gno.land:36657\nWALLET=g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5\n\nOPT=\"--chainid $CHAINID --remote $NODE --broadcast true\"\nGAS=\"--gas-fee 1000000ugnot --gas-wanted 2000000\"\n\n#\n# contract: CreateThread \n# params:\n#   args: bid\n#   args: title\n#   args: body \n#\ngnokey maketx call $WALLET $OPT $GAS \\\n  --pkgpath \"gno.land/r/demo/boards\" \\\n  --func \"CreateThread\" \\\n  --args \"7\" \\\n  --args \"Create Thread\" \\\n  --args\\#file \"/tmp/scripts.md\" \n\n#\n# contract: DeleteThread \n# params:\n#   args: bid\n#   args: threadid\n#   args: postid\n#   args: reason\n#\ngnokey maketx call $WALLET $OPT $GAS \\\n  --pkgpath \"gno.land/r/demo/boards\" \\\n  --func \"DeletePost\" \\\n  --args \"7\" \\\n  --args \"7\" \\\n  --args \"7\" \\\n  --args \"\"\n```\n"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"A/4yz2jGeVIwFCTcImyQslfL4ZA/HV00VYatOJe0ROlRTrv8GYu4M7bSsFsKZ/edAf8QiSk8rOrH566XD6qB6w=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1t3drd4eqs2jgdkn2c2tm649z6wncnmr2dsjnp4","to_address":"g1vhq025kvfqkz0guct8rdey472x44gutfutsadc","amount":"10000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+wBbnmo3eJnfag2T/9a8kvtCK7Bf1zOAFHG8rQqQq9i"},"signature":"m1CUhxlkuB6hFrbqq5SVXmypBjpPx5gaunSN9ICqTy5D9gtrtHGqvphhamqLIMYPizniYNwpYUdXcTkOQ99aow=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1t3drd4eqs2jgdkn2c2tm649z6wncnmr2dsjnp4","to_address":"g1v69xdx0es5y2ks080yhgs3gyp8vxys6cmyfuht","amount":"10000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+wBbnmo3eJnfag2T/9a8kvtCK7Bf1zOAFHG8rQqQq9i"},"signature":"fd5uMxKi/siSoLQVmqunsI6iQvDU3OnVaH/ieRzjRLNo6Gafg/xoK38w0jiLDzBkiAM89WM4dp5tKM/6H2wJlA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1t3drd4eqs2jgdkn2c2tm649z6wncnmr2dsjnp4","to_address":"g1u5rst70gnl2gvehmkx72v622p98dy33qmtx8eu","amount":"11000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+wBbnmo3eJnfag2T/9a8kvtCK7Bf1zOAFHG8rQqQq9i"},"signature":"MxK0V1MN+FlBs9KhMw/euNV13NeMhy7KdeHV+uqaWEBCP/9OUF58SmfHH0s8pKR0ykMdO/mqwEvU3GQHCvLC9w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s37ggrv6f97ey73lq5kqsl7yg9dshatfsdpc9m","send":"200000000ugnot","pkg_path":"gno.land/r/users","func":"Register","args":["","youxiroy","@youxiroy"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6FhcYokqWtY/wsUz2LURkiVNzmnGnW3kQLsYkW90xd0"},"signature":"R+ao6YudVh0eJmg1nHS/3NOxrvdWET9ita3oYpafqEEccV52jeum+FHvfg8iiG3a48W1kR4BhW96O/JVUOt8gg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1e7vm7umqrrqhcd78qfcz7774p92ekrcmayuf4e","to_address":"g1tfggvvu7u2a5xzgnfava74v0qtm6t9y659r8zx","amount":"50000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnWUBAghJBOhK1asz2l0+tTEsg+HNxbpbM2dVreSnEXm"},"signature":"/28hm7BN2smzyl9HBnyFGgxJcA+yMO28uNzhsi+HBFVTaAoVDMs5PNtWQtea4aC3iKNvnLmqqfVf2Anks1f3uA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1cutqu7s9a62hj8fa94xf08mjv7cnn7f0mfkwpa","to_address":"g1afd3qk0hd9mduwqsu4zk8t8u8zmdf4zv6dgjep","amount":"40000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AzJRQIbV8ghp4BIPdz1SBVQDGSDsAYDDloI/8YpJnMm8"},"signature":"+JWVcIGRXSularAbwhYoaAPSi39dAtY+xGU/tZHkv1B/I1Q51AuNfsLthxB9I/l1veLaquU9VhHLc6/bMJf0xg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g13kmw7u9skqmjxgresm425apm087p5vdhjd66he","to_address":"g1pn7n4g26qnl0jjs9vjrk0l8g6mlxnmpz3ajy5p","amount":"10000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmCihgLZe7uMMKob+IRvMOtcWjUgU83JvkhycbEWDNt8"},"signature":"CsX0YLC74WGXVbuekVWP0B4BRsPvhVKAILnjUlPEWERlnZ9WO6mUuVFNGKh4QJFdm1uBkhEUmu6IGnLZt2ysWQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1kqyht77pkvjj73fn0hyaxzmtnu2j687vzeagch","to_address":"g1jpsa22m9xe295djftlgkggz2ynel87pahvfhwc","amount":"3000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjROe6KqWCdpsFmrwbYHntvLfsOBfsEptSKJhMVZYXD6"},"signature":"mx955YkanPuojDTHI374N+RUOGXKP8YtSZqr432zXERGscx0rSAts9uwXjfFyPAv2WdPV3DSGaeaCqJZ0Va56g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1kqyht77pkvjj73fn0hyaxzmtnu2j687vzeagch","to_address":"g1js5f383eaehax2qtjd7c9q06l0nczfdqxan9w7","amount":"10000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjROe6KqWCdpsFmrwbYHntvLfsOBfsEptSKJhMVZYXD6"},"signature":"lGWMo4RCfm3ld27P+glrVDu3FjkFQjLLFP7/WuQnxh1uWarKn9zqE23EUEtdzbfqWNjN+9jR14vO78Fer8PMCA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1nt3kyjzv5pl2ec70eyly0na9cme5tjf5yhx8mu","to_address":"g1rqrkrwm5knhudnylgjkwn95gsg9du66uz3cvdk","amount":"1000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArAsQynLHUk+wZK30witKcsV4JPfZGt8pgGo7F1b6H2K"},"signature":"0RMAWuzwT5zdMU7Dzfey91YbrZgGtRZsMErNgKdJc9VJURnrQCmqg3sr/OUBmUxPHaKkGsWydFDkpdVp2/sPPg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["7","Users","Operation by script\n\n```\n#!/bin/bash\n\nset -e\nset -x\n\nCHAINID=test3\nNODE=test3.gno.land:36657\nWALLET=g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5\n\nOPT=\"--chainid $CHAINID --remote $NODE --broadcast true\"\nGAS=\"--gas-fee 1000000ugnot --gas-wanted 2000000\"\n\n#\n# contract: Register\n# params:\n#   args: inviter\n#   args: name\n#   args: profile \n#\ngnokey maketx call $WALLET $OPT $GAS \\\n  --pkgpath \"gno.land/r/demo/users\" \\\n  --func \"Register\" \\\n  --send 200000000ugnot \\\n  --args \"\" \\\n  --args \"mercedes_benz\" \\\n  --args \"\"\n```\n"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"76VwqZ3s/opZKJDOB8EJt6vbiHn7qP5Cv0N7sL3n0uo+xVQ0nMOjhGMYRION/Ymk+updcfZQWsnFM22Tx6dpnA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1kqyht77pkvjj73fn0hyaxzmtnu2j687vzeagch","to_address":"g1vqza9gsg00de35xmeav2efnm77nkayyqt2rcxl","amount":"10000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjROe6KqWCdpsFmrwbYHntvLfsOBfsEptSKJhMVZYXD6"},"signature":"6O6HVIUz+treNKJtHeLH9f3Ra3LWTpwqENihSBKZRW0Cy5gaO+SprtuF4CKxFjTgVtqihUt+o+ZZ8OzLdZ2ang=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1kqyht77pkvjj73fn0hyaxzmtnu2j687vzeagch","to_address":"g1rp7rnz7f5v99hlrpkxk9w0s3c73vqqg0ddu465","amount":"7000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjROe6KqWCdpsFmrwbYHntvLfsOBfsEptSKJhMVZYXD6"},"signature":"pPRpBsQHUmRPSg/ff73PC9ujllqbBI5Y7Mz2AHe70pYqQIA2kNom35xa+jAqQyG7ZF2UvFB3XMioMn5QB7Pv1g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1kqyht77pkvjj73fn0hyaxzmtnu2j687vzeagch","to_address":"g1f26la4n6y2mvjhl22eh8p39hcsph4avr5jv6lu","amount":"5000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjROe6KqWCdpsFmrwbYHntvLfsOBfsEptSKJhMVZYXD6"},"signature":"WjbU0JDynJx0SclfaLC0FgEycnZ2pxkXHfx4HJxhH8puOerXwxevI+hfsPPOVIvXu2/EE/FWHFx3rliD4IdwKA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1kqyht77pkvjj73fn0hyaxzmtnu2j687vzeagch","to_address":"g10c4hcjtawueqdtssxlqpfewxanfp50yudq5acv","amount":"5000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjROe6KqWCdpsFmrwbYHntvLfsOBfsEptSKJhMVZYXD6"},"signature":"rDXrNkB7ixTVghHuLbWYZn69AGJpy2/GS3xpj/ouXCUXrAQXCEsGXEPy77OaanYdota0YFWoaAwwzgOYbzy2Vg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1kqyht77pkvjj73fn0hyaxzmtnu2j687vzeagch","to_address":"g1a2jt77whzm8zagg3yhdff8kx4ypsx5j8esspf3","amount":"5000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjROe6KqWCdpsFmrwbYHntvLfsOBfsEptSKJhMVZYXD6"},"signature":"lLEgq00DxnGqNdISO9A/hRjwTnjgN0kTmtv5s58rC2hc58sOofIJFy0oZxYHLIzoy7SU4clQ3o6Jfvpl20AzeQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1pqenudy5u9q4pjms00kmlvqtgxy8g6sczcxgvs","to_address":"g1ywlm3qpgaus2pljmge5580em9x7c58kwtt4v24","amount":"10000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqH849zUrPyBfhGn+7F4SUplE27Y2dX5YsUoxOu1rNQx"},"signature":"zZJx+JaUGtScDg/QzpcMyNdqZR6JeW3iCeqqpBAyxMhxFagLFukPMXDSqLd50xPI34dKTIxT3+1+jwOounndmQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1tlqves4fmx6s4002w2np40fa5gnu6nput5y8l7","to_address":"g1pqenudy5u9q4pjms00kmlvqtgxy8g6sczcxgvs","amount":"10000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ajq+dbYknXPBFGxAkBh2lwqy5Sc6jS32989+Z6eEoByp"},"signature":"7TZ705GtoNBd6SfpeMa5Lmkzir2oBfL/7GLVV0EbjgY+d8r8UAwE3nfz0HpqCdaOP7uaNH0BcmPcMchkw80PFA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ywlm3qpgaus2pljmge5580em9x7c58kwtt4v24","to_address":"g1tlqves4fmx6s4002w2np40fa5gnu6nput5y8l7","amount":"10000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxpBhuy4oSW4U1uRPZoNZKj9qpOHEz4tcdiU/g5dSa9L"},"signature":"VWPCThwBtY2nPXErbkQ33O55pasLN40Y+5X1kFrlLi9y+fSiBd7H1S6N/TDbKr4OH/g0PSVFav/3tOIBS7MzdA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","package":{"Name":"banker","Path":"gno.land/r/demo/banker","Files":[{"Name":"faucet.gno","Body":"package banker\n\nimport (\n\t\"errors\"\n\t\"std\"\n\n\t\"gno.land/p/demo/ufmt\"\n)\n\nvar (\n\t// internal vars, for stats.\n\tgTotalTransferred std.Coins\n\tgTotalTransfers   = uint(0)\n)\n\nfunc Transfer(to std.Address, amount uint) error {\n\tif err := assertIsController(); err != nil {\n\t\treturn err\n\t}\n\n\tgTotalTransferred = gTotalTransferred.Add(amount)\n\tgTotalTransfers++\n\n\tbanker := std.GetBanker(std.BankerTypeOrigSend)\n\tpkgaddr := std.GetOrigPkgAddr()\n\tbanker.SendCoins(pkgaddr, to, amount)\n\treturn nil\n}\n\nfunc Render(path string) string {\n\tbanker := std.GetBanker(std.BankerTypeOrigSend)\n\tbalance := banker.GetCoins(std.GetOrigPkgAddr())\n\n\toutput := ufmt.Sprintf(\"Balance: %s.\\n\", balance.String())\n\toutput += ufmt.Sprintf(\"Rewarded: %s (in %d times).\\n\", gTotalTransferred.String(), gTotalTransfers)\n\n\tif path == \"?debug\" {\n\t\toutput += ufmt.Sprintf(\"Admin: %s, Controller: %s\\n\", gAdminAddr.String(), gControllerAddr.String())\n\t}\n\treturn output\n}\n\nfunc assertIsController() error {\n\tcaller := std.GetOrigCaller()\n\tif caller != gControllerAddr {\n\t\treturn errors.New(\"restricted for controller\")\n\t}\n\treturn nil\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"LarstLLknKn+UioSsJB14qjckj0DP1vVn+HwGdV4iRgqbGNYLccrkPy2ZW5L/HV5EWVQF4pZ9zbW3FRm44NOxw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","package":{"Name":"banker","Path":"gno.land/r/demo/banker","Files":[{"Name":"faucet.gno","Body":"package banker\n\nimport (\n\t\"errors\"\n\t\"std\"\n\n\t\"gno.land/p/demo/ufmt\"\n)\n\nvar (\n\t// internal vars, for stats.\n\tgTotalTransferred std.Coins\n\tgTotalTransfers   = uint(0)\n)\n\nfunc Transfer(to std.Address, amount std.Coins) error {\n\tif err := assertIsController(); err != nil {\n\t\treturn err\n\t}\n\n\tgTotalTransferred = gTotalTransferred.Add(amount)\n\tgTotalTransfers++\n\n\tbanker := std.GetBanker(std.BankerTypeOrigSend)\n\tpkgaddr := std.GetOrigPkgAddr()\n\tbanker.SendCoins(pkgaddr, to, amount)\n\treturn nil\n}\n\nfunc Render(path string) string {\n\tbanker := std.GetBanker(std.BankerTypeOrigSend)\n\tbalance := banker.GetCoins(std.GetOrigPkgAddr())\n\n\toutput := ufmt.Sprintf(\"Balance: %s.\\n\", balance.String())\n\toutput += ufmt.Sprintf(\"Rewarded: %s (in %d times).\\n\", gTotalTransferred.String(), gTotalTransfers)\n\n\tif path == \"?debug\" {\n\t\toutput += ufmt.Sprintf(\"Admin: %s, Controller: %s\\n\", gAdminAddr.String(), gControllerAddr.String())\n\t}\n\treturn output\n}\n\nfunc assertIsController() error {\n\tcaller := std.GetOrigCaller()\n\tif caller != gControllerAddr {\n\t\treturn errors.New(\"restricted for controller\")\n\t}\n\treturn nil\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"t7u17C5peMCl5ugRBNlzmPcvqUeRU2srftZxkkOG0h0m6GWU1KwjnIaGZyeDCtwkaqc21sUXFXdukCO77Rn1sA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","package":{"Name":"banker","Path":"gno.land/r/demo/banker","Files":[{"Name":"faucet.gno","Body":"package banker\n\nimport (\n\t\"errors\"\n\t\"std\"\n\n\t\"gno.land/p/demo/ufmt\"\n)\n\nvar (\n\t// internal vars, for stats.\n\tgTotalTransferred std.Coins\n\tgTotalTransfers   = uint(0)\n)\n\nfunc Transfer(to std.Address, amount std.Coins) error {\n\tif err := assertIsController(); err != nil {\n\t\treturn err\n\t}\n\n\tgTotalTransferred = gTotalTransferred.Add(amount)\n\tgTotalTransfers++\n\n\tbanker := std.GetBanker(std.BankerTypeOrigSend)\n\tpkgaddr := std.GetOrigPkgAddr()\n\tbanker.SendCoins(pkgaddr, to, amount)\n\treturn nil\n}\n\nfunc Render(path string) string {\n\tbanker := std.GetBanker(std.BankerTypeOrigSend)\n\tbalance := banker.GetCoins(std.GetOrigPkgAddr())\n\n\toutput := ufmt.Sprintf(\"Balance: %s.\\n\", balance.String())\n\toutput += ufmt.Sprintf(\"Rewarded: %s (in %d times).\\n\", gTotalTransferred.String(), gTotalTransfers)\n\n\treturn output\n}\n\nfunc assertIsController() error {\n\tcaller := std.GetOrigCaller()\n\tif caller != gControllerAddr {\n\t\treturn errors.New(\"restricted for controller\")\n\t}\n\treturn nil\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"LWXOGbaovBEiNEoUs8q187Bb0MAfWy4LQ7GrNCSD0h9BCBbgeWrpJxTmWwBZWu6fh6Lzz42ZC5WhOO4/3jYJuw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","package":{"Name":"banker","Path":"gno.land/r/demo/banker","Files":[{"Name":"faucet.gno","Body":"package banker\n\nimport (\n\t\"errors\"\n\t\"std\"\n\n\t\"gno.land/p/demo/ufmt\"\n)\n\nvar (\n\t// internal vars, for stats.\n\tgTotalTransferred std.Coins\n\tgTotalTransfers   = uint(0)\n)\n\nfunc Transfer(to std.Address, amount std.Coins) error {\n\tgTotalTransferred = gTotalTransferred.Add(amount)\n\tgTotalTransfers++\n\n\tbanker := std.GetBanker(std.BankerTypeOrigSend)\n\tpkgaddr := std.GetOrigPkgAddr()\n\tbanker.SendCoins(pkgaddr, to, amount)\n\treturn nil\n}\n\nfunc Render(path string) string {\n\tbanker := std.GetBanker(std.BankerTypeOrigSend)\n\tbalance := banker.GetCoins(std.GetOrigPkgAddr())\n\n\toutput := ufmt.Sprintf(\"Balance: %s.\\n\", balance.String())\n\toutput += ufmt.Sprintf(\"Rewarded: %s (in %d times).\\n\", gTotalTransferred.String(), gTotalTransfers)\n\n\treturn output\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"okhDbxquU2NrGjNW4RIVD2qz1P8ErM2qTq3wIOQWVR4apXfPTWBCQBCwgFaEQKdZb2QYW6IXYERXdjIwFZCrZg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/baner","func":"Transfer","args":["g17667aygm2ws9335kk93r33umfe69h0jtpznwdn","100ugnot"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"yKVhCo0DrgJXsp8P8pbqsAB5BkPVslfHR3pV21bABOoQ7Tg8l8GbhD8R3f+Q9w30O2BZKBI15IE39eETwyH0sQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/banker","func":"Transfer","args":["g17667aygm2ws9335kk93r33umfe69h0jtpznwdn","100ugnot"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"3gn+AVT27ZphwYtHLfvzHOJD1N7L5p8tPLKwWqP5hUIEHi3jsbK0C8AvWmpR+i1zhT1bwGzjRkJXnahl6n/oGw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/banker","func":"Transfer","args":["g17667aygm2ws9335kk93r33umfe69h0jtpznwdn","100"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"D4LuNdYp4f3kzQLoUyvXf8uin5IXG9FePxx8fIJTDEo06/uxN4jQrplxoLleSy7fxqXSehCCxYL+Jfh+gpbEAg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/banker","func":"Transfer","args":["g17667aygm2ws9335kk93r33umfe69h0jtpznwdn","100ugno"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"HRsfZooHExdSQkfeKPqdgtVBQkJiD3mAe19MxGnauyhYNKHqcbG/iCausQxylOJpWMYl5I2GbWxXyT89T0SLoA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/banker","func":"Transfer","args":["g17667aygm2ws9335kk93r33umfe69h0jtpznwdn","1000000ugnot"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"Ma6ZNwynMv+2Rhv6Gef0YdNWq49syDPJVugPAWL9GIhQEw9VeFVaGHcu6Zinsg79nSzgeuY0L8fgRrODsJWPdQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","package":{"Name":"banker","Path":"gno.land/r/demo/banker.v1","Files":[{"Name":"faucet.gno","Body":"package banker\n\nimport (\n\t\"errors\"\n\t\"std\"\n\n\t\"gno.land/p/demo/ufmt\"\n)\n\nvar (\n\t// internal vars, for stats.\n\tgTotalTransferred std.Coins\n\tgTotalTransfers   = uint(0)\n)\n\nfunc Transfer(to std.Address) error {\n        amount := std.Coins{std.Coin{\"ugnot\", 1000000}}\n\n\tgTotalTransferred = gTotalTransferred.Add(amount)\n\tgTotalTransfers++\n\n\tbanker := std.GetBanker(std.BankerTypeOrigSend)\n\tpkgaddr := std.GetOrigPkgAddr()\n\tbanker.SendCoins(pkgaddr, to, amount)\n\treturn nil\n}\n\nfunc Render(path string) string {\n\tbanker := std.GetBanker(std.BankerTypeOrigSend)\n\tbalance := banker.GetCoins(std.GetOrigPkgAddr())\n\n\toutput := ufmt.Sprintf(\"Balance: %s.\\n\", balance.String())\n\toutput += ufmt.Sprintf(\"Rewarded: %s (in %d times).\\n\", gTotalTransferred.String(), gTotalTransfers)\n\n\treturn output\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"QrCL+5CS4fIM054qxltnuGL9hHPpTiCos2XODMz+cWsfSg7iraxQ7EF/9lcteY6ieJuZ/p8xVRfroIFU5dHWww=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","package":{"Name":"banker","Path":"gno.land/r/demo/banker_v1","Files":[{"Name":"faucet.gno","Body":"package banker\n\nimport (\n\t\"errors\"\n\t\"std\"\n\n\t\"gno.land/p/demo/ufmt\"\n)\n\nvar (\n\t// internal vars, for stats.\n\tgTotalTransferred std.Coins\n\tgTotalTransfers   = uint(0)\n)\n\nfunc Transfer(to std.Address) error {\n        amount := std.Coins{std.Coin{\"ugnot\", 1000000}}\n\n\tgTotalTransferred = gTotalTransferred.Add(amount)\n\tgTotalTransfers++\n\n\tbanker := std.GetBanker(std.BankerTypeOrigSend)\n\tpkgaddr := std.GetOrigPkgAddr()\n\tbanker.SendCoins(pkgaddr, to, amount)\n\treturn nil\n}\n\nfunc Render(path string) string {\n\tbanker := std.GetBanker(std.BankerTypeOrigSend)\n\tbalance := banker.GetCoins(std.GetOrigPkgAddr())\n\n\toutput := ufmt.Sprintf(\"Balance: %s.\\n\", balance.String())\n\toutput += ufmt.Sprintf(\"Rewarded: %s (in %d times).\\n\", gTotalTransferred.String(), gTotalTransfers)\n\n\treturn output\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"h9d7Y01P/6RdvWLWJ0FQKTncRMPMEKe1bwTlSopf1Y1ifgU46yfnvLuUH6fYO/LduyydMXSkkFUa7TQoCk07LQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/banker_v1","func":"Transfer","args":["g17667aygm2ws9335kk93r33umfe69h0jtpznwdn"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"kPD4H3ntH6NiNDKuPxamJ+JXTBwe52h/oNlWzI8XANAAQTtIujVcyF/v/ab+4SOe7KCMKU6iLPjAbPvlequfVw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","package":{"Name":"banker","Path":"gno.land/r/demo/banker_v2","Files":[{"Name":"faucet.gno","Body":"package banker\n\nimport (\n\t\"errors\"\n\t\"std\"\n\n\t\"gno.land/p/demo/ufmt\"\n)\n\nvar (\n\t// internal vars, for stats.\n\tgTotalTransferred std.Coins\n\tgTotalTransfers   = uint(0)\n        amount = std.Coins{std.Coin{\"ugnot\", 1000000}}\n)\n\nfunc Transfer(to std.Address) error {\n\n\tgTotalTransferred = gTotalTransferred.Add(amount)\n\tgTotalTransfers++\n\n\tbanker := std.GetBanker(std.BankerTypeOrigSend)\n\tpkgaddr := std.GetOrigPkgAddr()\n\tbanker.SendCoins(pkgaddr, to, amount)\n\treturn nil\n}\n\nfunc Render(path string) string {\n\tbanker := std.GetBanker(std.BankerTypeOrigSend)\n\tbalance := banker.GetCoins(std.GetOrigPkgAddr())\n\n\toutput := ufmt.Sprintf(\"Balance: %s.\\n\", balance.String())\n\toutput += ufmt.Sprintf(\"Rewarded: %s (in %d times).\\n\", gTotalTransferred.String(), gTotalTransfers)\n\n\treturn output\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"Q4wRqgtJ86/ZNWseT+d9x7ncnKNj2rgd5jvqA9mMKdpDXQWMktAczEpK3HvXlE2I5bCOEwF/wg1eSa9/9qMKww=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/banker_v2","func":"Transfer","args":["g17667aygm2ws9335kk93r33umfe69h0jtpznwdn"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"sC2AxQLO3XMFO459w7BReK9V1iviy2W56eNYK6Qo7nZdo2RKLpnRRN04p6oKir7iYBsnkfaF6O03CxNZV2b3Tw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","package":{"Name":"banker","Path":"gno.land/r/demo/banker_v3","Files":[{"Name":"faucet.gno","Body":"package banker\n\nimport (\n\t\"errors\"\n\t\"std\"\n\n\t\"gno.land/p/demo/ufmt\"\n)\n\nvar (\n\t// internal vars, for stats.\n\tgTotalTransferred std.Coins\n\tgTotalTransfers   = uint(0)\n        amount = std.Coins{std.Coin{\"ugnot\", 1}}\n)\n\nfunc Transfer(to std.Address) error {\n\n\tgTotalTransferred = gTotalTransferred.Add(amount)\n\tgTotalTransfers++\n\n\tbanker := std.GetBanker(std.BankerTypeOrigSend)\n\tpkgaddr := std.GetOrigPkgAddr()\n\tbanker.SendCoins(pkgaddr, to, amount)\n\treturn nil\n}\n\nfunc Render(path string) string {\n\tbanker := std.GetBanker(std.BankerTypeOrigSend)\n\tbalance := banker.GetCoins(std.GetOrigPkgAddr())\n\n\toutput := ufmt.Sprintf(\"Balance: %s.\\n\", balance.String())\n\toutput += ufmt.Sprintf(\"Rewarded: %s (in %d times).\\n\", gTotalTransferred.String(), gTotalTransfers)\n\n\treturn output\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"EN/bPShApS+L5/AHgSQ0UxzxrJJr//QfL4TbEq5e4D9UvaKQBOTTQWqDw+aj/+4jnS23xOiIuYEpZ2ZGV+T7BA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19sf75wdx2uvvd80vsn3ezgepyndtxejh8p5gv5","send":"","pkg_path":"gno.land/r/demo/banker_v3","func":"Transfer","args":["g17667aygm2ws9335kk93r33umfe69h0jtpznwdn"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxrSe4bggMkTCCZrolP8mdDc7oIIz/K6cJIqaGECTmIz"},"signature":"lwqpnn8BN6nC7c2KpAjduSqwEBfOOvzBBTL4pLvs139aFH8JRfocJbijzgwklKoog17P9W6kKWRD0V3mfDAL+g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["disperze"]}],"fee":{"gas_wanted":"4000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"sRucxnDcgFktsDZmfiH8JerthtyjR2PxRtzpmcE99Roj0S4zlTNXiwAiO2tWZaS7iCpD0fBfRLJ5PrECqel37w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["8","Hello World","First post"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"0EoTkorXw19RoIQ1/egVvaA/HkThN9IaTjaJ1wl2iBQ/R5RvjWop3hgT9rvA8cu7T6uF3VwH70hPyVMxW8cGvA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["8","1","1","First comment"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"9i9YyGb2Bp21Tjg+Gj1IqEKa5PDE/MZ3IcTMRvtJ18RgMf8Zw8iphT4kSkfRnmHs6rSMrdSZVa2QvTsskgxSKQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g18slt92n2zk070hj7zts89kqyutes6gtnrql7zm","amount":"100000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"H3scRtQU/I3IYzuP5DEIc2L+AQgVATG4Wep7yqoDG8s/nUnUdWD7g1Yo2d3CNq+VyM0KN/yc7JeNJGcfhkXLKw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1rh3d4za3p5ze0g6csqcnyqs2d0ezjujjevset8","amount":"673999994ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"WZVaJZiE19aCQtnRHBm/HCi8xEYkL23Wg1t2aqJTGPJ79aZOr8pMkyKB5FF5b1NinKCCnrIjVh0LtWonkSTskQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1fnakf9vrd6uqn8qdmp88yam4p0ngy572answ9f","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"500000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3cWVULHSHC1mwK8o1vfJHKfNMvLEvKU/sHPQoFWRoey"},"signature":"cuFvAFAsJqOCklj/cHrtC6dyFbYtb66vQN5lMtl0Bk5Ugta3Da/ygLZurUoTAmYK1Cvr2WTmnEGBxOTvLU15lg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","hyojin",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"IMhsfXF3N4RzVEYdnUvpwF3gDYpJalEmQX4rWhSNXaxO680HdPT100XacP3wU4Q0P65JCnQ5PTX998SCx2ULGw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","hyojin",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"5fcbKE9YBVAJwI09C4yWUB7BdAHJMbJlNh92TNEQSWMARvEIr7cAgNpISXCvR+lcb/LPlN4nd2ykVf6RcLD/4g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1pl3x96jqswtg3gx3ukf2dq4jpcdl4egqev6hg2","amount":"600000000ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"MKK0bQzB15Pg6y6NVD3dTEs0xwSFOQ59OiT4nG9cTBgdekANBdyFg+zhEPUV91sNrkl+8g/ChGWIoVV5xlc99A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1pl3x96jqswtg3gx3ukf2dq4jpcdl4egqev6hg2","amount":"500ugnot"}],"fee":{"gas_wanted":"100000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"Nt4+dpXauE34npcZzw1OyOcqFqoNAadSJP3d3A4iT/U4ZO740OT5lS3SAqRJoI/YepIW4wN6kDjfLYwWaC0t/A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","package":{"Name":"demo","Path":"gno.land/r/hyojin_test1","Files":[{"Name":"Makefile","Body":"-include ../single.mk\n"},{"Name":"README.md","Body":"# [r/moul_basics_hello_v1](https://test2.gno.land/r/moul_basics_hello_v1)\n_`README.md` generated by \"make integration\"._\n\n## Examples\n\n```console\nfoo@bar:~$ gnokey maketx call \"MYWALLET\" --gas-fee \"1ugnot\"  \\\n\u003e --broadcast \"true\" --chainid \"test2\" --remote \"test2.gno.land:36657\"  \\\n\u003e --gas-wanted \"1000000\" --pkgpath gno.land/r/moul_basics_hello_v1  \\\n\u003e --func Hello\n```\n\n```console\nfoo@bar:~$ gnokey maketx call \"MYWALLET\" --gas-fee \"1ugnot\"  \\\n\u003e --broadcast \"true\" --chainid \"test2\" --remote \"test2.gno.land:36657\"  \\\n\u003e --gas-wanted \"1000000\" --pkgpath gno.land/r/moul_basics_hello_v1  \\\n\u003e --func Hello2\n```\n\n## `gnodev test`\n\n```console\nfoo@bar:~$ gnodev test . --verbose\n=== RUN   Test\n--- PASS: Test (0.00s)\nok      ./. \t0.81s\n```\n\n## How to publish locally\n\n```sh\ngnokey maketx addpkg \"MYWALLET\" --deposit \"1ugnot\" --gas-fee \"1ugnot\" --gas-wanted \"10000000\" --broadcast \"true\" --remote \"localhost:26657\" --chainid \"dev\" --pkgpath \"gno.land/r/moul_basics_hello_v1\" --pkgdir \".\"\n```\n\n"},{"Name":"contract.gno","Body":"package demo\n\nfunc Hello() string {\n\treturn \"Hello World!\"\n}\n\nfunc privateMethod() string {\n\treturn \"I'm private\"\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport \"testing\"\n\nfunc Test(t *testing.T) {\n\tgot := Hello()\n\texpected := \"Hello World!\"\n\tif got != expected {\n\t\tt.Fatalf(\"expected %q, got %q.\", expected, got)\n\t}\n\n\tgot2 := privateMethod()\n\texpected2 := \"I'm private\"\n\tif got2 != expected2 {\n\t\tt.Fatalf(\"expected %q, got %q.\", expected2, got2)\n\t}\n}\n"},{"Name":"integrations.sh","Body":"#!/bin/bash\n\n. ../integrations.lib.sh\n\npre\ncall --pkgpath ${GNO_CONTRACT_ENDPOINT} --func \"Hello\"\ncall --pkgpath ${GNO_CONTRACT_ENDPOINT} --func \"Hello2\"\npost\n"},{"Name":"pkgpath.txt","Body":"r/moul_basics_hello_v1\n"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"weWevQ7OqMQ/rVwsXNmc93fSKxwD/6zW1DlFOwB1H7seOCvao8mjK3fypQqrLZpDwYLXxFXBUjHXPmgFphQypQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","package":{"Name":"demo","Path":"gno.land/r/demo/hyojin_hello1","Files":[{"Name":"Makefile","Body":"-include ../single.mk\n"},{"Name":"README.md","Body":"# [r/moul_basics_hello_v1](https://test2.gno.land/r/moul_basics_hello_v1)\n_`README.md` generated by \"make integration\"._\n\n## Examples\n\n```console\nfoo@bar:~$ gnokey maketx call \"MYWALLET\" --gas-fee \"1ugnot\"  \\\n\u003e --broadcast \"true\" --chainid \"test2\" --remote \"test2.gno.land:36657\"  \\\n\u003e --gas-wanted \"1000000\" --pkgpath gno.land/r/moul_basics_hello_v1  \\\n\u003e --func Hello\n```\n\n```console\nfoo@bar:~$ gnokey maketx call \"MYWALLET\" --gas-fee \"1ugnot\"  \\\n\u003e --broadcast \"true\" --chainid \"test2\" --remote \"test2.gno.land:36657\"  \\\n\u003e --gas-wanted \"1000000\" --pkgpath gno.land/r/moul_basics_hello_v1  \\\n\u003e --func Hello2\n```\n\n## `gnodev test`\n\n```console\nfoo@bar:~$ gnodev test . --verbose\n=== RUN   Test\n--- PASS: Test (0.00s)\nok      ./. \t0.81s\n```\n\n## How to publish locally\n\n```sh\ngnokey maketx addpkg \"MYWALLET\" --deposit \"1ugnot\" --gas-fee \"1ugnot\" --gas-wanted \"10000000\" --broadcast \"true\" --remote \"localhost:26657\" --chainid \"dev\" --pkgpath \"gno.land/r/moul_basics_hello_v1\" --pkgdir \".\"\n```\n\n"},{"Name":"contract.gno","Body":"package demo\n\nfunc Hello() string {\n\treturn \"Hello World!\"\n}\n\nfunc privateMethod() string {\n\treturn \"I'm private\"\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport \"testing\"\n\nfunc Test(t *testing.T) {\n\tgot := Hello()\n\texpected := \"Hello World!\"\n\tif got != expected {\n\t\tt.Fatalf(\"expected %q, got %q.\", expected, got)\n\t}\n\n\tgot2 := privateMethod()\n\texpected2 := \"I'm private\"\n\tif got2 != expected2 {\n\t\tt.Fatalf(\"expected %q, got %q.\", expected2, got2)\n\t}\n}\n"},{"Name":"integrations.sh","Body":"#!/bin/bash\n\n. ../integrations.lib.sh\n\npre\ncall --pkgpath ${GNO_CONTRACT_ENDPOINT} --func \"Hello\"\ncall --pkgpath ${GNO_CONTRACT_ENDPOINT} --func \"Hello2\"\npost\n"},{"Name":"pkgpath.txt","Body":"r/moul_basics_hello_v1\n"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"15F053kCJvPO957C977HRCT4pJpcIKxVa7ySpwTOhQBSvOhKJyy4UZa3I/MLVbFdCDeP5Rguq58lRQe1EeWa4Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","package":{"Name":"demo","Path":"gno.land/r/demo/hyojin_hello1","Files":[{"Name":"Makefile","Body":"-include ../single.mk\n"},{"Name":"README.md","Body":"# [r/moul_basics_hello_v1](https://test2.gno.land/r/moul_basics_hello_v1)\n_`README.md` generated by \"make integration\"._\n\n## Examples\n\n```console\nfoo@bar:~$ gnokey maketx call \"MYWALLET\" --gas-fee \"1ugnot\"  \\\n\u003e --broadcast \"true\" --chainid \"test2\" --remote \"test2.gno.land:36657\"  \\\n\u003e --gas-wanted \"1000000\" --pkgpath gno.land/r/moul_basics_hello_v1  \\\n\u003e --func Hello\n```\n\n```console\nfoo@bar:~$ gnokey maketx call \"MYWALLET\" --gas-fee \"1ugnot\"  \\\n\u003e --broadcast \"true\" --chainid \"test2\" --remote \"test2.gno.land:36657\"  \\\n\u003e --gas-wanted \"1000000\" --pkgpath gno.land/r/moul_basics_hello_v1  \\\n\u003e --func Hello2\n```\n\n## `gnodev test`\n\n```console\nfoo@bar:~$ gnodev test . --verbose\n=== RUN   Test\n--- PASS: Test (0.00s)\nok      ./. \t0.81s\n```\n\n## How to publish locally\n\n```sh\ngnokey maketx addpkg \"MYWALLET\" --deposit \"1ugnot\" --gas-fee \"1ugnot\" --gas-wanted \"10000000\" --broadcast \"true\" --remote \"localhost:26657\" --chainid \"dev\" --pkgpath \"gno.land/r/moul_basics_hello_v1\" --pkgdir \".\"\n```\n\n"},{"Name":"contract.gno","Body":"package demo\n\nfunc Hello() string {\n\treturn \"Hello World!\"\n}\n\nfunc privateMethod() string {\n\treturn \"I'm private\"\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport \"testing\"\n\nfunc Test(t *testing.T) {\n\tgot := Hello()\n\texpected := \"Hello World!\"\n\tif got != expected {\n\t\tt.Fatalf(\"expected %q, got %q.\", expected, got)\n\t}\n\n\tgot2 := privateMethod()\n\texpected2 := \"I'm private\"\n\tif got2 != expected2 {\n\t\tt.Fatalf(\"expected %q, got %q.\", expected2, got2)\n\t}\n}\n"},{"Name":"integrations.sh","Body":"#!/bin/bash\n\n. ../integrations.lib.sh\n\npre\ncall --pkgpath ${GNO_CONTRACT_ENDPOINT} --func \"Hello\"\ncall --pkgpath ${GNO_CONTRACT_ENDPOINT} --func \"Hello2\"\npost\n"},{"Name":"pkgpath.txt","Body":"r/moul_basics_hello_v1\n"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"ZREoucLYqYX2YH93Hqx/YctOxQbiRdT8p4bEvQMoPPYQH5rxm5NeE1XXarCQTZxb7hZyC1K5spO9eE58SEf9Rw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","package":{"Name":"demo","Path":"gno.land/r/demo/hyojin_hello1","Files":[{"Name":"contract.gno","Body":"package demo\n\nfunc Hello() string {\n\treturn \"Hello World!\"\n}\n\nfunc privateMethod() string {\n\treturn \"I'm private\"\n}\n"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"LgFKd66MZQ74cOhNCebl/nQrNmYU4+sz79zQOA3Jy21evvKAENcn8/3ntkSF/jrH+IDPo33hHRuO5ZPzRXAqnQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/hyojin_hello1","func":"Hello","args":["","hyojin",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"ZnLygciVapu567n17aY5nzXRuVyXvXcV6piNj5DB8EZIXdk8nnZrHqml3XGMQsKK2FlJ8RaoXsYXfSFYYsfTjw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/hyojin_hello1","func":"Hello","args":null}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"yueS6LHABUCgqH/yvsScLwIsAeKbHsG0moug0iWzD/UsxHerRt4zvzZBKPQPk8iINtNFoHZC4cw5X+eJk6hhGg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pl3x96jqswtg3gx3ukf2dq4jpcdl4egqev6hg2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["test"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArYHP8RjlnLQGQp/YsDRAu11djOFtCFZe4Oxwi36nLm3"},"signature":"NOdFFz7xjhKUI5V/UWb79NzocF6rqS+MCnFS0lEH8cgRhHQvv/hDctn5iH+S+7JsoiJ/VyzJ1b282wBl0IOOMQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pl3x96jqswtg3gx3ukf2dq4jpcdl4egqev6hg2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["toomanytest"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArYHP8RjlnLQGQp/YsDRAu11djOFtCFZe4Oxwi36nLm3"},"signature":"yRdTXm4f9OY01MeEQBwMfKxuZSkafsbVvRT4VxhSi7Ue8eb1AXxq7Xe4Kqt2QJ8JBBq7y2pyQevE7FXRt3jz6g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pl3x96jqswtg3gx3ukf2dq4jpcdl4egqev6hg2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["toomanytest"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArYHP8RjlnLQGQp/YsDRAu11djOFtCFZe4Oxwi36nLm3"},"signature":"qO38rp2ltYUC7HTeBSxQTjsbAKWrqdTjZstxpBZNptEDeqfF8YHU6J056xtmIbkEKvxFA/Qg10vTvqJEelA3Bw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pl3x96jqswtg3gx3ukf2dq4jpcdl4egqev6hg2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["hello"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArYHP8RjlnLQGQp/YsDRAu11djOFtCFZe4Oxwi36nLm3"},"signature":"vJw/DAASswWCQZZPREASuYBk8sC/AoANf3fUDGZHxTNQ+yTelKT4hFGUhLsxV/G059CrAuG7UIGAcSYBRL4SLA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pl3x96jqswtg3gx3ukf2dq4jpcdl4egqev6hg2","send":"","pkg_path":"gno.land/r/boards","func":"CreateBoard","args":["hello"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArYHP8RjlnLQGQp/YsDRAu11djOFtCFZe4Oxwi36nLm3"},"signature":"8hH4tyEd9eLL8wORcAVaEqOdNUpIs/EzT4JVAZVqMiEcRRxJMSUWPRIaQQRnZ1p9z4T32Ysgvdz6f90mt/feRw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pl3x96jqswtg3gx3ukf2dq4jpcdl4egqev6hg2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["hello"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArYHP8RjlnLQGQp/YsDRAu11djOFtCFZe4Oxwi36nLm3"},"signature":"P5xeYgaRvgNmWVKRdzBKiSgLyg2paMxskEsVo3MDUUIFSUHoUKWZZgK6lB9rDmz7I4/TY014TGHWfGqpyZgdcQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pl3x96jqswtg3gx3ukf2dq4jpcdl4egqev6hg2","send":"","pkg_path":"gno.land/r/demo/boards","func":"GetBoardIDFromName","args":["gno"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArYHP8RjlnLQGQp/YsDRAu11djOFtCFZe4Oxwi36nLm3"},"signature":"STwyBlOnqwwbA06uY8d9Jk3mEmftiQIhycfjypV6wNxVkFVFgPaaejpF/XIKlBmH7559DK18gxpwanHcMB39Cg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fnakf9vrd6uqn8qdmp88yam4p0ngy572answ9f","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["2","hello","testing123"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3cWVULHSHC1mwK8o1vfJHKfNMvLEvKU/sHPQoFWRoey"},"signature":"ccNxGgBKeJgA5JhrdV3tlVf73HaFMUoqeh/2ksbKgZkHpHF866tVJoyVTvZVobqxvkiE71EtS5PjTcTXcaxZVg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fnakf9vrd6uqn8qdmp88yam4p0ngy572answ9f","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["2","1","1","hii\\'imtesting"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3cWVULHSHC1mwK8o1vfJHKfNMvLEvKU/sHPQoFWRoey"},"signature":"dDNpX35uWDoi9YWhEOS1tXeiIitDyXfd37XkoUICbm5bhHi4Pgefle1lWIEUXbLvg9yKdugV5ohDSdXsXVNw9g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fnakf9vrd6uqn8qdmp88yam4p0ngy572answ9f","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateRepost","args":["2","1","repost","reposttest","3"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3cWVULHSHC1mwK8o1vfJHKfNMvLEvKU/sHPQoFWRoey"},"signature":"v3hh7CIJZh5LsHIcCYPIylA8DIHCdEGWCUOoEMixqBRfTJj511RvW3biux9xL/jvwgDaLr1S+CrVveIFCy3XNw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15y6dzs6p8dq55qdele2wrj8as0fuz040f2hk97","to_address":"g15eqryxvqqdf0000crujq2uakcrnw8j5wnzy602","amount":"50000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7VtSx4/TQyUsbOQ037Icd7XTJsM7CIbTVjTNEXjrQLS"},"signature":"mYtKMkivQynZqYh6ZV+a3CkNMGT9sz5djLLl+RyQzohsxjVxLCP2RCaEHenFs5VfPMElU9dpDe+o9t3DH6o7qg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15eqryxvqqdf0000crujq2uakcrnw8j5wnzy602","to_address":"g1jt8xsjz9at8r9gpnq9273ua3dm6glz6yu0743e","amount":"1000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A910dKT5An/hX8ogtUWm8BB1XWAqe4HZaWErlkx7BEds"},"signature":"h+BxvqsVTmnaGVrfMWimVLyyltX4kELUVr0lXBz+M1AOod8DnPhicfLhEMDXUocm6yT07D+bEYx/+GDtFrfCrg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15eqryxvqqdf0000crujq2uakcrnw8j5wnzy602","to_address":"g1e5l3epr626lwvxd4ux2xkg4shp20jtlvsrjrum","amount":"2000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A910dKT5An/hX8ogtUWm8BB1XWAqe4HZaWErlkx7BEds"},"signature":"wa3NTMV65X6GDiH2qGHN8qUIBPrp4YKdZI7pixt9YdoyEZhJtMutNQyA4YC8GwQ7tYX+m2TpeEunyoiw2ytJMQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"demo","Path":"gno.land/r/moul/basics/hello/v1","Files":[{"Name":"contract.gno","Body":"package demo\n\nfunc Hello() string {\n\treturn \"Hello World!\"\n}\n\nfunc privateMethod() string {\n\treturn \"I'm private\"\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport \"testing\"\n\nfunc Test(t *testing.T) {\n\tgot := Hello()\n\texpected := \"Hello World!\"\n\tif got != expected {\n\t\tt.Fatalf(\"expected %q, got %q.\", expected, got)\n\t}\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"1SUAW5Zd1Cvxm3z4aBII2S5iuxhEueYcJQzlEsNHB44Yza3KybOCc55MZIUn5qWB3I3I1l/EaHesrVj+ribBdw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"demo","Path":"gno.land/r/moul/basics-hello-v1","Files":[{"Name":"contract.gno","Body":"package demo\n\nfunc Hello() string {\n\treturn \"Hello World!\"\n}\n\nfunc privateMethod() string {\n\treturn \"I'm private\"\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport \"testing\"\n\nfunc Test(t *testing.T) {\n\tgot := Hello()\n\texpected := \"Hello World!\"\n\tif got != expected {\n\t\tt.Fatalf(\"expected %q, got %q.\", expected, got)\n\t}\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"Rk2zne5lqlG75TUwny6aoSMRs/T7GZv4sVqzd3d8qXo04vSU/eXlkih+ylOkz3e9j0Ka3AlAxS3i59YJJjUTxw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"demo","Path":"gno.land/r/moul/basics_hello_v1","Files":[{"Name":"contract.gno","Body":"package demo\n\nfunc Hello() string {\n\treturn \"Hello World!\"\n}\n\nfunc privateMethod() string {\n\treturn \"I'm private\"\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport \"testing\"\n\nfunc Test(t *testing.T) {\n\tgot := Hello()\n\texpected := \"Hello World!\"\n\tif got != expected {\n\t\tt.Fatalf(\"expected %q, got %q.\", expected, got)\n\t}\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"F+DapFYPnk8fYSe/c8ldHf1QHGcAqNN1RuaLy5bmHhg6tIID7UmpCqrLMqvq6w9uP9u545x5DSv+Mp2gmmVX+A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"demo","Path":"gno.land/r/moul/basics_args_v1","Files":[{"Name":"contract.gno","Body":"package demo\n\nfunc Hello(name string) string {\n\treturn \"Hello \" + name + \"!\"\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport \"testing\"\n\nfunc Test(t *testing.T) {\n\tgot := Hello(\"People\")\n\texpected := \"Hello People!\"\n\tif got != expected {\n\t\tt.Fatalf(\"expected %q, got %q.\", expected, got)\n\t}\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"6L4gTSuUjM5dRVdAfTVnqsY+SXSWQIx5Tuw0FtSRPR5FT0a7UlG+NbrzX1URTnCw3JW9X/iP8+dKaI0P0DlqlA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"demo","Path":"gno.land/r/moul/basics/args/v1","Files":[{"Name":"contract.gno","Body":"package demo\n\nfunc Hello(name string) string {\n\treturn \"Hello \" + name + \"!\"\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport \"testing\"\n\nfunc Test(t *testing.T) {\n\tgot := Hello(\"People\")\n\texpected := \"Hello People!\"\n\tif got != expected {\n\t\tt.Fatalf(\"expected %q, got %q.\", expected, got)\n\t}\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"arL0cmMuT9I51VIGlTRnC9QfayaQnN7HL7XcDU8A0mcl8dw2QbGzUlGrrqqmro5AXApCG7ZnR81WPow+KsQ/tA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"demo","Path":"gno.land/r/moul/basics/hello/v1","Files":[{"Name":"contract.gno","Body":"package demo\n\nfunc Hello() string {\n\treturn \"Hello World!\"\n}\n\nfunc privateMethod() string {\n\treturn \"I'm private\"\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport \"testing\"\n\nfunc Test(t *testing.T) {\n\tgot := Hello()\n\texpected := \"Hello World!\"\n\tif got != expected {\n\t\tt.Fatalf(\"expected %q, got %q.\", expected, got)\n\t}\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"/47vcOWYPIBmHiXJAzfR07797pee/wW1BnkxkegMs2lhj+ySY7LetY+I8Nl+OP2ecvb3ylIk5TW79eH/NVg9Uw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"demo","Path":"gno.land/r/moul/basics/args/v1","Files":[{"Name":"contract.gno","Body":"package demo\n\nfunc Hello(name string) string {\n\treturn \"Hello \" + name + \"!\"\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport \"testing\"\n\nfunc Test(t *testing.T) {\n\tgot := Hello(\"People\")\n\texpected := \"Hello People!\"\n\tif got != expected {\n\t\tt.Fatalf(\"expected %q, got %q.\", expected, got)\n\t}\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"soU8HQp+LJTWcKLyzbKewVey5yt3g41ZppyE+VQi2KI2DdZ1uoqVWAeQw2Fznumh5U4xnm+IwbkZBLFRybKXtA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"demo","Path":"gno.land/r/moul/basics/data/v1","Files":[{"Name":"contract.gno","Body":"package demo\n\nvar total int\n\nfunc init() {\n\ttotal = 1000\n}\n\nfunc Add(nb int) int {\n\ttotal += nb\n\treturn total\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport \"testing\"\n\nfunc Test(t *testing.T) {\n\t{ // call 1\n\t\tgot := Add(42)\n\t\texpected := 1042\n\t\tif got != expected {\n\t\t\tt.Fatalf(\"expected %d, got %d.\", expected, got)\n\t\t}\n\t}\n\t{ // call 2\n\t\tgot := Add(295)\n\t\texpected := 1337\n\t\tif got != expected {\n\t\t\tt.Fatalf(\"expected %d, got %d.\", expected, got)\n\t\t}\n\t}\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"bXNMUvsVaxMl4GAB9o+zAH5zNeIxLnkpp10Rk2qSn8UNAzKs70f0rMRzgwwP7w0Px7PMNyvOHVpoVKUisD8dEw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"demo","Path":"gno.land/r/moul/basics/render/v1","Files":[{"Name":"contract.gno","Body":"package demo\n\nimport \"strings\"\n\nfunc Hello() string {\n\treturn \"Hello World!\"\n}\n\nfunc greetings(name string) string { // private\n\treturn \"Welcome, \" + name + \"!\"\n}\n\nfunc Render(path string) string {\n\tswitch {\n\tcase path == \"hello\":\n\t\treturn Hello()\n\tcase strings.HasPrefix(path, \"greetings/\"):\n\t\tname := strings.Split(path, \"/\")[1] // take string after slash\n\t\tname = strings.Title(name)          // capitalize first letter\n\t\treturn greetings(name)\n\tcase path == \"\":\n\t\tout := \"- [hello](/r/moul_basics_004:hello)\\n\"\n\t\tout += \"- [greetings/Manfred](/r/moul_basics_004:greetings/Manfred)\\n\"\n\t\treturn out\n\t}\n\treturn \"404\"\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport \"testing\"\n\nfunc Test(t *testing.T) {\n\tshouldEqual(t, \"hello\", \"Hello World!\")\n\tshouldEqual(t, \"greetings/Manfred\", \"Welcome, Manfred!\")\n\tshouldEqual(t, \"foobar\", \"404\")\n}\n\nfunc shouldEqual(t *testing.T, path string, expected string) {\n\tt.Helper()\n\n\tgot := Render(path)\n\tif got != expected {\n\t\tt.Fatalf(\"expected %d, got %d.\", expected, got)\n\t}\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"mBwRu95i0/QzO/9S3W6pgw5i1aRvIqVUw/lwta5HqC8mr0bhJZ0keVFcKQMM9aqlRiqRZ2nK+ERq6+7LotXXJQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"demo","Path":"gno.land/r/moul/basics/import/v1","Files":[{"Name":"contract.gno","Body":"package demo\n\nimport (\n\t\"gno.land/p/demo/avl\"\n\t\"gno.land/p/demo/dom\"\n)\n\nfunc Render(path string) string {\n\tthread := dom.Plot{Name: \"Hello!\"}\n\tthread.AddPost(\"Foo\", \"foo foo foo\")\n\tthread.AddPost(\"Bar\", \"bar bar bar\")\n\treturn thread.String()\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport (\n\t\"strings\"\n\t\"testing\"\n)\n\nfunc Test(t *testing.T) {\n\tgot := Render(\"\")\n\texpected := `\n# [plot] Hello!\n\n## Foo\nfoo foo foo\n## Bar\nbar bar bar\n`\n\tif strings.TrimSpace(got) != strings.TrimSpace(expected) {\n\t\tt.Fatalf(\"expected %q, got %q.\", expected, got)\n\t}\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"N7OdvDdUv8zLSpbIV8DuxA3xSAr7ae/pmoHRBc9hRqJymtnpqhDziWitlvjg1lVuozEh88V2LC6zZvuN506/lA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"demo","Path":"gno.land/r/moul/basics/grc20/v1","Files":[{"Name":"contract.gno","Body":"package demo\n\nimport (\n\t\"std\"\n\n\t\"gno.land/p/demo/grc/grc20\"\n)\n\n// FooToken is exported. Other contracts can interact with it.\nvar FooToken grc20.IGRC20\n\nfunc init() {\n\t// generate minter and mint some tokens to test1.\n\tconst test1 = std.Address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\tminter := grc20.NewAdminToken(\"Foo Token\", \"FOO\", 4)\n\tminter.Mint(test1, 100000000)\n\n\t// publicly expose an unprivileged implementation of IGRC20.\n\tFooToken = minter.GRC20()\n}\n\nfunc MyBalance() uint64 {\n\tcaller := std.GetOrigCaller()\n\tbalance, err := FooToken.BalanceOf(caller)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport (\n\t\"std\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"gno.land/p/demo/testutils\"\n)\n\nfunc Test(t *testing.T) {\n\ttest1 := std.Address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\ttest2 := testutils.TestAddress(\"test2\")\n\tstd.TestSetOrigCaller(test1)\n\n\t// check token metadata.\n\t{\n\t\tgot := FooToken.GetName()\n\t\texpected := \"Foo Token\"\n\t\tif strings.TrimSpace(got) != strings.TrimSpace(expected) {\n\t\t\tt.Fatalf(\"expected %q, got %q.\", expected, got)\n\t\t}\n\t}\n\n\t// check balance of test1.\n\t{\n\t\tgot, _ := FooToken.BalanceOf(test1)\n\t\texpected := 100000000\n\t\tif got != expected {\n\t\t\tt.Fatalf(\"expected %d, got %d.\", expected, got)\n\t\t}\n\t}\n\n\t// transfer tokens to test2.\n\t_ = FooToken.Transfer(test2, 1000)\n\n\t// check balance of test1.\n\t{\n\t\tgot, _ := FooToken.BalanceOf(test1)\n\t\texpected := 99999000\n\t\tif got != expected {\n\t\t\tt.Fatalf(\"expected %d, got %d.\", expected, got)\n\t\t}\n\t}\n\n\t// check balance of test2.\n\t{\n\t\tgot, _ := FooToken.BalanceOf(test2)\n\t\texpected := 1000\n\t\tif got != expected {\n\t\t\tt.Fatalf(\"expected %d, got %d.\", expected, got)\n\t\t}\n\t}\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"25+Y6cZsfTwEZGKVlZ/YqEagrks5GAlB5+jP16ygE80wagYYHI3uR+XZjab3Ms9t9589WFCvx4bNDw88MwBO9Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"demo","Path":"gno.land/r/moul/basics/vault/v1","Files":[{"Name":"contract.gno","Body":"package demo\n\nimport (\n\t\"std\"\n\n\t\"gno.land/p/demo/grc/exts/vault\"\n\t\"gno.land/p/demo/grc/grc20\"\n)\n\n// FooToken and FooVault are exported. Other contracts can interact with them.\nvar FooToken grc20.IGRC20\nvar FooVault vault.Vault\n\nfunc init() {\n\t// generate admin and mint some tokens to test1.\n\tconst test1 = std.Address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\tadmin := grc20.NewAdminToken(\"Foo Token\", \"FOO\", 4)\n\tadmin.Mint(test1, 100000000)\n\n\t// publicly expose an unprivileged implementation of IGRC20.\n\tFooToken = admin.GRC20()\n\n\t// publicly expose a vault.\n\tFooVault = vault.New(admin)\n}\n\nfunc MyBalance() uint64 {\n\tcaller := std.GetOrigCaller()\n\tbalance, err := FooToken.BalanceOf(caller)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n\nfunc Deposit(amount uint, recoverAddress std.Address) {\n\tlockDuration := uint(100) // in blocks.\n\tFooVault.Deposit(amount, recoverAddress, lockDuration)\n}\n\nfunc Recover(target std.Address) {\n\tFooVault.Recover(target)\n}\n\nfunc Unvault(amount uint) {\n\tFooVault.Unvault(amount)\n}\n\nfunc Redeem(amount uint) {\n\tFooVault.Redeem()\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport (\n\t\"std\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"gno.land/p/demo/testutils\"\n)\n\nfunc Test(t *testing.T) {\n\ttest1 := std.Address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\ttest2 := testutils.TestAddress(\"test2\")\n\tstd.TestSetOrigCaller(test1)\n\n\t// check token metadata.\n\t{\n\t\tgot := FooToken.GetName()\n\t\texpected := \"Foo Token\"\n\t\tif strings.TrimSpace(got) != strings.TrimSpace(expected) {\n\t\t\tt.Fatalf(\"expected %q, got %q.\", expected, got)\n\t\t}\n\t}\n\n\t// check balance of test1.\n\t{\n\t\tgot, _ := FooToken.BalanceOf(test1)\n\t\texpected := 100000000\n\t\tif got != expected {\n\t\t\tt.Fatalf(\"expected %d, got %d.\", expected, got)\n\t\t}\n\t}\n\n\t// transfer tokens to test2.\n\t_ = FooToken.Transfer(test2, 1000)\n\n\t// check balance of test1.\n\t{\n\t\tgot, _ := FooToken.BalanceOf(test1)\n\t\texpected := 99999000\n\t\tif got != expected {\n\t\t\tt.Fatalf(\"expected %d, got %d.\", expected, got)\n\t\t}\n\t}\n\n\t// check balance of test2.\n\t{\n\t\tgot, _ := FooToken.BalanceOf(test2)\n\t\texpected := 1000\n\t\tif got != expected {\n\t\t\tt.Fatalf(\"expected %d, got %d.\", expected, got)\n\t\t}\n\t}\n\n\t// TODO: test the vault.\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"u6HcsBoZKOk34iqYn4vPfwHW+of1bORZb5j39YzJZlt0XGc8rAD7UfAryQai4iq2+jjIObvuypzH4TD7lkY5VA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"coin","Path":"gno.land/r/moul/basics/wikipedia_coin/v1","Files":[{"Name":"contract.gno","Body":"// based on Wikipedia's Solidity example: https://en.wikipedia.org/wiki/Solidity\npackage coin\n\nimport (\n\t\"std\"\n\t\"strconv\"\n\n\t\"gno.land/p/demo/avl\"\n\t\"gno.land/p/demo/ufmt\"\n)\n\nvar balances = avl.NewMutTree() // addr -\u003e balance\nvar minter std.Address\n\n// Constructor code is only run when the contract is created\nfunc init() {\n\tminter = std.GetOrigCaller()\n}\n\nfunc Mint(receiver std.Address, amount uint) {\n\tif std.GetOrigCaller() != minter {\n\t\tpanic(\"restricted\")\n\t}\n\tcurBalance := BalanceOf(receiver)\n\tnewBalance := curBalance + amount\n\tbalances.Set(receiver.String(), newBalance)\n}\n\nfunc Send(receiver std.Address, amount uint) {\n\tsender := std.GetOrigCaller()\n\tsenderBalance := BalanceOf(sender)\n\tif amount \u003e senderBalance {\n\t\tpanic(ufmt.Sprintf(\"insufficient balance: %d\", senderBalance))\n\t}\n\treceiverBalance := BalanceOf(receiver)\n\tbalances.Set(sender.String(), senderBalance-amount)\n\tbalances.Set(receiver.String(), receiverBalance+amount)\n}\n\nfunc BalanceOf(addr std.Address) uint {\n\tbalance, found := balances.Get(addr.String())\n\tif !found {\n\t\treturn 0\n\t}\n\treturn balance.(uint)\n}\n"},{"Name":"contract_test.gno","Body":"package coin\n\nimport (\n\t\"std\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"gno.land/p/demo/testutils\"\n)\n\nfunc Test(t *testing.T) {\n\ttest2 := testutils.TestAddress(\"test2\")\n\n\tmint := uint(1000)\n\tMint(test2, mint)\n\n\tstd.TestSetOrigCaller(test2) // dropping privileges\n\tbal := BalanceOf(test2)\n\tif bal != mint {\n\t\tt.Errorf(\"expected %d, got %d\", mint, bal)\n\t}\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"CsD3Ceppy87aQvvDthdHFODs4OLhgpGaWnO58MlJdWUiWkSzwjZ4d+u/pCbCqPXG+DgAIhHot0J8RDrL1EGnzQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"demo","Path":"gno.land/r/moul/basics/import/v1","Files":[{"Name":"contract.gno","Body":"package demo\n\nimport (\n\t\"gno.land/p/demo/avl\"\n\t\"gno.land/p/demo/dom\"\n)\n\nfunc Render(path string) string {\n\tthread := dom.Plot{Name: \"Hello!\"}\n\tthread.AddPost(\"Foo\", \"foo foo foo\")\n\tthread.AddPost(\"Bar\", \"bar bar bar\")\n\treturn thread.String()\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport (\n\t\"strings\"\n\t\"testing\"\n)\n\nfunc Test(t *testing.T) {\n\tgot := Render(\"\")\n\texpected := `\n# [plot] Hello!\n\n## Foo\nfoo foo foo\n## Bar\nbar bar bar\n`\n\tif strings.TrimSpace(got) != strings.TrimSpace(expected) {\n\t\tt.Fatalf(\"expected %q, got %q.\", expected, got)\n\t}\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"yqXb0RXTSjSGvjm1Wyh5/zX1aSyvb6X8sS2oMm452qE+7UUGXfHRKiZnqd3b+iv3GYOCAK6eoUwtMvBr6zdaUw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"dom","Path":"gno.land/p/demo/dom","Files":[{"Name":"dom.gno","Body":"package dom\n\nimport (\n\t\"strconv\"\n\n\t\"gno.land/p/demo/avl\"\n)\n\ntype Plot struct {\n\tName     string\n\tPosts    *avl.Tree // postsCtr -\u003e *Post\n\tPostsCtr int\n}\n\nfunc (plot *Plot) AddPost(title string, body string) {\n\tctr := plot.PostsCtr\n\tplot.PostsCtr++\n\tkey := strconv.Itoa(ctr)\n\tpost := \u0026Post{\n\t\tTitle: title,\n\t\tBody:  body,\n\t}\n\tposts2, _ := plot.Posts.Set(key, post)\n\tplot.Posts = posts2\n}\n\nfunc (plot *Plot) String() string {\n\tstr := \"# [plot] \" + plot.Name + \"\\n\"\n\tif plot.Posts.Size() \u003e 0 {\n\t\tplot.Posts.Iterate(\"\", \"\", func(n *avl.Tree) bool {\n\t\t\tstr += \"\\n\"\n\t\t\tstr += n.Value().(*Post).String()\n\t\t\treturn false\n\t\t})\n\t}\n\treturn str\n}\n\ntype Post struct {\n\tTitle    string\n\tBody     string\n\tComments *avl.Tree\n}\n\nfunc (post *Post) String() string {\n\tstr := \"## \" + post.Title + \"\\n\"\n\tstr += \"\"\n\tstr += post.Body\n\tif post.Comments.Size() \u003e 0 {\n\t\tpost.Comments.Iterate(\"\", \"\", func(n *avl.Tree) bool {\n\t\t\tstr += \"\\n\"\n\t\t\tstr += n.Value().(*Comment).String()\n\t\t\treturn false\n\t\t})\n\t}\n\treturn str\n}\n\ntype Comment struct {\n\tCreator string\n\tBody    string\n}\n\nfunc (cmm Comment) String() string {\n\treturn cmm.Body + \" - @\" + cmm.Creator + \"\\n\"\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"lnInXnnWZzDAXOvXZ4gbx75zZELlWkcG2M/2CtCjyk5uPNQQMWsHh15h4P/EU8ySp5pG8r+ZIaAYLhOd2EytPw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"demo","Path":"gno.land/r/moul/basics/import/v1","Files":[{"Name":"contract.gno","Body":"package demo\n\nimport (\n\t\"gno.land/p/demo/avl\"\n\t\"gno.land/p/demo/dom\"\n)\n\nfunc Render(path string) string {\n\tthread := dom.Plot{Name: \"Hello!\"}\n\tthread.AddPost(\"Foo\", \"foo foo foo\")\n\tthread.AddPost(\"Bar\", \"bar bar bar\")\n\treturn thread.String()\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport (\n\t\"strings\"\n\t\"testing\"\n)\n\nfunc Test(t *testing.T) {\n\tgot := Render(\"\")\n\texpected := `\n# [plot] Hello!\n\n## Foo\nfoo foo foo\n## Bar\nbar bar bar\n`\n\tif strings.TrimSpace(got) != strings.TrimSpace(expected) {\n\t\tt.Fatalf(\"expected %q, got %q.\", expected, got)\n\t}\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"HHf01jmt8+0CkXmz9VdzM10jJGbPI/isaU99PvoABPUqttdLYV4B+BK0KTOnscbVfuoNSYaW9enwyIDT19zyWg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"demo","Path":"gno.land/r/moul/basics/vault/v1","Files":[{"Name":"contract.gno","Body":"package demo\n\nimport (\n\t\"std\"\n\n\t\"gno.land/p/demo/grc/exts/vault\"\n\t\"gno.land/p/demo/grc/grc20\"\n)\n\n// FooToken and FooVault are exported. Other contracts can interact with them.\nvar FooToken grc20.IGRC20\nvar FooVault vault.Vault\n\nfunc init() {\n\t// generate admin and mint some tokens to test1.\n\tconst test1 = std.Address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\tadmin := grc20.NewAdminToken(\"Foo Token\", \"FOO\", 4)\n\tadmin.Mint(test1, 100000000)\n\n\t// publicly expose an unprivileged implementation of IGRC20.\n\tFooToken = admin.GRC20()\n\n\t// publicly expose a vault.\n\tFooVault = vault.New(admin)\n}\n\nfunc MyBalance() uint64 {\n\tcaller := std.GetOrigCaller()\n\tbalance, err := FooToken.BalanceOf(caller)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n\nfunc Deposit(amount uint, recoverAddress std.Address) {\n\tlockDuration := uint(100) // in blocks.\n\tFooVault.Deposit(amount, recoverAddress, lockDuration)\n}\n\nfunc Recover(target std.Address) {\n\tFooVault.Recover(target)\n}\n\nfunc Unvault(amount uint) {\n\tFooVault.Unvault(amount)\n}\n\nfunc Redeem(amount uint) {\n\tFooVault.Redeem()\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport (\n\t\"std\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"gno.land/p/demo/testutils\"\n)\n\nfunc Test(t *testing.T) {\n\ttest1 := std.Address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\ttest2 := testutils.TestAddress(\"test2\")\n\tstd.TestSetOrigCaller(test1)\n\n\t// check token metadata.\n\t{\n\t\tgot := FooToken.GetName()\n\t\texpected := \"Foo Token\"\n\t\tif strings.TrimSpace(got) != strings.TrimSpace(expected) {\n\t\t\tt.Fatalf(\"expected %q, got %q.\", expected, got)\n\t\t}\n\t}\n\n\t// check balance of test1.\n\t{\n\t\tgot, _ := FooToken.BalanceOf(test1)\n\t\texpected := 100000000\n\t\tif got != expected {\n\t\t\tt.Fatalf(\"expected %d, got %d.\", expected, got)\n\t\t}\n\t}\n\n\t// transfer tokens to test2.\n\t_ = FooToken.Transfer(test2, 1000)\n\n\t// check balance of test1.\n\t{\n\t\tgot, _ := FooToken.BalanceOf(test1)\n\t\texpected := 99999000\n\t\tif got != expected {\n\t\t\tt.Fatalf(\"expected %d, got %d.\", expected, got)\n\t\t}\n\t}\n\n\t// check balance of test2.\n\t{\n\t\tgot, _ := FooToken.BalanceOf(test2)\n\t\texpected := 1000\n\t\tif got != expected {\n\t\t\tt.Fatalf(\"expected %d, got %d.\", expected, got)\n\t\t}\n\t}\n\n\t// TODO: test the vault.\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"Y9MvvWSK3wLidXzXumRawce2fjidbLcmURWas9pcmYNsEm79bAnZIhnlLU8YJnqHHRbCqZd4Oo/q+BsmhYa0Rg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"vault","Path":"gno.land/p/demo/grc/exts/vault","Files":[{"Name":"errors.gno","Body":"package vault\n\nimport \"errors\"\n\nvar (\n\tErrNoSuchVault      = errors.New(\"no such vault\")\n\tErrTooEarlyToRedeem = errors.New(\"too early to redeem\")\n)\n"},{"Name":"vault.gno","Body":"package vault\n\nimport (\n\t\"std\"\n\n\t\"gno.land/p/demo/avl\"\n\t\"gno.land/p/demo/grc/grc20\"\n)\n\n// Vault is a GRC20 compatible token with vault features.\ntype Vault interface {\n\tDeposit(amount uint, recovery std.Address, lockDuration uint) error\n\tUnvault(amount uint) error\n\tRecover(dest std.Address) error\n\tRedeem() error\n}\n\nfunc New(adminToken *grc20.AdminToken) Vault {\n\treturn \u0026impl{\n\t\tadminToken: adminToken,\n\t\tusers:      avl.NewMutTree(),\n\t}\n}\n\ntype impl struct {\n\tadminToken *grc20.AdminToken\n\tusers      *avl.MutTree // std.Address -\u003e userVault\n}\n\ntype userVault struct {\n\t// constructor parameters.\n\trecover      std.Address\n\tlockDuration uint\n\n\t// internal parameters.\n\towner           std.Address\n\tredeemMinHeight int64\n\tunvaultedAmount uint\n}\n\nfunc (v *impl) Deposit(amount uint, recover std.Address, lockDuration uint) error {\n\tcaller := std.GetOrigCaller()\n\tpkgAddr := std.GetOrigPkgAddr()\n\n\tuv := userVault{\n\t\tlockDuration:    lockDuration,\n\t\tredeemMinHeight: 0, // will be set in Unvault.\n\t\tunvaultedAmount: 0, // will be increased in Unvault, zeroed in Redeem.\n\t\towner:           caller,\n\t}\n\n\t// deposit.\n\terr := v.adminToken.Transfer(caller, pkgAddr, uint64(amount))\n\tif err != nil {\n\t\treturn err\n\t}\n\tv.users.Set(caller.String(), \u0026uv)\n\n\treturn nil\n}\n\nfunc (v *impl) Unvault(amount uint) error {\n\tcaller := std.GetOrigCaller()\n\tuv, err := v.getUserVault(caller)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tbalance, err := v.adminToken.BalanceOf(caller)\n\tif err != nil {\n\t\treturn err\n\t}\n\tif balance \u003c uint64(amount) {\n\t\treturn grc20.ErrInsufficientBalance\n\t}\n\n\tprintln(\"AAA1\", std.GetHeight(), uv.redeemMinHeight, uv.lockDuration)\n\tuv.redeemMinHeight = std.GetHeight() + int64(uv.lockDuration)\n\tuv.unvaultedAmount += amount\n\tv.users.Set(caller.String(), uv)\n\tprintln(\"AAA2\", std.GetHeight(), uv.redeemMinHeight, uv.lockDuration)\n\treturn nil\n}\n\nfunc (v *impl) Redeem() error {\n\tpkgAddr := std.GetOrigPkgAddr()\n\tcaller := std.GetOrigCaller()\n\tuv, err := v.getUserVault(caller)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tprintln(\"AAA3\", std.GetHeight(), uv.redeemMinHeight, uv.lockDuration)\n\tif std.GetHeight() \u003c uv.redeemMinHeight {\n\t\treturn ErrTooEarlyToRedeem\n\t}\n\t// TODO: check balance. (should be optional, but let's be sure).\n\t// TODO: check height.\n\n\t// transfer token.\n\terr = v.adminToken.Transfer(pkgAddr, caller, uint64(uv.unvaultedAmount))\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tuv.unvaultedAmount = 0\n\t// TODO: if balance == 0 -\u003e destroy?\n\treturn nil\n}\n\nfunc (v *impl) Recover(dest std.Address) error {\n\t// TODO: assert caller (recovery).\n\t// TODO: trasfertToken.\n\t// TODO: destroy?\n\treturn nil\n}\n\nfunc (v *impl) getUserVault(address std.Address) (*userVault, error) {\n\tuvI, exists := v.users.Get(address.String())\n\tif !exists {\n\t\treturn nil, ErrNoSuchVault\n\t}\n\tuv := uvI.(*userVault)\n\treturn uv, nil\n}\n"},{"Name":"vault_filetest.gno","Body":"package main\n\nimport (\n\t\"std\"\n\t\"time\"\n\n\t\"gno.land/p/demo/grc/exts/vault\"\n\t\"gno.land/p/demo/grc/grc20\"\n\t\"gno.land/p/demo/testutils\"\n\t\"gno.land/p/demo/ufmt\"\n)\n\nfunc main() {\n\talice := testutils.TestAddress(\"alice\")\n\tbob := testutils.TestAddress(\"bob\")       // recovery request address (cold wallet).\n\tcharly := testutils.TestAddress(\"charly\") // recovery dest.\n\tpkgaddr := std.GetOrigPkgAddr()\n\n\t// create a fooAdminToken + fooToken (GRC20) pair.\n\tfooAdminToken := grc20.NewAdminToken(\"Foo\", \"FOO\", 4)\n\tfooAdminToken.Mint(alice, 1000)\n\tfooToken := fooAdminToken.GRC20()\n\n\tprintBalances := func() {\n\t\taliceBalance, _ := fooToken.BalanceOf(alice)\n\t\tbobBalance, _ := fooToken.BalanceOf(bob)\n\t\tcharlyBalance, _ := fooToken.BalanceOf(charly)\n\t\tpkgBalance, _ := fooToken.BalanceOf(pkgaddr)\n\t\tprintln(ufmt.Sprintf(\n\t\t\t\"balances: alice=%d, bob=%d, charly=%d, pkg=%d, height=%d\",\n\t\t\taliceBalance, bobBalance, charlyBalance, pkgBalance, std.GetHeight(),\n\t\t))\n\t}\n\n\t// create a vault for fooAdminToken.\n\tv := vault.New(fooAdminToken)\n\tprintBalances()\n\n\t// alice deposits 300 with an unlock duration of 5 blocks.\n\tstd.TestSetOrigCaller(alice)\n\tlockAmount := uint(300)\n\tlockDuration := uint(5)\n\tcheckErr(v.Deposit(lockAmount, bob, lockDuration))\n\tprintBalances()\n\n\t// alice calls unvault for 200 tokens.\n\tcheckErr(v.Unvault(200))\n\tprintBalances()\n\n\t// alice waits for few blocks.\n\tstd.TestSkipHeights(int64(lockDuration) + 1)\n\tprintBalances()\n\n\t// alice redeems 200 tokens.\n\tcheckErr(v.Redeem())\n\tprintBalances()\n\n\t// bob instantly recover everything in the wallet.\n\tstd.TestSetOrigCaller(bob)\n\tcheckErr(v.Recover(charly))\n\tprintBalances()\n}\n\nfunc checkErr(err error) {\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n\n// Output:\n// balances: alice=1000, bob=0, charly=0, pkg=0, height=123\n// balances: alice=700, bob=0, charly=0, pkg=300, height=123\n// AAA1 123 0 5\n// AAA2 123 128 5\n// balances: alice=700, bob=0, charly=0, pkg=300, height=123\n// balances: alice=700, bob=0, charly=0, pkg=300, height=129\n// AAA3 129 128 5\n// balances: alice=900, bob=0, charly=0, pkg=100, height=129\n// balances: alice=900, bob=0, charly=0, pkg=100, height=129\n"},{"Name":"vault_test.gno","Body":"package vault\n\n// TODO: unit tests, edge cases.\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"YG+YRtk4A26lxEen+lAlpGuijP9qMrmlrjm65i4W64sKt1+TCofvUB1q0BeTZPSb2yzQjUWTC4PXfkkIeM2tOg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"demo","Path":"gno.land/r/moul/basics/vault/v1","Files":[{"Name":"contract.gno","Body":"package demo\n\nimport (\n\t\"std\"\n\n\t\"gno.land/p/demo/grc/exts/vault\"\n\t\"gno.land/p/demo/grc/grc20\"\n)\n\n// FooToken and FooVault are exported. Other contracts can interact with them.\nvar FooToken grc20.IGRC20\nvar FooVault vault.Vault\n\nfunc init() {\n\t// generate admin and mint some tokens to test1.\n\tconst test1 = std.Address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\tadmin := grc20.NewAdminToken(\"Foo Token\", \"FOO\", 4)\n\tadmin.Mint(test1, 100000000)\n\n\t// publicly expose an unprivileged implementation of IGRC20.\n\tFooToken = admin.GRC20()\n\n\t// publicly expose a vault.\n\tFooVault = vault.New(admin)\n}\n\nfunc MyBalance() uint64 {\n\tcaller := std.GetOrigCaller()\n\tbalance, err := FooToken.BalanceOf(caller)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n\nfunc Deposit(amount uint, recoverAddress std.Address) {\n\tlockDuration := uint(100) // in blocks.\n\tFooVault.Deposit(amount, recoverAddress, lockDuration)\n}\n\nfunc Recover(target std.Address) {\n\tFooVault.Recover(target)\n}\n\nfunc Unvault(amount uint) {\n\tFooVault.Unvault(amount)\n}\n\nfunc Redeem(amount uint) {\n\tFooVault.Redeem()\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport (\n\t\"std\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"gno.land/p/demo/testutils\"\n)\n\nfunc Test(t *testing.T) {\n\ttest1 := std.Address(\"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\")\n\ttest2 := testutils.TestAddress(\"test2\")\n\tstd.TestSetOrigCaller(test1)\n\n\t// check token metadata.\n\t{\n\t\tgot := FooToken.GetName()\n\t\texpected := \"Foo Token\"\n\t\tif strings.TrimSpace(got) != strings.TrimSpace(expected) {\n\t\t\tt.Fatalf(\"expected %q, got %q.\", expected, got)\n\t\t}\n\t}\n\n\t// check balance of test1.\n\t{\n\t\tgot, _ := FooToken.BalanceOf(test1)\n\t\texpected := 100000000\n\t\tif got != expected {\n\t\t\tt.Fatalf(\"expected %d, got %d.\", expected, got)\n\t\t}\n\t}\n\n\t// transfer tokens to test2.\n\t_ = FooToken.Transfer(test2, 1000)\n\n\t// check balance of test1.\n\t{\n\t\tgot, _ := FooToken.BalanceOf(test1)\n\t\texpected := 99999000\n\t\tif got != expected {\n\t\t\tt.Fatalf(\"expected %d, got %d.\", expected, got)\n\t\t}\n\t}\n\n\t// check balance of test2.\n\t{\n\t\tgot, _ := FooToken.BalanceOf(test2)\n\t\texpected := 1000\n\t\tif got != expected {\n\t\t\tt.Fatalf(\"expected %d, got %d.\", expected, got)\n\t\t}\n\t}\n\n\t// TODO: test the vault.\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"CrUVxZqDgoGJLACvHD3N7K7AzrZOADCMwcoBBQOVcEAtgL/7ujf94+CuQ0gbH3VtwKN9aHheqZ24HeOssdXETQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/moul/basics/hello/v1","func":"Hello","args":null}],"fee":{"gas_wanted":"500000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"J86SwYg/1G3J3ONWyKrUd4ED8EfRA5Fcp+lSGn2uKxxZtUB3Z+h1DIh86iupQsitywWr4LxqCsdy06Yo9IhhJA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/moul/basics/args/v1","func":"Hello","args":["Universe"]}],"fee":{"gas_wanted":"500000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"O35GNKYw1KTvc7j86gL6nOKxkq3S0tyo4CuSlnRviQJMzZdRRcbi+SY1gw2JAQEOcuYpzVxwOTQg4bCQEdfm6g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/moul/basics/args/v1","func":"Hello","args":["Multiverse"]}],"fee":{"gas_wanted":"500000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"SKfPt771SW6oJY8f/8LIWFA4smoohGuG+bJTqSXDL7xne1XFOCDR0XvVUAmx5rtV5kcSvJvZzqbLOpCXb3neEA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/moul/basics/data/v1","func":"Add","args":["42"]}],"fee":{"gas_wanted":"500000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"axRm+fosbnDXBJjuLcw84ih9ZNS1I5Bwn+h4C/3JMvEmUj1Rqp/LpRrn/4hKCqvD6ToDuqFFuATBHrXMEvyofg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/moul/basics/data/v1","func":"Add","args":["295"]}],"fee":{"gas_wanted":"500000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"9J0cbKgILeP4l3MYiSpxbQwCo3a/IQIe7ariJeOBdNRyyi6tqvUTe7jQsj5LoXGJFsiqepPVlvTNcGGyvJPF1w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/moul/basics/render/v1","func":"Render","args":["hello"]}],"fee":{"gas_wanted":"500000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"81WewaYRCOzfMirFwJqMhuqJ53/45wmCvB6akKdokQAWIkcaYEPwyyYxKEX2twEYxjKnzse7KvxMA4d7TiaUiA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/moul/basics/render/v1","func":"Render","args":["foobar"]}],"fee":{"gas_wanted":"500000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"56heK4CmY0SE0zj8R9f9ZFJo/uV5r6V9ORuUtE5M4f9LGvXJDYr+WOvai4ooR0Y4Hpm+4S2YFYCM4mrcUYAMMg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/moul/basics/import/v1","func":"Render","args":["y"]}],"fee":{"gas_wanted":"500000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"KJHf9nAIQZfkGEAjZHrbCrg7KbsPhZmZK1fBQbII7BlBwy2dTJaEh1rl9sTi3J7tuZaUL1L9W0jr0lRrjl8mpA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/moul/basics/grc20/v1","func":"MyBalance","args":null}],"fee":{"gas_wanted":"500000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"olj6t9IvnLHO/iYTrMDKKhJtVEe1JdJnx8ajoQ6xv/sgwf4CLvq6HHENzl7tsq+oA05SRp0EZHrGUsm86PyK9Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/moul/basics/vault/v1","func":"Deposit","args":["10000","g1myrecoveryaddress"]}],"fee":{"gas_wanted":"500000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"tattFZZUEJVgro+scmC33JVg9FY7NnL4oraYpfSr5gUN+5R/0r1u/rWIpIotH164gpMVI5gQnLFlLGYtxw4Eeg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/moul/basics/vault/v1","func":"MyBalance","args":null}],"fee":{"gas_wanted":"500000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"LgpxEo5Td3qDYJyI6vATnaUIBxgBvOeJIFE5FFU25KdBWsPKhCD2+761RnPPjwHC+SkteVFSzsOYm+dYVCnLCQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/moul/basics/wikipedia_coin/v1","func":"Deposit","args":["10000","g1myrecoveryaddress"]}],"fee":{"gas_wanted":"500000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"lXi4L+NwFLhwwxceqXsE5wBQhuq5QgFDJ0flsI5ZrjQfIazc/ErrhqXEOfp//MSU42BGY2eXqQI3YlE2y75CNQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/moul/basics/wikipedia_coin/v1","func":"MyBalance","args":null}],"fee":{"gas_wanted":"500000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"EhsnPT52XRPwI9m86VcR0cDEqUIKdMhDNZXJQUFtYM9TWhcp++ISdl96rbXnBhz3s6Uzy2vz+dg/FYYzU0Dw3A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"demo","Path":"gno.land/r/moul/basics/hello/v1","Files":[{"Name":"contract.gno","Body":"package demo\n\nfunc Hello() string {\n\treturn \"Hello World!\"\n}\n\nfunc privateMethod() string {\n\treturn \"I'm private\"\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport \"testing\"\n\nfunc Test(t *testing.T) {\n\tgot := Hello()\n\texpected := \"Hello World!\"\n\tif got != expected {\n\t\tt.Fatalf(\"expected %q, got %q.\", expected, got)\n\t}\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"EqGe5pxqT1EJmO5NDKpYszM/lzgY7yWbasvVTZvUOf9sY+5WA2Gxvx0pLMj7rRF7vgp1zmhQTVxnjVxIZjp1Pg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"demo","Path":"gno.land/r/moul/basics/data/v1","Files":[{"Name":"contract.gno","Body":"package demo\n\nvar total int\n\nfunc init() {\n\ttotal = 1000\n}\n\nfunc Add(nb int) int {\n\ttotal += nb\n\treturn total\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport \"testing\"\n\nfunc Test(t *testing.T) {\n\t{ // call 1\n\t\tgot := Add(42)\n\t\texpected := 1042\n\t\tif got != expected {\n\t\t\tt.Fatalf(\"expected %d, got %d.\", expected, got)\n\t\t}\n\t}\n\t{ // call 2\n\t\tgot := Add(295)\n\t\texpected := 1337\n\t\tif got != expected {\n\t\t\tt.Fatalf(\"expected %d, got %d.\", expected, got)\n\t\t}\n\t}\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"P7g/ChJ/xXkkx0Um00C5RbZWbCv1/wqLZNbzTyVz9KgZqZ6HAaJPdk5a1MWM35eZEz/RFXcSgnsmkPQQi9UaFw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"demo","Path":"gno.land/r/moul/basics/render/v1","Files":[{"Name":"contract.gno","Body":"package demo\n\nimport \"strings\"\n\nfunc Hello() string {\n\treturn \"Hello World!\"\n}\n\nfunc greetings(name string) string { // private\n\treturn \"Welcome, \" + name + \"!\"\n}\n\nfunc Render(path string) string {\n\tswitch {\n\tcase path == \"hello\":\n\t\treturn Hello()\n\tcase strings.HasPrefix(path, \"greetings/\"):\n\t\tname := strings.Split(path, \"/\")[1] // take string after slash\n\t\tname = strings.Title(name)          // capitalize first letter\n\t\treturn greetings(name)\n\tcase path == \"\":\n\t\tout := \"- [hello](/r/moul_basics_004:hello)\\n\"\n\t\tout += \"- [greetings/Manfred](/r/moul_basics_004:greetings/Manfred)\\n\"\n\t\treturn out\n\t}\n\treturn \"404\"\n}\n"},{"Name":"contract_test.gno","Body":"package demo\n\nimport \"testing\"\n\nfunc Test(t *testing.T) {\n\tshouldEqual(t, \"hello\", \"Hello World!\")\n\tshouldEqual(t, \"greetings/Manfred\", \"Welcome, Manfred!\")\n\tshouldEqual(t, \"foobar\", \"404\")\n}\n\nfunc shouldEqual(t *testing.T, path string, expected string) {\n\tt.Helper()\n\n\tgot := Render(path)\n\tif got != expected {\n\t\tt.Fatalf(\"expected %d, got %d.\", expected, got)\n\t}\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"1jUgxXcNjRRRqJfDrDjWS7ZqYVXs1tbfF9WiFpwCh1g+P24/I0pAWt/AW5/RzSNxnHKy5DJptAmgLkUKKbOrnA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"coin","Path":"gno.land/r/moul/basics/wikipedia_coin/v1","Files":[{"Name":"contract.gno","Body":"// based on Wikipedia's Solidity example: https://en.wikipedia.org/wiki/Solidity\npackage coin\n\nimport (\n\t\"std\"\n\t\"strconv\"\n\n\t\"gno.land/p/demo/avl\"\n\t\"gno.land/p/demo/ufmt\"\n)\n\nvar balances = avl.NewMutTree() // addr -\u003e balance\nvar minter std.Address\n\n// Constructor code is only run when the contract is created\nfunc init() {\n\tminter = std.GetOrigCaller()\n}\n\nfunc Mint(receiver std.Address, amount uint) {\n\tif std.GetOrigCaller() != minter {\n\t\tpanic(\"restricted\")\n\t}\n\tcurBalance := BalanceOf(receiver)\n\tnewBalance := curBalance + amount\n\tbalances.Set(receiver.String(), newBalance)\n}\n\nfunc Send(receiver std.Address, amount uint) {\n\tsender := std.GetOrigCaller()\n\tsenderBalance := BalanceOf(sender)\n\tif amount \u003e senderBalance {\n\t\tpanic(ufmt.Sprintf(\"insufficient balance: %d\", senderBalance))\n\t}\n\treceiverBalance := BalanceOf(receiver)\n\tbalances.Set(sender.String(), senderBalance-amount)\n\tbalances.Set(receiver.String(), receiverBalance+amount)\n}\n\nfunc BalanceOf(addr std.Address) uint {\n\tbalance, found := balances.Get(addr.String())\n\tif !found {\n\t\treturn 0\n\t}\n\treturn balance.(uint)\n}\n"},{"Name":"contract_test.gno","Body":"package coin\n\nimport (\n\t\"std\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"gno.land/p/demo/testutils\"\n)\n\nfunc Test(t *testing.T) {\n\ttest2 := testutils.TestAddress(\"test2\")\n\n\tmint := uint(1000)\n\tMint(test2, mint)\n\n\tstd.TestSetOrigCaller(test2) // dropping privileges\n\tbal := BalanceOf(test2)\n\tif bal != mint {\n\t\tt.Errorf(\"expected %d, got %d\", mint, bal)\n\t}\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"2j+fqyQG09BLgiEMv84v5luLWKp56ZgcgND0WXZno+h1nEJJttztLxv3msAbZK9E7KqGSYA7rH9DGZo1k+/l0Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"coin","Path":"gno.land/r/moul/basics/wikipedia_coin/v1","Files":[{"Name":"contract.gno","Body":"// based on Wikipedia's Solidity example: https://en.wikipedia.org/wiki/Solidity\npackage coin\n\nimport (\n\t\"std\"\n\t\"strconv\"\n\n\t\"gno.land/p/demo/avl\"\n\t\"gno.land/p/demo/ufmt\"\n)\n\nvar balances = avl.NewMutTree() // addr -\u003e balance\nvar minter std.Address\n\n// Constructor code is only run when the contract is created\nfunc init() {\n\tminter = std.GetOrigCaller()\n}\n\nfunc Mint(receiver std.Address, amount uint) {\n\tif std.GetOrigCaller() != minter {\n\t\tpanic(\"restricted\")\n\t}\n\tcurBalance := BalanceOf(receiver)\n\tnewBalance := curBalance + amount\n\tbalances.Set(receiver.String(), newBalance)\n}\n\nfunc Send(receiver std.Address, amount uint) {\n\tsender := std.GetOrigCaller()\n\tsenderBalance := BalanceOf(sender)\n\tif amount \u003e senderBalance {\n\t\tpanic(ufmt.Sprintf(\"insufficient balance: %d\", senderBalance))\n\t}\n\treceiverBalance := BalanceOf(receiver)\n\tbalances.Set(sender.String(), senderBalance-amount)\n\tbalances.Set(receiver.String(), receiverBalance+amount)\n}\n\nfunc BalanceOf(addr std.Address) uint {\n\tbalance, found := balances.Get(addr.String())\n\tif !found {\n\t\treturn 0\n\t}\n\treturn balance.(uint)\n}\n"},{"Name":"contract_test.gno","Body":"package coin\n\nimport (\n\t\"std\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"gno.land/p/demo/testutils\"\n)\n\nfunc Test(t *testing.T) {\n\ttest2 := testutils.TestAddress(\"test2\")\n\n\tmint := uint(1000)\n\tMint(test2, mint)\n\n\tstd.TestSetOrigCaller(test2) // dropping privileges\n\tbal := BalanceOf(test2)\n\tif bal != mint {\n\t\tt.Errorf(\"expected %d, got %d\", mint, bal)\n\t}\n}\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"lsD90JXbpMT1F8fwDk6wWOcZ6I9Pi38w9rYYx3ZPrW1fjDz8n38/qC0jRLGjdunq4TXEmtaAKCSrpwzpo4u4IQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","package":{"Name":"vault","Path":"gno.land/p/demo/grc/exts/vault","Files":[{"Name":"errors.gno","Body":"package vault\n\nimport \"errors\"\n\nvar (\n\tErrNoSuchVault      = errors.New(\"no such vault\")\n\tErrTooEarlyToRedeem = errors.New(\"too early to redeem\")\n)\n"},{"Name":"vault.gno","Body":"package vault\n\nimport (\n\t\"std\"\n\n\t\"gno.land/p/demo/avl\"\n\t\"gno.land/p/demo/grc/grc20\"\n)\n\n// Vault is a GRC20 compatible token with vault features.\ntype Vault interface {\n\tDeposit(amount uint, recovery std.Address, lockDuration uint) error\n\tUnvault(amount uint) error\n\tRecover(dest std.Address) error\n\tRedeem() error\n}\n\nfunc New(adminToken *grc20.AdminToken) Vault {\n\treturn \u0026impl{\n\t\tadminToken: adminToken,\n\t\tusers:      avl.NewMutTree(),\n\t}\n}\n\ntype impl struct {\n\tadminToken *grc20.AdminToken\n\tusers      *avl.MutTree // std.Address -\u003e userVault\n}\n\ntype userVault struct {\n\t// constructor parameters.\n\trecover      std.Address\n\tlockDuration uint\n\n\t// internal parameters.\n\towner           std.Address\n\tredeemMinHeight int64\n\tunvaultedAmount uint\n}\n\nfunc (v *impl) Deposit(amount uint, recover std.Address, lockDuration uint) error {\n\tcaller := std.GetOrigCaller()\n\tpkgAddr := std.GetOrigPkgAddr()\n\n\tuv := userVault{\n\t\tlockDuration:    lockDuration,\n\t\tredeemMinHeight: 0, // will be set in Unvault.\n\t\tunvaultedAmount: 0, // will be increased in Unvault, zeroed in Redeem.\n\t\towner:           caller,\n\t}\n\n\t// deposit.\n\terr := v.adminToken.Transfer(caller, pkgAddr, uint64(amount))\n\tif err != nil {\n\t\treturn err\n\t}\n\tv.users.Set(caller.String(), \u0026uv)\n\n\treturn nil\n}\n\nfunc (v *impl) Unvault(amount uint) error {\n\tcaller := std.GetOrigCaller()\n\tuv, err := v.getUserVault(caller)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tbalance, err := v.adminToken.BalanceOf(caller)\n\tif err != nil {\n\t\treturn err\n\t}\n\tif balance \u003c uint64(amount) {\n\t\treturn grc20.ErrInsufficientBalance\n\t}\n\n\tprintln(\"AAA1\", std.GetHeight(), uv.redeemMinHeight, uv.lockDuration)\n\tuv.redeemMinHeight = std.GetHeight() + int64(uv.lockDuration)\n\tuv.unvaultedAmount += amount\n\tv.users.Set(caller.String(), uv)\n\tprintln(\"AAA2\", std.GetHeight(), uv.redeemMinHeight, uv.lockDuration)\n\treturn nil\n}\n\nfunc (v *impl) Redeem() error {\n\tpkgAddr := std.GetOrigPkgAddr()\n\tcaller := std.GetOrigCaller()\n\tuv, err := v.getUserVault(caller)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tprintln(\"AAA3\", std.GetHeight(), uv.redeemMinHeight, uv.lockDuration)\n\tif std.GetHeight() \u003c uv.redeemMinHeight {\n\t\treturn ErrTooEarlyToRedeem\n\t}\n\t// TODO: check balance. (should be optional, but let's be sure).\n\t// TODO: check height.\n\n\t// transfer token.\n\terr = v.adminToken.Transfer(pkgAddr, caller, uint64(uv.unvaultedAmount))\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tuv.unvaultedAmount = 0\n\t// TODO: if balance == 0 -\u003e destroy?\n\treturn nil\n}\n\nfunc (v *impl) Recover(dest std.Address) error {\n\t// TODO: assert caller (recovery).\n\t// TODO: trasfertToken.\n\t// TODO: destroy?\n\treturn nil\n}\n\nfunc (v *impl) getUserVault(address std.Address) (*userVault, error) {\n\tuvI, exists := v.users.Get(address.String())\n\tif !exists {\n\t\treturn nil, ErrNoSuchVault\n\t}\n\tuv := uvI.(*userVault)\n\treturn uv, nil\n}\n"},{"Name":"vault_filetest.gno","Body":"package main\n\nimport (\n\t\"std\"\n\t\"time\"\n\n\t\"gno.land/p/demo/grc/exts/vault\"\n\t\"gno.land/p/demo/grc/grc20\"\n\t\"gno.land/p/demo/testutils\"\n\t\"gno.land/p/demo/ufmt\"\n)\n\nfunc main() {\n\talice := testutils.TestAddress(\"alice\")\n\tbob := testutils.TestAddress(\"bob\")       // recovery request address (cold wallet).\n\tcharly := testutils.TestAddress(\"charly\") // recovery dest.\n\tpkgaddr := std.GetOrigPkgAddr()\n\n\t// create a fooAdminToken + fooToken (GRC20) pair.\n\tfooAdminToken := grc20.NewAdminToken(\"Foo\", \"FOO\", 4)\n\tfooAdminToken.Mint(alice, 1000)\n\tfooToken := fooAdminToken.GRC20()\n\n\tprintBalances := func() {\n\t\taliceBalance, _ := fooToken.BalanceOf(alice)\n\t\tbobBalance, _ := fooToken.BalanceOf(bob)\n\t\tcharlyBalance, _ := fooToken.BalanceOf(charly)\n\t\tpkgBalance, _ := fooToken.BalanceOf(pkgaddr)\n\t\tprintln(ufmt.Sprintf(\n\t\t\t\"balances: alice=%d, bob=%d, charly=%d, pkg=%d, height=%d\",\n\t\t\taliceBalance, bobBalance, charlyBalance, pkgBalance, std.GetHeight(),\n\t\t))\n\t}\n\n\t// create a vault for fooAdminToken.\n\tv := vault.New(fooAdminToken)\n\tprintBalances()\n\n\t// alice deposits 300 with an unlock duration of 5 blocks.\n\tstd.TestSetOrigCaller(alice)\n\tlockAmount := uint(300)\n\tlockDuration := uint(5)\n\tcheckErr(v.Deposit(lockAmount, bob, lockDuration))\n\tprintBalances()\n\n\t// alice calls unvault for 200 tokens.\n\tcheckErr(v.Unvault(200))\n\tprintBalances()\n\n\t// alice waits for few blocks.\n\tstd.TestSkipHeights(int64(lockDuration) + 1)\n\tprintBalances()\n\n\t// alice redeems 200 tokens.\n\tcheckErr(v.Redeem())\n\tprintBalances()\n\n\t// bob instantly recover everything in the wallet.\n\tstd.TestSetOrigCaller(bob)\n\tcheckErr(v.Recover(charly))\n\tprintBalances()\n}\n\nfunc checkErr(err error) {\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n\n// Output:\n// balances: alice=1000, bob=0, charly=0, pkg=0, height=123\n// balances: alice=700, bob=0, charly=0, pkg=300, height=123\n// AAA1 123 0 5\n// AAA2 123 128 5\n// balances: alice=700, bob=0, charly=0, pkg=300, height=123\n// balances: alice=700, bob=0, charly=0, pkg=300, height=129\n// AAA3 129 128 5\n// balances: alice=900, bob=0, charly=0, pkg=100, height=129\n// balances: alice=900, bob=0, charly=0, pkg=100, height=129\n"},{"Name":"vault_test.gno","Body":"package vault\n\n// TODO: unit tests, edge cases.\n"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"T8rBDiYrOKZbCYsE/pzQlI0C6YrpJhAQTY4v0ohPY3pkj90UCjEeyyX/KHERORQkaMAJO+++nkJcCmQ9z06WaQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/moul/basics/wikipedia_coin/v1","func":"Deposit","args":["10000","g1myrecoveryaddress"]}],"fee":{"gas_wanted":"500000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"4dSZ78krMKwIZqmecCASn162OesRn+mfZd5Q0Jme9q1Erl/iXLbmikuqHMwfZERKGpYAA8bwbzWnC9HD/Fyw3A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/moul/basics/wikipedia_coin/v1","func":"BalanceOf","args":["g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5"]}],"fee":{"gas_wanted":"500000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"W+H82fNujPUTXTFZ6RBo5+osExE5CiNpaV//EAqRWW1yd6eA4tt3VZctQKcw4CPDU2IFP+sLp4TGyu5IphqRRA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/moul/basics/wikipedia_coin/v1","func":"Mint","args":["g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","12345"]}],"fee":{"gas_wanted":"500000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"XYkKXFcczr7nGdWPmZdCZ+LaCYgeeb1FdsKiTpHxS9oFI6Tv05gpRFrxYzT6+VFncNgeh5XgaHRFp0kqBW64Jw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"10000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"FRufNUS+oO+ci2NZRf5H7nWrY+XFIvzEdJVTuiFBEB10HA0q6Jd90Sa2lKsyd55pdJjKKWjpx1RUCvNZL1BB1A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1fnakf9vrd6uqn8qdmp88yam4p0ngy572answ9f","to_address":"g1enmqv8h3lz8aydch3p5uvhv725xwucvzy4zv3a","amount":"500000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3cWVULHSHC1mwK8o1vfJHKfNMvLEvKU/sHPQoFWRoey"},"signature":"yb8K0bdy35OK9wtxnq3aeXPSx8sCXhDLlnqsXb3TpmMG6rosvg7XxdskDiGEcNPDgYQuLQ7wR2gABI1C6bvd1g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g122n67es9vzs0rmharsggfr4sdkd45aysnuzf7m","amount":"10000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"amgDNK6SnPC2fiESuHFMNbv/Y5EUH9cdNzSs/3ZY0IBLoWoPG1X52pu+bZDU27gIHWZZoAY4B4Mh3l8lqr/8hg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"1300000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"TnqK9HFtJLnnws1fNnYPaWz9CrcNDkFZHH25hcG1SCwTP4c7L9pLGG/pwD8JjS5yX8Gnx0tJmMdUCyj1zEMZ/g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"1000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"tfIPtAuEF+kqR1LwAA1EkWH84pcO3z5aNrwr0zcdh6d2MAaToV67t33A6Zb/XUV1JgQaZQSP4qGJ3wuYAKj/eA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"KrMiZvjd/mU/RB6a0So4FlmqCAC7GZjlTks0sQbuQcJJ77i+EEaH0IkKiGA/39w2Istca026kR1vC1gdA8Exag=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1eldzmdvkhfmqruzyjc8van8hmxzgtrmpyatu5g","to_address":"g1292eaacuwqttzz0cvht0pryqpz67s9dr4wn5ea","amount":"10000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyNCCgemqDQCe3H3V/8tOPQ+t0BC4Zngqkh6dN0qV/5e"},"signature":"99Rugv5f3HZsh2dj4//tdy1Xa6SY0CLJccBBOGdQhgFaIQJkRtA0osYB4B3spniUzc8+bmyQEIrOmVRGfgnjwA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1eldzmdvkhfmqruzyjc8van8hmxzgtrmpyatu5g","to_address":"g1sxveh8ptxmp7tsy9qt8yyym4uy7g2nghearmvh","amount":"10000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyNCCgemqDQCe3H3V/8tOPQ+t0BC4Zngqkh6dN0qV/5e"},"signature":"QiWwHRw9cCI1hnin4FKb3BFfzyQDcpSYIHIseWKn3qh9CkqDx1BJ6DSWc+2uWi5fDgiyX48NP1HXaca6b4fJDQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","package":{"Name":"token","Path":"gno.land/r/demo/token","Files":[{"Name":"store.gno","Body":"package token\r\n\r\nimport (\r\n\t\"gno.land/p/demo/avl\"\r\n)\r\n\r\nvar (\r\n\ttokenList = avl.NewMutTree() //symbol -\u003e *Token\r\n)\r\n"},{"Name":"token.gno","Body":"package token\r\n\r\nimport (\r\n\t\"strings\"\r\n\r\n\t\"std\"\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\n// CreateToken creates a new token with the given symbol and name.\r\n// accounts format: address=balance (multiline)\r\nfunc CreateToken(name, symbol string, decimals uint, accounts, minter string) {\r\n\tif tokenList.Has(symbol) {\r\n\t\tpanic(\"token already exists\")\r\n\t}\r\n\r\n\ttoken := grc20.NewAdminToken(name, symbol, decimals)\r\n\tusers, err := parseAccounts(accounts)\r\n\tnoError(err)\r\n\r\n\tfor _, user := range users {\r\n\t\terr = token.Mint(std.Address(user.Address), user.Balance)\r\n\t\tnoError(err)\r\n\t}\r\n\r\n\ttokenList.Set(symbol, \u0026Token{minter, token})\r\n}\r\n\r\n// mgss.\r\n\r\nfunc Transfer(symbol string, to users.AddressOrName, amount uint64) {\r\n\ttoken := getToken(symbol)\r\n\tcaller := std.GetOrigCaller()\r\n\ttoken.token.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(symbol string, spender users.AddressOrName, amount uint64) {\r\n\ttoken := getToken(symbol)\r\n\tcaller := std.GetOrigCaller()\r\n\ttoken.token.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(symbol string, from, to users.AddressOrName, amount uint64) {\r\n\ttoken := getToken(symbol)\r\n\tcaller := std.GetOrigCaller()\r\n\ttoken.token.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(symbol string, amount uint64) {\r\n\ttoken := getToken(symbol)\r\n\tcaller := std.GetOrigCaller()\r\n\ttoken.token.Burn(caller, amount)\r\n}\r\n\r\n// admin.\r\n\r\nfunc Mint(symbol string, address users.AddressOrName, amount uint64) {\r\n\ttoken := getToken(symbol)\r\n\tcaller := std.GetOrigCaller()\r\n\tif caller.String() != token.minter {\r\n\t\tpanic(\"not authorized\")\r\n\t}\r\n\ttoken.token.Mint(address.Resolve(), amount)\r\n}\r\n\r\n// query\r\n\r\nfunc TotalSupply(symbol string) uint64 {\r\n\ttoken := getToken(symbol)\r\n\r\n\treturn token.token.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(symbol string, owner users.AddressOrName) uint64 {\r\n\ttoken := getToken(symbol)\r\n\tbalance, err := token.token.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(symbol string, owner, spender users.AddressOrName) uint64 {\r\n\ttoken := getToken(symbol)\r\n\tallowance, err := token.token.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn ufmt.Sprintf(\"Total tokens: %d\", tokenList.Size())\r\n\tcase c == 3 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\ttoken := getToken(parts[2])\r\n\t\tbalance, _ := token.token.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n"},{"Name":"types.gno","Body":"package token\r\n\r\nimport \"gno.land/p/demo/grc/grc20\"\r\n\r\ntype Account struct {\r\n\tAddress string\r\n\tBalance uint64\r\n}\r\n\r\ntype Token struct {\r\n\tminter string\r\n\ttoken  *grc20.AdminToken\r\n}\r\n"},{"Name":"utils.gno","Body":"package token\r\n\r\nimport (\r\n\t\"errors\"\r\n\t\"strconv\"\r\n\t\"strings\"\r\n)\r\n\r\nfunc noError(err error) {\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n}\r\n\r\nfunc getToken(symbol string) *Token {\r\n\tdata, exist := tokenList.Get(symbol)\r\n\tif !exist {\r\n\t\tpanic(\"token not found\")\r\n\t}\r\n\r\n\treturn data.(*Token)\r\n}\r\n\r\nfunc parseAccounts(csv string) ([]Account, error) {\r\n\tlines := strings.Split(csv, \"\\n\")\r\n\taccounts := make([]Account, len(lines))\r\n\tfor i, line := range lines {\r\n\t\tfields := strings.Split(line, \"=\")\r\n\t\tif len(fields) != 2 {\r\n\t\t\treturn nil, errors.New(\"invalid accounts format\")\r\n\t\t}\r\n\r\n\t\tbalance, err := strconv.Atoi(fields[1])\r\n\t\tif err != nil {\r\n\t\t\treturn nil, errors.New(\"invalid account balance, \" + err.Error())\r\n\t\t}\r\n\r\n\t\taccounts[i] = Account{\r\n\t\t\tAddress: fields[0],\r\n\t\t\tBalance: uint64(balance),\r\n\t\t}\r\n\t}\r\n\r\n\treturn accounts, nil\r\n}\r\n"}]},"deposit":""}],"fee":{"gas_wanted":"4000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"rQbuxaDWqCn+XhgDeKq2mTjAgsYlB1bqOVIUdS4f2OhHt7CTC2l4QXr69gAQfRO3Pd5FFq54q02y/4hOdJvKDg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/token","func":"CreateToken","args":["SOL","PER","4","g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t=10000000000",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"l/DESEKcxV/hhk39bGWBOV90O6KmYyGQFKNtg3/XdYRzcZaz/Ix2Y3oUOjsrhhQsEM7qcv+Aa8ZjmKX5HA7L1Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1kwcd3seuptwn6vmn8096t3h8yj026qukf6m303","to_address":"g1cxwkv47835dkf259tccju7znk845jx3ny8jhwj","amount":"100000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuXApPtXMDg3qmytzwPgt18BpLSQtCQCoonurBoZorS3"},"signature":"YTif11Ov0KPHgNZ2hO2xtXAEfP1CpBOs1pqB5ANHKgwljh4MlR8XaBWvK4EYw3C8d2sDBOo5HaD7SFAbpNysrg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1kwcd3seuptwn6vmn8096t3h8yj026qukf6m303","to_address":"g1cxwkv47835dkf259tccju7znk845jx3ny8jhwj","amount":"100000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuXApPtXMDg3qmytzwPgt18BpLSQtCQCoonurBoZorS3"},"signature":"in3ad79QzvVnwdTcrdEoK6KLwcmS+4n6Wf3Cu4nptjRSeUmXANdZWHwj57uxzfHOJHeuVdcujjmO1kLhaOU2Xg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/gnoland/blog","func":"ModEditPost","args":["intro","Intro to Gnoland - The Smart Contract Platform to Improve Our Understanding of the World","_Welcome to Gno.land. This is the official site to learn about the Gnolang (Gno) programming language and the Gno.land smart contract platform, as well as understand the motivations behind Gno and our core values and mission. We’re starting a series of blog posts and holding regular community calls and AMAs so that you can stay up to date with upcoming developments and dive deeper into the Gno World Order. Stay tuned._\n\n## What Is Gno.land?\n\nGno.land (pronounced no-land) is a layer 1 smart contract platform invented by Jae Kwon, co-founder of Cosmos and Tendermint, to address multiple issues in the blockchain space — in particular, the ease of use and intuitiveness of smart contract programming platforms. Beyond offering succinctness, composability, expressivity, and completeness not found in any other smart contract platform, we aim to challenge the regime of information censorship that we find ourselves living in today.\n\nBy using the programming language Gnolang (Gno), an interpreted version of the widely-used Golang (Go) language, using a state-of-the-art VM written in Go, we want to lower the barrier to entry to web3 and make it simple for developers (particularly existing web2 developers) to write smart contracts and other blockchain applications without having to learn a programming language that is limited by design or exclusive to a single blockchain ecosystem.\n\n### Gnolang (Gno) Is Essential to Broader Adoption of Web3\n\nFor web3 to grow in a sustainable way, we need technological solutions that are designed for the blockchain with programming languages that are universally adopted, secure, composable, and complete. The main programming language currently used for creating smart contracts, Solidity, is designed for one purpose only (writing smart contracts) and lacks the completeness of a general-purpose language.\n\nSolidity removes many of the complexities that blockchain programming requires (such as memory management, ensuring that the code is deterministic, and understanding how the entire tech stack is implemented) allowing developers to quickly build succinct smart contracts. However, Solidity is only used for smart contracts on EVM-compatible blockchains (like Ethereum, Polygon, or EVMOS) and its design is limited by the limitations of the EVM. In addition, developers have to learn several languages if they want to understand the whole stack or work across different ecosystems.\n\nGo, on the other hand, is a well-designed complete programming language with its foundation based on composable structures, designed by the creators of Plan 9. This allows developers to rapidly accelerate application development and adopt a modular structure by reusing and reassembling existing modules without building from scratch. They can embed one structure inside another in an intuitive way while preserving localism, and the language specification is simple, successfully balancing practicality and minimalism.\n\nGo is widely used, especially among existing web2 developers. It’s easier to learn and can be used to program almost anything, such as GoEthereum or Tendermint. Every part of the Gno.land stack is written in Go so that one person can understand the entire system just by studying a relatively small code base. The Go language is so well designed that the Gnolang smart contract system will become the new gold standard for smart contract development and other blockchain (and even non-blockchain) applications.\n\n### Security Is a Built-in Feature of Go (Golang)\n\nBeyond object embedding, closures, importing of modules, composability of programs, and interfaces that allow you to implement a specific set of functions, Go supports secure programming through exported/non-exported fields, enabling “least-authority” design. It is easy to create objects and APIs that expose only what should be accessible to callers while hiding what should not be simply by the capitalization of letters, thus allowing a succinct representation of secure logic that can be called by multiple users.\n\nAnother major advantage of Go is that the language comes with an ecosystem of great tooling, like the compiler and third-party tools that statically analyze code. Gno inherits these advantages from Go directly to create a smart contract programming language that is safe and helps developers to write secure code relying on the compiler, parser, and interpreter to give warning alerts for common mistakes.\n\n### How Gnolang (Gno) Differs from Golang (Go)\n\n[![Go and Gno](https://gnolang.github.io/blog-assets/intro/thumbs/go-and-gno.png)](https://gnolang.github.io/blog-assets/intro/go-and-gno.png)\n\n_Image 1: Gnolang - Like Go but specific to the blockchain_\n\nGno is around 99% identical to Go and most people can code in Gno from day one, even minute one. The Gno.land programming environment comes with blockchain-specific standard libraries, but any code that doesn’t use the blockchain-specific logic can run in Go with minimal processing. On the other hand, some libraries that don’t make sense in the blockchain context are not available in the Gno.land programming environment, such as network or operating-system access.\n\nOtherwise, Gno loads and uses many standard libraries that power Go, so most of the parsing of the source code is the same. Under the hood, the Gno code is parsed into an abstract syntax tree (AST) and the AST itself is used in the interpreter, rather than byte code as in many virtual machines such as Java, Python, or WASM. This makes even the Gno VM accessible to any Go programmer. The novel design of the Gno VM interpreter allows  Gno to freeze and resume the program by persisting and loading the entire memory state. This allows (smart contract) programs to be succinct, as the programmer doesn’t have to serialize and deserialize objects to persist them into a database (unlike programming applications with the Cosmos SDK).\n\nThe composable nature of Go/Gno allows for type-checked interactions between contracts, making Gno.land safer and more powerful, as well as operationally cheaper and faster. Smart contracts on Gno.land will be light, simple, more focused, and easily interoperable — a network of interconnected contracts rather than siloed monoliths that limit interactions with other contracts.\n\n[![Gnolang code example](https://gnolang.github.io/blog-assets/intro/thumbs/code-example.jpg)](https://gnolang.github.io/blog-assets/intro/code-example.jpg)\n\n_Image 2: Code snippet from the Gno programming language_\n\nToday, Gno.land is the only blockchain instance in the world that supports Gno but tomorrow, there will be many chains with different names such as mydapp.zone, or mydao.xyz. Gno.land is the name of ONE chain and is not a name that will be used by other Gnolang-powered chains. Gno.land will remain a minimal hub with three main utilities:\n\n* Managing cross-Gnolang-chain fees/licenses\n* To be the (or an) official home for the best smart contracts\n* To provide new models of governance (w/ DAO modules)\n\n### Earning Rewards Through Proof-of-Contribution (PoC)\n\nThere are four main ways to earn rewards through PoC on the Gno.land chain:\n\n* Pre-defined tasks (technical or otherwise)\n* Pre-defined bounties\n* Retroactive bounties\n* Vesting-style rewards for core members\n\nBounties rewards (both pre-defined and retroactive) will be decided with “local rules,” through the agreement of the DAO with everything on-chain and transparent. If one human were to abuse the system, it would trigger and the bad actor would be slashed. We’ll go into depth on how you can earn rewards in an upcoming post.\n\n### Durable Solutions to Improve Our Understanding of the World\n\nOne of our inspirations for the Gno.land project is the gospels, which built a system of moral code that lasted for thousands of years. Part of Gno.land’s endurance will be having a minimal production implementation that becomes a reference for other implementations and a basis for education to elevate people's understanding of blockchains.\n\nGno.land aims to appeal to web developers, dApp developers, and blockchain builders to create solutions that help people improve their understanding of the world. With the barrage of misinformation delivered today from various factions, it’s impossible to separate the real from the fake. This causes a state of gridlock. We are living in a regime of information censorship spanning all important topics from climate change to global pandemics — a vast coordinated effort to prevent people from understanding the truth.\n\nBy just browsing Reddit, searching with Google, and scrolling through Facebook, Twitter, or Instagram, people are deliberately being [misled](https://twitter.com/lhfang/status/1587095890983936000) about key global issues that we all deserve clarity on. This is as malevolent as any type of censorship regime in the world — and we need to come together to challenge it and break the wall of censorship to achieve a functional democracy at last.\n\n### Gno.land’s Current Phase of Development\n\nGno.land is currently running in its third testnet and there will be several more testnets before the platform is production ready. Modern civilization wasn’t built in a day, and neither will Gno.land rush into committing to an exact launch date. However, the next development, an incentivized testnet called ‘Game of Realms’, is scheduled for Q1 2023.\n\nGame of Realms will be similar to ‘Game of Stakes’ on the Cosmos Hub and will reward the earliest and best contributors. If you would like to find out more about Game of Realms, Gno.land, Gnolang, or anything else,  join us for our first community call with Gno.land Founder, Jae Kwon on November 22nd, at 10pm PST on our [Discord channel](https://discord.gg/Jm46qmms). We look forward to seeing you.\n","gnoland,gnoland,gnosh,gnot,permissionless,consensus,proof-of-contribution,dao,governance,ibc,democracy,freedom"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"Lcc6v0LzpWd2LsJA2cbfs8QjXhzytgN8bBpbBAzSJYcVGTx6IHq1NNvFNkG3WUBMaE7lenRI5MKydftEtf1NNQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/gnoland/blog","func":"ModEditPost","args":["intro","Intro to Gnoland - The Smart Contract Platform to Improve Our Understanding of the World","_Welcome to Gno.land. This is the official site to learn about the Gnolang (Gno) programming language and the Gno.land smart contract platform, as well as understand the motivations behind Gno and our core values and mission. We’re starting a series of blog posts and holding regular community calls and AMAs so that you can stay up to date with upcoming developments and dive deeper into the Gno World Order. Stay tuned._\n\n## What Is Gno.land?\n\nGno.land (pronounced no-land) is a layer 1 smart contract platform invented by Jae Kwon, co-founder of Cosmos and Tendermint, to address multiple issues in the blockchain space — in particular, the ease of use and intuitiveness of smart contract programming platforms. Beyond offering succinctness, composability, expressivity, and completeness not found in any other smart contract platform, we aim to challenge the regime of information censorship that we find ourselves living in today.\n\nBy using the programming language Gnolang (Gno), an interpreted version of the widely-used Golang (Go) language, using a state-of-the-art VM written in Go, we want to lower the barrier to entry to web3 and make it simple for developers (particularly existing web2 developers) to write smart contracts and other blockchain applications without having to learn a programming language that is limited by design or exclusive to a single blockchain ecosystem.\n\n### Gnolang (Gno) Is Essential to Broader Adoption of Web3\n\nFor web3 to grow in a sustainable way, we need technological solutions that are designed for the blockchain with programming languages that are universally adopted, secure, composable, and complete. The main programming language currently used for creating smart contracts, Solidity, is designed for one purpose only (writing smart contracts) and lacks the completeness of a general-purpose language.\n\nSolidity removes many of the complexities that blockchain programming requires (such as memory management, ensuring that the code is deterministic, and understanding how the entire tech stack is implemented) allowing developers to quickly build succinct smart contracts. However, Solidity is only used for smart contracts on EVM-compatible blockchains (like Ethereum, Polygon, or EVMOS) and its design is limited by the limitations of the EVM. In addition, developers have to learn several languages if they want to understand the whole stack or work across different ecosystems.\n\nGo, on the other hand, is a well-designed complete programming language with its foundation based on composable structures, designed by the creators of Plan 9. This allows developers to rapidly accelerate application development and adopt a modular structure by reusing and reassembling existing modules without building from scratch. They can embed one structure inside another in an intuitive way while preserving localism, and the language specification is simple, successfully balancing practicality and minimalism.\n\nGo is widely used, especially among existing web2 developers. It’s easier to learn and can be used to program almost anything, such as GoEthereum or Tendermint. Every part of the Gno.land stack is written in Go so that one person can understand the entire system just by studying a relatively small code base. The Go language is so well designed that the Gnolang smart contract system will become the new gold standard for smart contract development and other blockchain (and even non-blockchain) applications.\n\n### Security Is a Built-in Feature of Go (Golang)\n\nBeyond object embedding, closures, importing of modules, composability of programs, and interfaces that allow you to implement a specific set of functions, Go supports secure programming through exported/non-exported fields, enabling “least-authority” design. It is easy to create objects and APIs that expose only what should be accessible to callers while hiding what should not be simply by the capitalization of letters, thus allowing a succinct representation of secure logic that can be called by multiple users.\n\nAnother major advantage of Go is that the language comes with an ecosystem of great tooling, like the compiler and third-party tools that statically analyze code. Gno inherits these advantages from Go directly to create a smart contract programming language that is safe and helps developers to write secure code relying on the compiler, parser, and interpreter to give warning alerts for common mistakes.\n\n### How Gnolang (Gno) Differs from Golang (Go)\n\n[![Go and Gno](https://gnolang.github.io/blog-assets/intro/thumbs/go-and-gno.png)](https://gnolang.github.io/blog-assets/intro/go-and-gno.png)\n\n_Image 1: Gnolang - Like Go but specific to the blockchain_\n\nGno is around 99% identical to Go and most people can code in Gno from day one, even minute one. The Gno.land programming environment comes with blockchain-specific standard libraries, but any code that doesn’t use the blockchain-specific logic can run in Go with minimal processing. On the other hand, some libraries that don’t make sense in the blockchain context are not available in the Gno.land programming environment, such as network or operating-system access.\n\nOtherwise, Gno loads and uses many standard libraries that power Go, so most of the parsing of the source code is the same. Under the hood, the Gno code is parsed into an abstract syntax tree (AST) and the AST itself is used in the interpreter, rather than byte code as in many virtual machines such as Java, Python, or WASM. This makes even the Gno VM accessible to any Go programmer. The novel design of the Gno VM interpreter allows  Gno to freeze and resume the program by persisting and loading the entire memory state. This allows (smart contract) programs to be succinct, as the programmer doesn’t have to serialize and deserialize objects to persist them into a database (unlike programming applications with the Cosmos SDK).\n\nThe composable nature of Go/Gno allows for type-checked interactions between contracts, making Gno.land safer and more powerful, as well as operationally cheaper and faster. Smart contracts on Gno.land will be light, simple, more focused, and easily interoperable — a network of interconnected contracts rather than siloed monoliths that limit interactions with other contracts.\n\n[![Gnolang code example](https://gnolang.github.io/blog-assets/intro/thumbs/code-example.jpg)](https://gnolang.github.io/blog-assets/intro/code-example.jpg)\n\n_Image 2: Code snippet from the Gno programming language_\n\nToday, Gno.land is the only blockchain instance in the world that supports Gno but tomorrow, there will be many chains with different names such as mydapp.zone, or mydao.xyz. Gno.land is the name of ONE chain and is not a name that will be used by other Gnolang-powered chains. Gno.land will remain a minimal hub with three main utilities:\n\n* Managing cross-Gnolang-chain fees/licenses\n* To be the (or an) official home for the best smart contracts\n* To provide new models of governance (w/ DAO modules)\n\n### Earning Rewards Through Proof-of-Contribution (PoC)\n\nThere are four main ways to earn rewards through PoC on the Gno.land chain:\n\n* Pre-defined tasks (technical or otherwise)\n* Pre-defined bounties\n* Retroactive bounties\n* Vesting-style rewards for core members\n\nBounties rewards (both pre-defined and retroactive) will be decided with “local rules,” through the agreement of the DAO with everything on-chain and transparent. If one human were to abuse the system, it would trigger and the bad actor would be slashed. We’ll go into depth on how you can earn rewards in an upcoming post.\n\n### Durable Solutions to Improve Our Understanding of the World\n\nOne of our inspirations for the Gno.land project is the gospels, which built a system of moral code that lasted for thousands of years. Part of Gno.land’s endurance will be having a minimal production implementation that becomes a reference for other implementations and a basis for education to elevate people's understanding of blockchains.\n\nGno.land aims to appeal to web developers, dApp developers, and blockchain builders to create solutions that help people improve their understanding of the world. With the barrage of misinformation delivered today from various factions, it’s impossible to separate the real from the fake. This causes a state of gridlock. We are living in a regime of information censorship spanning all important topics from climate change to global pandemics — a vast coordinated effort to prevent people from understanding the truth.\n\nBy just browsing Reddit, searching with Google, and scrolling through Facebook, Twitter, or Instagram, people are deliberately being [misled](https://twitter.com/lhfang/status/1587095890983936000) about key global issues that we all deserve clarity on. This is as malevolent as any type of censorship regime in the world — and we need to come together to challenge it and break the wall of censorship to achieve a functional democracy at last.\n\n### Gno.land’s Current Phase of Development\n\nGno.land is currently running in its third testnet and there will be several more testnets before the platform is production ready. Modern civilization wasn’t built in a day, and neither will Gno.land rush into committing to an exact launch date. However, the next development, an incentivized testnet called ‘Game of Realms’, is scheduled for Q1 2023.\n\nGame of Realms will be similar to ‘Game of Stakes’ on the Cosmos Hub and will reward the earliest and best contributors. If you would like to find out more about Game of Realms, Gno.land, Gnolang, or anything else,  join us for our first community call with Gno.land Founder, Jae Kwon on November 22nd, at 11pm PST on our [Discord channel](https://discord.gg/Jm46qmms). We look forward to seeing you.\n","gnoland,gnoland,gnosh,gnot,permissionless,consensus,proof-of-contribution,dao,governance,ibc,democracy,freedom"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"kW4F0scgh/fWk6rnG6h9m16zkKMCmphiGpFpQBXaLwkjHgtIZ+PDroKiKLIPfBmk2iOMDEXjktdtUU7LomzVlA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1nz6pmxj2ggznuxk2dxq73xk8mh3654u7vzkrny","to_address":"g1804ntg5kld7uw9y5vpvtrq082h4zvn0qaps34v","amount":"17000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyjxRjUZ6RVtnjjfvohWyZxiVA5mA4QHQd/eBE70mVd7"},"signature":"t+sCQPdRZDoKmFngPhUu4zF/O4uGEZlG1Ybh8hfAC7V7OQyHfBBWOLciDgN/ZiwOjLHARPUriYlnlj5b5acZBg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","package":{"Name":"token","Path":"gno.land/r/tokens","Files":[{"Name":"store.gno","Body":"package token\n\nimport (\n\t\"gno.land/p/demo/avl\"\n)\n\nvar (\n\ttokenList = avl.NewMutTree() //symbol -\u003e *Token\n)\n"},{"Name":"tokens.gno","Body":"package token\n\nimport (\n\t\"strings\"\n\n\t\"std\"\n\t\"gno.land/p/demo/grc/grc20\"\n\t\"gno.land/p/demo/ufmt\"\n\t\"gno.land/r/demo/users\"\n)\n\n// CreateToken creates a new token with the given symbol and name.\n// accounts format: address=balance (multiline)\nfunc CreateToken(name, symbol string, decimals uint, accounts string, minter std.Address) {\n\tvalidateTokenInfo(name, symbol, decimals)\n\tif tokenList.Has(symbol) {\n\t\tpanic(\"token already exists\")\n\t}\n\tusers, err := parseAccounts(accounts)\n\tnoError(err)\n\n\ttoken := grc20.NewAdminToken(name, symbol, decimals)\n\tfor _, user := range users {\n\t\terr = token.Mint(std.Address(user.Address), user.Balance)\n\t\tnoError(err)\n\t}\n\n\ttokenList.Set(symbol, \u0026Token{minter, token})\n}\n\n// mgss.\n\nfunc Transfer(symbol string, to users.AddressOrName, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\ttoken.token.Transfer(caller, to.Resolve(), amount)\n}\n\nfunc Approve(symbol string, spender users.AddressOrName, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\ttoken.token.Approve(caller, spender.Resolve(), amount)\n}\n\nfunc TransferFrom(symbol string, from, to users.AddressOrName, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\ttoken.token.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\n}\n\nfunc Burn(symbol string, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\ttoken.token.Burn(caller, amount)\n}\n\n// admin.\n\nfunc Mint(symbol string, address users.AddressOrName, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\tif token.minter == \"\" || caller != token.minter {\n\t\tpanic(\"not authorized\")\n\t}\n\ttoken.token.Mint(address.Resolve(), amount)\n}\n\n// query\n\nfunc TotalSupply(symbol string) uint64 {\n\ttoken := getToken(symbol)\n\n\treturn token.token.TotalSupply()\n}\n\nfunc BalanceOf(symbol string, owner users.AddressOrName) uint64 {\n\ttoken := getToken(symbol)\n\tbalance, err := token.token.BalanceOf(owner.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n\nfunc Allowance(symbol string, owner, spender users.AddressOrName) uint64 {\n\ttoken := getToken(symbol)\n\tallowance, err := token.token.Allowance(owner.Resolve(), spender.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn allowance\n}\n\n// render.\n//\n\nfunc Render(path string) string {\n\tparts := strings.Split(path, \"/\")\n\tc := len(parts)\n\n\tswitch {\n\tcase path == \"\":\n\t\treturn ufmt.Sprintf(\"Total tokens: %d\", tokenList.Size())\n\tcase c == 1:\n\t\tsymbol := parts[0]\n\t\ttoken := getToken(symbol)\n\t\treturn token.token.RenderHome()\n\tcase c == 3 \u0026\u0026 parts[0] == \"balance\":\n\t\towner := users.AddressOrName(parts[1])\n\t\ttoken := getToken(parts[2])\n\t\tbalance, _ := token.token.BalanceOf(owner.Resolve())\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\n\tdefault:\n\t\treturn \"404\\n\"\n\t}\n}\n"},{"Name":"types.gno","Body":"package token\n\nimport (\n\t\"std\"\n\t\"gno.land/p/demo/grc/grc20\"\n)\n\ntype Account struct {\n\tAddress string\n\tBalance uint64\n}\n\ntype Token struct {\n\tminter std.Address\n\ttoken  *grc20.AdminToken\n}\n"},{"Name":"utils.gno","Body":"package token\n\nimport (\n\t\"errors\"\n\t\"strconv\"\n\t\"strings\"\n)\n\nfunc noError(err error) {\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n\nfunc validateTokenInfo(name, symbol string, decimal uint) {\n\tif len(name) \u003c 3 || len(name) \u003e 50 {\n\t\tpanic(\"invalid token name\")\n\t}\n\n\tif len(symbol) \u003c 3 || len(symbol) \u003e 12 {\n\t\tpanic(\"invalid token symbol\")\n\t}\n\n\tfor _, r := range symbol {\n\t\tif r != '-' \u0026\u0026 (r \u003c 'a' || r \u003e 'z') \u0026\u0026 (r \u003c 'A' || r \u003e 'Z') {\n\t\t\tpanic(\"invalid token symbol\")\n\t\t}\n\t}\n\n\tif decimal \u003e 18 {\n\t\tpanic(\"invalid token decimal\")\n\t}\n}\n\nfunc checkMinterAddr(addr string) {\n\tif addr == \"\" {\n\t\treturn\n\t}\n\n\tif len(addr) != 42 {\n\t\tpanic(\"invalid address\")\n\t}\n}\n\nfunc getToken(symbol string) *Token {\n\tdata, exist := tokenList.Get(symbol)\n\tif !exist {\n\t\tpanic(\"token not found\")\n\t}\n\n\treturn data.(*Token)\n}\n\nfunc parseAccounts(csv string) ([]Account, error) {\n\tlines := strings.Split(csv, \"\\n\")\n\taccounts := make([]Account, len(lines))\n\tfor i, line := range lines {\n\t\tfields := strings.Split(line, \"=\")\n\t\tif len(fields) != 2 {\n\t\t\treturn nil, errors.New(\"invalid accounts format\")\n\t\t}\n\n\t\tbalance, err := strconv.Atoi(fields[1])\n\t\tif err != nil {\n\t\t\treturn nil, errors.New(\"invalid account balance, \" + err.Error())\n\t\t}\n\n\t\taccounts[i] = Account{\n\t\t\tAddress: fields[0],\n\t\t\tBalance: uint64(balance),\n\t\t}\n\t}\n\n\treturn accounts, nil\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"4000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"fOfUwZrJMPQRhxWqs9AmAYcqhFu8n2Cn611fINrAFQJwzrf6eio6zR6bz7ltSQQwFeHJEzOhXYyqhsZBvbm9jA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","package":{"Name":"token","Path":"gno.land/r/disperze/tokens","Files":[{"Name":"store.gno","Body":"package token\n\nimport (\n\t\"gno.land/p/demo/avl\"\n)\n\nvar (\n\ttokenList = avl.NewMutTree() //symbol -\u003e *Token\n)\n"},{"Name":"tokens.gno","Body":"package token\n\nimport (\n\t\"strings\"\n\n\t\"std\"\n\t\"gno.land/p/demo/grc/grc20\"\n\t\"gno.land/p/demo/ufmt\"\n\t\"gno.land/r/demo/users\"\n)\n\n// CreateToken creates a new token with the given symbol and name.\n// accounts format: address=balance (multiline)\nfunc CreateToken(name, symbol string, decimals uint, accounts string, minter std.Address) {\n\tvalidateTokenInfo(name, symbol, decimals)\n\tif tokenList.Has(symbol) {\n\t\tpanic(\"token already exists\")\n\t}\n\tusers, err := parseAccounts(accounts)\n\tnoError(err)\n\n\ttoken := grc20.NewAdminToken(name, symbol, decimals)\n\tfor _, user := range users {\n\t\terr = token.Mint(std.Address(user.Address), user.Balance)\n\t\tnoError(err)\n\t}\n\n\ttokenList.Set(symbol, \u0026Token{minter, token})\n}\n\n// mgss.\n\nfunc Transfer(symbol string, to users.AddressOrName, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\ttoken.token.Transfer(caller, to.Resolve(), amount)\n}\n\nfunc Approve(symbol string, spender users.AddressOrName, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\ttoken.token.Approve(caller, spender.Resolve(), amount)\n}\n\nfunc TransferFrom(symbol string, from, to users.AddressOrName, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\ttoken.token.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\n}\n\nfunc Burn(symbol string, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\ttoken.token.Burn(caller, amount)\n}\n\n// admin.\n\nfunc Mint(symbol string, address users.AddressOrName, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\tif token.minter == \"\" || caller != token.minter {\n\t\tpanic(\"not authorized\")\n\t}\n\ttoken.token.Mint(address.Resolve(), amount)\n}\n\n// query\n\nfunc TotalSupply(symbol string) uint64 {\n\ttoken := getToken(symbol)\n\n\treturn token.token.TotalSupply()\n}\n\nfunc BalanceOf(symbol string, owner users.AddressOrName) uint64 {\n\ttoken := getToken(symbol)\n\tbalance, err := token.token.BalanceOf(owner.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n\nfunc Allowance(symbol string, owner, spender users.AddressOrName) uint64 {\n\ttoken := getToken(symbol)\n\tallowance, err := token.token.Allowance(owner.Resolve(), spender.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn allowance\n}\n\n// render.\n//\n\nfunc Render(path string) string {\n\tparts := strings.Split(path, \"/\")\n\tc := len(parts)\n\n\tswitch {\n\tcase path == \"\":\n\t\treturn ufmt.Sprintf(\"Total tokens: %d\", tokenList.Size())\n\tcase c == 1:\n\t\tsymbol := parts[0]\n\t\ttoken := getToken(symbol)\n\t\treturn token.token.RenderHome()\n\tcase c == 3 \u0026\u0026 parts[0] == \"balance\":\n\t\towner := users.AddressOrName(parts[1])\n\t\ttoken := getToken(parts[2])\n\t\tbalance, _ := token.token.BalanceOf(owner.Resolve())\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\n\tdefault:\n\t\treturn \"404\\n\"\n\t}\n}\n"},{"Name":"types.gno","Body":"package token\n\nimport (\n\t\"std\"\n\t\"gno.land/p/demo/grc/grc20\"\n)\n\ntype Account struct {\n\tAddress string\n\tBalance uint64\n}\n\ntype Token struct {\n\tminter std.Address\n\ttoken  *grc20.AdminToken\n}\n"},{"Name":"utils.gno","Body":"package token\n\nimport (\n\t\"errors\"\n\t\"strconv\"\n\t\"strings\"\n)\n\nfunc noError(err error) {\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n\nfunc validateTokenInfo(name, symbol string, decimal uint) {\n\tif len(name) \u003c 3 || len(name) \u003e 50 {\n\t\tpanic(\"invalid token name\")\n\t}\n\n\tif len(symbol) \u003c 3 || len(symbol) \u003e 12 {\n\t\tpanic(\"invalid token symbol\")\n\t}\n\n\tfor _, r := range symbol {\n\t\tif r != '-' \u0026\u0026 (r \u003c 'a' || r \u003e 'z') \u0026\u0026 (r \u003c 'A' || r \u003e 'Z') {\n\t\t\tpanic(\"invalid token symbol\")\n\t\t}\n\t}\n\n\tif decimal \u003e 18 {\n\t\tpanic(\"invalid token decimal\")\n\t}\n}\n\nfunc checkMinterAddr(addr string) {\n\tif addr == \"\" {\n\t\treturn\n\t}\n\n\tif len(addr) != 42 {\n\t\tpanic(\"invalid address\")\n\t}\n}\n\nfunc getToken(symbol string) *Token {\n\tdata, exist := tokenList.Get(symbol)\n\tif !exist {\n\t\tpanic(\"token not found\")\n\t}\n\n\treturn data.(*Token)\n}\n\nfunc parseAccounts(csv string) ([]Account, error) {\n\tlines := strings.Split(csv, \"\\n\")\n\taccounts := make([]Account, len(lines))\n\tfor i, line := range lines {\n\t\tfields := strings.Split(line, \"=\")\n\t\tif len(fields) != 2 {\n\t\t\treturn nil, errors.New(\"invalid accounts format\")\n\t\t}\n\n\t\tbalance, err := strconv.Atoi(fields[1])\n\t\tif err != nil {\n\t\t\treturn nil, errors.New(\"invalid account balance, \" + err.Error())\n\t\t}\n\n\t\taccounts[i] = Account{\n\t\t\tAddress: fields[0],\n\t\t\tBalance: uint64(balance),\n\t\t}\n\t}\n\n\treturn accounts, nil\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"4000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"39hLwbPIQ+bxfqvW4hI13EnnEYKTAdmXPFH2PLD24LoQDl5sR4J2JseLLWSWT4W3I++9y3//ebqmgCL9x7yyKQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/disperze/tokens","func":"CreateToken","args":["Nation Currency","NTN","6","g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t=1000000000\ng19yltltjed5688sullftzurhdshmjwtm8vlqdr2=100000000",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"1FTl4pCjT5hf7hiizcq16dtNTWwg+2WX/IFnD9V1uqdHinU+Iy45WZ8NEMWwT03ufqFqahqJQjvNImBGPcTO7g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1fnakf9vrd6uqn8qdmp88yam4p0ngy572answ9f","to_address":"g17y3h56qqau2wnputq5x3208nd0zww7wstmmakq","amount":"500000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3cWVULHSHC1mwK8o1vfJHKfNMvLEvKU/sHPQoFWRoey"},"signature":"MnyDjQmRml+4ZB5SkBAPAIgfI4g8+wmxNhBL3RaCbH96BvvQBbifOVKydrYMlYqXxNJ2XB5TT+tUW7WTgk3ukA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kwcd3seuptwn6vmn8096t3h8yj026qukf6m303","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["BOARDNAME"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuXApPtXMDg3qmytzwPgt18BpLSQtCQCoonurBoZorS3"},"signature":"zRgGj02hRmE//KsSYBre3UrMFlQVD4CMbXU6feaOkLJ2PPvqMjmrNlU9B1ULffwhp/YlbRbLxMnx9z2Fe7laIA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kwcd3seuptwn6vmn8096t3h8yj026qukf6m303","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["BOARDNAME"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuXApPtXMDg3qmytzwPgt18BpLSQtCQCoonurBoZorS3"},"signature":"Qu4e5GIuOAfxzpGFFxbWO3h1vtsTeIpnAXn5Yq7jBCYTLmJxQx09PmO77u8xf4iKX0TEPZWqV0AMG7PunWtCgw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kwcd3seuptwn6vmn8096t3h8yj026qukf6m303","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["BOARDNAME"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuXApPtXMDg3qmytzwPgt18BpLSQtCQCoonurBoZorS3"},"signature":"KfMkqH2m2/DryXrdvRmYmoFhBKhYYAPskM6e7ssTn8MhXjVEOBKv8cGnomxDNClx84dzbfup8I6OIL5vdqIfSA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kwcd3seuptwn6vmn8096t3h8yj026qukf6m303","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["testname"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuXApPtXMDg3qmytzwPgt18BpLSQtCQCoonurBoZorS3"},"signature":"Sf67DOLgkQifLdj7FzPy1eO8HEkaNq2IsWDzgPtFJbYtA6DrzHUnfbWHpF1UytNDHsx08cZQ7pWZQ6JKOobgSw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","package":{"Name":"token","Path":"gno.land/r/disperze/v1/tokens","Files":[{"Name":"store.gno","Body":"package token\n\nimport (\n\t\"gno.land/p/demo/avl\"\n)\n\nvar (\n\ttokenList = avl.NewMutTree() //symbol -\u003e *Token\n)\n"},{"Name":"tokens.gno","Body":"package token\n\nimport (\n\t\"strings\"\n\n\t\"std\"\n\t\"gno.land/p/demo/grc/grc20\"\n\t\"gno.land/p/demo/ufmt\"\n\t\"gno.land/r/demo/users\"\n)\n\n// CreateToken creates a new token with the given symbol and name.\n// accounts format: address=balance (multiline)\nfunc CreateToken(name, symbol string, decimals uint, accounts string, minter std.Address) {\n\tvalidateTokenInfo(name, symbol, decimals)\n\tif tokenList.Has(symbol) {\n\t\tpanic(\"token already exists\")\n\t}\n\tusers, err := parseAccounts(accounts)\n\tnoError(err)\n\n\ttoken := grc20.NewAdminToken(name, symbol, decimals)\n\tfor _, user := range users {\n\t\terr = token.Mint(std.Address(user.Address), user.Balance)\n\t\tnoError(err)\n\t}\n\n\ttokenList.Set(symbol, \u0026Token{minter, token})\n}\n\n// mgss.\n\nfunc Transfer(symbol string, to users.AddressOrName, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\ttoken.token.Transfer(caller, to.Resolve(), amount)\n}\n\nfunc Approve(symbol string, spender users.AddressOrName, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\ttoken.token.Approve(caller, spender.Resolve(), amount)\n}\n\nfunc TransferFrom(symbol string, from, to users.AddressOrName, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\ttoken.token.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\n}\n\nfunc Burn(symbol string, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\ttoken.token.Burn(caller, amount)\n}\n\n// admin.\n\nfunc Mint(symbol string, address users.AddressOrName, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\tif token.minter == \"\" || caller != token.minter {\n\t\tpanic(\"not authorized\")\n\t}\n\ttoken.token.Mint(address.Resolve(), amount)\n}\n\n// query\n\nfunc TotalSupply(symbol string) uint64 {\n\ttoken := getToken(symbol)\n\n\treturn token.token.TotalSupply()\n}\n\nfunc BalanceOf(symbol string, owner users.AddressOrName) uint64 {\n\ttoken := getToken(symbol)\n\tbalance, err := token.token.BalanceOf(owner.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n\nfunc Allowance(symbol string, owner, spender users.AddressOrName) uint64 {\n\ttoken := getToken(symbol)\n\tallowance, err := token.token.Allowance(owner.Resolve(), spender.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn allowance\n}\n\n// render.\n//\n\nfunc Render(path string) string {\n\tparts := strings.Split(path, \"/\")\n\tc := len(parts)\n\n\tswitch {\n\tcase path == \"\":\n\t\treturn ufmt.Sprintf(\"Total tokens: %d\", tokenList.Size())\n\tcase c == 1:\n\t\tsymbol := parts[0]\n\t\ttoken := getToken(symbol)\n\t\treturn token.token.RenderHome()\n\tcase c == 3 \u0026\u0026 parts[0] == \"balance\":\n\t\towner := users.AddressOrName(parts[1])\n\t\ttoken := getToken(parts[2])\n\t\tbalance, _ := token.token.BalanceOf(owner.Resolve())\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\n\tdefault:\n\t\treturn \"404\\n\"\n\t}\n}\n"},{"Name":"types.gno","Body":"package token\n\nimport (\n\t\"std\"\n\t\"gno.land/p/demo/grc/grc20\"\n)\n\ntype Account struct {\n\tAddress string\n\tBalance uint64\n}\n\ntype Token struct {\n\tminter std.Address\n\ttoken  *grc20.AdminToken\n}\n"},{"Name":"utils.gno","Body":"package token\n\nimport (\n\t\"errors\"\n\t\"strconv\"\n\t\"strings\"\n)\n\nfunc noError(err error) {\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n\nfunc validateTokenInfo(name, symbol string, decimal uint) {\n\tif len(name) \u003c 3 || len(name) \u003e 50 {\n\t\tpanic(\"invalid token name\")\n\t}\n\n\tif len(symbol) \u003c 3 || len(symbol) \u003e 12 {\n\t\tpanic(\"invalid token symbol\")\n\t}\n\n\tfor _, r := range symbol {\n\t\tif r != '-' \u0026\u0026 (r \u003c 'a' || r \u003e 'z') \u0026\u0026 (r \u003c 'A' || r \u003e 'Z') {\n\t\t\tpanic(\"invalid token symbol\")\n\t\t}\n\t}\n\n\tif decimal \u003e 18 {\n\t\tpanic(\"invalid token decimal\")\n\t}\n}\n\nfunc checkMinterAddr(addr string) {\n\tif addr == \"\" {\n\t\treturn\n\t}\n\n\tif len(addr) != 42 {\n\t\tpanic(\"invalid address\")\n\t}\n}\n\nfunc getToken(symbol string) *Token {\n\tdata, exist := tokenList.Get(symbol)\n\tif !exist {\n\t\tpanic(\"token not found\")\n\t}\n\n\treturn data.(*Token)\n}\n\nfunc parseAccounts(csv string) ([]Account, error) {\n\tlines := strings.Split(csv, \"\\n\")\n\taccounts := make([]Account, len(lines))\n\tfor i, line := range lines {\n\t\tfields := strings.Split(line, \"=\")\n\t\tif len(fields) != 2 {\n\t\t\treturn nil, errors.New(\"invalid accounts format\")\n\t\t}\n\n\t\tbalance, err := strconv.Atoi(fields[1])\n\t\tif err != nil {\n\t\t\treturn nil, errors.New(\"invalid account balance, \" + err.Error())\n\t\t}\n\n\t\taccounts[i] = Account{\n\t\t\tAddress: fields[0],\n\t\t\tBalance: uint64(balance),\n\t\t}\n\t}\n\n\treturn accounts, nil\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"4000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"VL6y+KZZUSJgZ1sNx45LMHG01OxJoS7aT82zGq5gXsdMWNxNtVjtPnn2sdUT3QeMAXzqzmWzAj/3nGaHYdhf+Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19yltltjed5688sullftzurhdshmjwtm8vlqdr2","to_address":"g19yltltjed5688sullftzurhdshmjwtm8vlqdr2","amount":"10000000ugnot"}],"fee":{"gas_wanted":"61906","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoXFomwlVbbLZSPKTPFbYTS1JX/eNqYPtzLcd7f/VcK8"},"signature":"l4vmxGUqbfzoE2HOjSYnW298V4ZgfOyjkETaOtS1q+QAU2ubWp/B9yZLf1+rCGEF+eNYD6uTHsY36VF3V3AbTw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","package":{"Name":"token","Path":"gno.land/r/disperze/v1/tokens","Files":[{"Name":"store.gno","Body":"package token\n\nimport (\n\t\"gno.land/p/demo/avl\"\n)\n\nvar (\n\ttokenList = avl.NewMutTree() //symbol -\u003e *Token\n)\n"},{"Name":"tokens.gno","Body":"package token\n\nimport (\n\t\"strings\"\n\n\t\"std\"\n\t\"gno.land/p/demo/grc/grc20\"\n\t\"gno.land/p/demo/ufmt\"\n\t\"gno.land/r/demo/users\"\n)\n\n// CreateToken creates a new token with the given symbol and name.\n// accounts format: address=balance (multiline)\nfunc CreateToken(name, symbol string, decimals uint, accounts string, minter std.Address) {\n\tvalidateTokenInfo(name, symbol, decimals)\n\tif tokenList.Has(symbol) {\n\t\tpanic(\"token already exists\")\n\t}\n\tusers, err := parseAccounts(accounts)\n\tnoError(err)\n\n\ttoken := grc20.NewAdminToken(name, symbol, decimals)\n\tfor _, user := range users {\n\t\terr = token.Mint(std.Address(user.Address), user.Balance)\n\t\tnoError(err)\n\t}\n\n\ttokenList.Set(symbol, \u0026Token{minter, token})\n}\n\n// mgss.\n\nfunc Transfer(symbol string, to users.AddressOrName, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\ttoken.token.Transfer(caller, to.Resolve(), amount)\n}\n\nfunc Approve(symbol string, spender users.AddressOrName, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\ttoken.token.Approve(caller, spender.Resolve(), amount)\n}\n\nfunc TransferFrom(symbol string, from, to users.AddressOrName, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\ttoken.token.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\n}\n\nfunc Burn(symbol string, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\ttoken.token.Burn(caller, amount)\n}\n\n// admin.\n\nfunc Mint(symbol string, address users.AddressOrName, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\tif token.minter == \"\" || caller != token.minter {\n\t\tpanic(\"not authorized\")\n\t}\n\ttoken.token.Mint(address.Resolve(), amount)\n}\n\n// query\n\nfunc TotalSupply(symbol string) uint64 {\n\ttoken := getToken(symbol)\n\n\treturn token.token.TotalSupply()\n}\n\nfunc BalanceOf(symbol string, owner users.AddressOrName) uint64 {\n\ttoken := getToken(symbol)\n\tbalance, err := token.token.BalanceOf(owner.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n\nfunc Allowance(symbol string, owner, spender users.AddressOrName) uint64 {\n\ttoken := getToken(symbol)\n\tallowance, err := token.token.Allowance(owner.Resolve(), spender.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn allowance\n}\n\n// render.\n//\n\nfunc Render(path string) string {\n\tparts := strings.Split(path, \"/\")\n\tc := len(parts)\n\n\tswitch {\n\tcase path == \"\":\n\t\treturn ufmt.Sprintf(\"Total tokens: %d\", tokenList.Size())\n\tcase c == 1:\n\t\tsymbol := parts[0]\n\t\ttoken := getToken(symbol)\n\t\treturn token.token.RenderHome()\n\tcase c == 3 \u0026\u0026 parts[0] == \"balance\":\n\t\towner := users.AddressOrName(parts[1])\n\t\ttoken := getToken(parts[2])\n\t\tbalance, _ := token.token.BalanceOf(owner.Resolve())\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\n\tdefault:\n\t\treturn \"404\\n\"\n\t}\n}\n"},{"Name":"types.gno","Body":"package token\n\nimport (\n\t\"std\"\n\t\"gno.land/p/demo/grc/grc20\"\n)\n\ntype Account struct {\n\tAddress string\n\tBalance uint64\n}\n\ntype Token struct {\n\tminter std.Address\n\ttoken  *grc20.AdminToken\n}\n"},{"Name":"utils.gno","Body":"package token\n\nimport (\n\t\"errors\"\n\t\"strconv\"\n\t\"strings\"\n)\n\nfunc noError(err error) {\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n\nfunc validateTokenInfo(name, symbol string, decimal uint) {\n\tif len(name) \u003c 3 || len(name) \u003e 50 {\n\t\tpanic(\"invalid token name\")\n\t}\n\n\tif len(symbol) \u003c 3 || len(symbol) \u003e 12 {\n\t\tpanic(\"invalid token symbol\")\n\t}\n\n\tfor _, r := range symbol {\n\t\tif r != '-' \u0026\u0026 (r \u003c 'a' || r \u003e 'z') \u0026\u0026 (r \u003c 'A' || r \u003e 'Z') {\n\t\t\tpanic(\"invalid token symbol\")\n\t\t}\n\t}\n\n\tif decimal \u003e 18 {\n\t\tpanic(\"invalid token decimal\")\n\t}\n}\n\nfunc checkMinterAddr(addr string) {\n\tif addr == \"\" {\n\t\treturn\n\t}\n\n\tif len(addr) != 42 {\n\t\tpanic(\"invalid address\")\n\t}\n}\n\nfunc getToken(symbol string) *Token {\n\tdata, exist := tokenList.Get(symbol)\n\tif !exist {\n\t\tpanic(\"token not found\")\n\t}\n\n\treturn data.(*Token)\n}\n\nfunc parseAccounts(csv string) ([]Account, error) {\n\tlines := strings.Split(csv, \"\\n\")\n\taccounts := make([]Account, len(lines))\n\tfor i, line := range lines {\n\t\tfields := strings.Split(line, \"=\")\n\t\tif len(fields) != 2 {\n\t\t\treturn nil, errors.New(\"invalid accounts format\")\n\t\t}\n\n\t\tbalance, err := strconv.Atoi(fields[1])\n\t\tif err != nil {\n\t\t\treturn nil, errors.New(\"invalid account balance, \" + err.Error())\n\t\t}\n\n\t\taccounts[i] = Account{\n\t\t\tAddress: fields[0],\n\t\t\tBalance: uint64(balance),\n\t\t}\n\t}\n\n\treturn accounts, nil\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"4000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Tw4nqDbQPGMh/vE9pBSV+2Lh2baRj4iy8ZSdvb5GdnZIKHOsrwZB/lKhOeI4zihA31c3H2wcEvZE7IxSbAt2Aw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19yltltjed5688sullftzurhdshmjwtm8vlqdr2","to_address":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","amount":"30000000ugnot"}],"fee":{"gas_wanted":"61804","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoXFomwlVbbLZSPKTPFbYTS1JX/eNqYPtzLcd7f/VcK8"},"signature":"TmYSB3Cwp2BEAbla18OVWOF5CkPFLJx7oSUJcj5V32ZUKFik6q+n6Hjw3gs8vtncWhX/doQkMXX+O07uCKusuQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","package":{"Name":"token","Path":"gno.land/r/disperze/v1/tokens","Files":[{"Name":"store.gno","Body":"package token\n\nimport (\n\t\"gno.land/p/demo/avl\"\n)\n\nvar (\n\ttokenList = avl.NewMutTree() //symbol -\u003e *Token\n)\n"},{"Name":"tokens.gno","Body":"package token\n\nimport (\n\t\"strings\"\n\n\t\"std\"\n\t\"gno.land/p/demo/grc/grc20\"\n\t\"gno.land/p/demo/ufmt\"\n\t\"gno.land/r/demo/users\"\n)\n\n// CreateToken creates a new token with the given symbol and name.\n// accounts format: address=balance (multiline)\nfunc CreateToken(name, symbol string, decimals uint, accounts string, minter std.Address) {\n\tvalidateTokenInfo(name, symbol, decimals)\n\tif tokenList.Has(symbol) {\n\t\tpanic(\"token already exists\")\n\t}\n\tusers, err := parseAccounts(accounts)\n\tnoError(err)\n\n\ttoken := grc20.NewAdminToken(name, symbol, decimals)\n\tfor _, user := range users {\n\t\terr = token.Mint(std.Address(user.Address), user.Balance)\n\t\tnoError(err)\n\t}\n\n\ttokenList.Set(symbol, \u0026Token{minter, token})\n}\n\n// mgss.\n\nfunc Transfer(symbol string, to users.AddressOrName, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\ttoken.token.Transfer(caller, to.Resolve(), amount)\n}\n\nfunc Approve(symbol string, spender users.AddressOrName, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\ttoken.token.Approve(caller, spender.Resolve(), amount)\n}\n\nfunc TransferFrom(symbol string, from, to users.AddressOrName, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\ttoken.token.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\n}\n\nfunc Burn(symbol string, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\ttoken.token.Burn(caller, amount)\n}\n\n// admin.\n\nfunc Mint(symbol string, address users.AddressOrName, amount uint64) {\n\ttoken := getToken(symbol)\n\tcaller := std.GetOrigCaller()\n\tif token.minter == \"\" || caller != token.minter {\n\t\tpanic(\"not authorized\")\n\t}\n\ttoken.token.Mint(address.Resolve(), amount)\n}\n\n// query\n\nfunc TotalSupply(symbol string) uint64 {\n\ttoken := getToken(symbol)\n\n\treturn token.token.TotalSupply()\n}\n\nfunc BalanceOf(symbol string, owner users.AddressOrName) uint64 {\n\ttoken := getToken(symbol)\n\tbalance, err := token.token.BalanceOf(owner.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n\nfunc Allowance(symbol string, owner, spender users.AddressOrName) uint64 {\n\ttoken := getToken(symbol)\n\tallowance, err := token.token.Allowance(owner.Resolve(), spender.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn allowance\n}\n\n// render.\n//\n\nfunc Render(path string) string {\n\tparts := strings.Split(path, \"/\")\n\tc := len(parts)\n\n\tswitch {\n\tcase path == \"\":\n\t\treturn ufmt.Sprintf(\"Total tokens: %d\", tokenList.Size())\n\tcase c == 1:\n\t\tsymbol := parts[0]\n\t\ttoken := getToken(symbol)\n\t\treturn token.token.RenderHome()\n\tcase c == 3 \u0026\u0026 parts[0] == \"balance\":\n\t\towner := users.AddressOrName(parts[1])\n\t\ttoken := getToken(parts[2])\n\t\tbalance, _ := token.token.BalanceOf(owner.Resolve())\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\n\tdefault:\n\t\treturn \"404\\n\"\n\t}\n}\n"},{"Name":"types.gno","Body":"package token\n\nimport (\n\t\"std\"\n\t\"gno.land/p/demo/grc/grc20\"\n)\n\ntype Account struct {\n\tAddress string\n\tBalance uint64\n}\n\ntype Token struct {\n\tminter std.Address\n\ttoken  *grc20.AdminToken\n}\n"},{"Name":"utils.gno","Body":"package token\n\nimport (\n\t\"errors\"\n\t\"strconv\"\n\t\"strings\"\n)\n\nfunc noError(err error) {\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n\nfunc validateTokenInfo(name, symbol string, decimal uint) {\n\tif len(name) \u003c 3 || len(name) \u003e 50 {\n\t\tpanic(\"invalid token name\")\n\t}\n\n\tif len(symbol) \u003c 3 || len(symbol) \u003e 12 {\n\t\tpanic(\"invalid token symbol\")\n\t}\n\n\tfor _, r := range symbol {\n\t\tif r != '-' \u0026\u0026 (r \u003c 'a' || r \u003e 'z') \u0026\u0026 (r \u003c 'A' || r \u003e 'Z') {\n\t\t\tpanic(\"invalid token symbol\")\n\t\t}\n\t}\n\n\tif decimal \u003e 18 {\n\t\tpanic(\"invalid token decimal\")\n\t}\n}\n\nfunc checkMinterAddr(addr string) {\n\tif addr == \"\" {\n\t\treturn\n\t}\n\n\tif len(addr) != 42 {\n\t\tpanic(\"invalid address\")\n\t}\n}\n\nfunc getToken(symbol string) *Token {\n\tdata, exist := tokenList.Get(symbol)\n\tif !exist {\n\t\tpanic(\"token not found\")\n\t}\n\n\treturn data.(*Token)\n}\n\nfunc parseAccounts(csv string) ([]Account, error) {\n\tlines := strings.Split(csv, \"\\n\")\n\taccounts := make([]Account, len(lines))\n\tfor i, line := range lines {\n\t\tfields := strings.Split(line, \"=\")\n\t\tif len(fields) != 2 {\n\t\t\treturn nil, errors.New(\"invalid accounts format\")\n\t\t}\n\n\t\tbalance, err := strconv.Atoi(fields[1])\n\t\tif err != nil {\n\t\t\treturn nil, errors.New(\"invalid account balance, \" + err.Error())\n\t\t}\n\n\t\taccounts[i] = Account{\n\t\t\tAddress: fields[0],\n\t\t\tBalance: uint64(balance),\n\t\t}\n\t}\n\n\treturn accounts, nil\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"4000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"uvNYjMsZOs8E3RH6uoRiOBtmtUcySaJXR6Ffghlq1YVHoEpRpcsb8oReMKL82cgvtjxWNS5hXRUel4l7zXuZwQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1zqp246htc27mw56ea2ydvkg8ukx3q445uvzquq","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","infamousg",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtdpCiTtWoUTMFtKfoxBnKsE0NJulTC2kI4ebq4wKD4u"},"signature":"tTP0YqOJVGHr/b8gRMwkJodEGHdaSB6NFLvKtc/MB1FGFsc3ODscY3RYOANZYSDsr0I8gyccVA6NZGJckDEDyg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1zqp246htc27mw56ea2ydvkg8ukx3q445uvzquq","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","infamousg",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtdpCiTtWoUTMFtKfoxBnKsE0NJulTC2kI4ebq4wKD4u"},"signature":"HZbaM+SUNUlSYXRMY6j4heOBKZCy+CY+yQvwXEuRMDEb7ELDuEkHqxxU3e7wHf7huAn66skMZvc/QJCDixmpmQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g122n67es9vzs0rmharsggfr4sdkd45aysnuzf7m","amount":"1000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"XS3xBF2ufnIdjTyAhvXnKVcfLJZSzfDvcD7dVK9idTk51um3sIJiglEE5T6QsU8D0Es0dZu8Fu6r/uOCAlIslw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g122n67es9vzs0rmharsggfr4sdkd45aysnuzf7m","amount":"1000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"/3wwHkxEwRbPFh9lp0a3o2UR1i3s1PeM6pzPbu98P2kXC3/lcJP1tqhWPjATgFGVzGIXrqWux+OUu7pLEyElIg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19yltltjed5688sullftzurhdshmjwtm8vlqdr2","to_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","amount":"1000000ugnot"}],"fee":{"gas_wanted":"61656","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoXFomwlVbbLZSPKTPFbYTS1JX/eNqYPtzLcd7f/VcK8"},"signature":"SF9CK5wq3OG5WXQsNRk+/y4Je3s8Rr9t6+kax65R/z8hNnakPAd6K77VmV3JM5mzr9apMQwrZqvuCyRIuTKd4A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g19yltltjed5688sullftzurhdshmjwtm8vlqdr2","amount":"100000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"EIKC+7iiOwAxDddI7rJ8lDDLId7026B1iU+TOrtGUMMts3Yk18TkJNe/iY6fwrIutmImTMxM/l+7rCIAQbv7NQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g19yltltjed5688sullftzurhdshmjwtm8vlqdr2","amount":"899998ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"BylwF/gKMGZv3GzQ2VaNwWZl4RG5DAHT4Nosn1WkpCJd3XH1wXc/RN9ANdnrpRXT0UOwE6COl7hAqO7GgIZ+3A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1a8a2pxj6jkvkqtph745g3mct2uwnynajxgyaet","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["carperdiem"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ar6zfvbT2kkaPWPeeseK3qshyGm+vqy6l9+TJFTbxxsz"},"signature":"w10Xdc1YFJCsmoR+Z6yAW3AnckokuRVmYrHismNsgLgjVheNRW9Rdop3qfzBTZJ7CwS1ke+B6bJJ+uqK7KhKRw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1a8a2pxj6jkvkqtph745g3mct2uwnynajxgyaet","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["carpediem"]}],"fee":{"gas_wanted":"3000000","gas_fee":"2000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ar6zfvbT2kkaPWPeeseK3qshyGm+vqy6l9+TJFTbxxsz"},"signature":"/1uFs5NAooserQscEeecKuXR9nEEtyQN5VV56qxpAcdwIiU6zb023Ubw4Dl8EZ8PRGtikKmmbvAmlKeV7UARQw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1a8a2pxj6jkvkqtph745g3mct2uwnynajxgyaet","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["carpediem bid","carpediem thread title","carpediem thread body"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ar6zfvbT2kkaPWPeeseK3qshyGm+vqy6l9+TJFTbxxsz"},"signature":"DsPzdLz0vBOuSLa80asEN9cL75fZFU4vXuBlMSZudlFKZ8W256DuhjfyN/JMWpi0yjXv71Zi3L25tk1zbZrKSg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1a8a2pxj6jkvkqtph745g3mct2uwnynajxgyaet","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["carpediem","carpediem thread title","carpediem thread body"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ar6zfvbT2kkaPWPeeseK3qshyGm+vqy6l9+TJFTbxxsz"},"signature":"SwLp8g7ypXuIppi6TNy5duvcafhOcLYuoZTLPg5gkl999JW1S3c8AzFkvAS9dKXBxJjxTDkv4TKE+yQfgJ36hg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g122n67es9vzs0rmharsggfr4sdkd45aysnuzf7m","amount":"1000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"m/Z6rkleXLX35dYmltrd2/NdH6T2f7NY06T33TW9++QUk426U1vn5Nemw2zSvSrVS710ybL8Lcu7D8eRJppW6w=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g122n67es9vzs0rmharsggfr4sdkd45aysnuzf7m","amount":"2000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"hRtGeLfbwH5CjZVrBEKAOkxgrv+KnIwxRwwKyiGlavdsVruexfJI6WSHUkxCJ9B/OV7B00VjSJRKZlqfzsQ5vA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c9tpxanexwfmrj5ywf282rvnw29vlese628djt","send":"","pkg_path":"gno.land/r/demo/users","func":"Invite","args":["g1c9tpxanexwfmrj5ywf282rvnw29vlese628djt"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArDPwpAazzWb3VbuHcnO5I9xNcpoyxjwMYAvs58y4iBd"},"signature":"+RpgRKZmskM8PRu656VKtJrOFH1g3n880SuwJ9Ca3IRgVFLVrxbTT+TzkW8yxjB4W195vKNmCZ/Rq6Ftd7eLIQ=="}],"memo":""}
