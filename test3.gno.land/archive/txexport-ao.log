{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1wt3nx8nsee45wljye9d2qyrr9mrdman5xjpuzd","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"MrvVHeLc2boJKo2NC6g1X9nU60vDTj8fM/n+qIob2toYYyT/d5LANf/rCKQOqSUYpFQhIsiXwNG1ZX0VqoZRtg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1wt3nx8nsee45wljye9d2qyrr9mrdman5xjpuzd","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","dilemmaboss5w",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+l+65DyYXfCVSMjNncp4zvMuyS0sj7Q9070aVln9ST2"},"signature":"mDq06AyP1hRtzdTFVlBn/5wvSZv2UHv9YwkoJw5YGoh6JEDDPlBl3m8uaj0t2s5EHUJzlx7DYJ4wl8kmxdXlpw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1wt3nx8nsee45wljye9d2qyrr9mrdman5xjpuzd","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["dilemmaboss5w"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+l+65DyYXfCVSMjNncp4zvMuyS0sj7Q9070aVln9ST2"},"signature":"pasa6LfHJdvi3nIygCiWNdSO6GbuewpE/HMXSQWjVbQyKOfBkFJNW3gDFWrNTmC9iBwFAyebEqGZmjjPY9Jugg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1wt3nx8nsee45wljye9d2qyrr9mrdman5xjpuzd","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1796","dilemmaboss5w","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+l+65DyYXfCVSMjNncp4zvMuyS0sj7Q9070aVln9ST2"},"signature":"612gk67fMCny0qBuyqLwx3l/xMMROzhqh+LtLJgveUNG6KO1f2FIYC8xdAbUOImMRnNXfZAg3oMkJReVB0CVAw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1wt3nx8nsee45wljye9d2qyrr9mrdman5xjpuzd","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1796","1","1","g1wt3nx8nsee45wljye9d2qyrr9mrdman5xjpuzd"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+l+65DyYXfCVSMjNncp4zvMuyS0sj7Q9070aVln9ST2"},"signature":"sEUtWxPYULWAW/nB85zhbHVI5kloX3ooOmFVE9WLPhQCoLRtuhqxcQRTAOVU0QQ3P3Ye9AePzNaWX9T0Hk/SMQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1talpr80tq8ny5kcczzmv62yqpk8hxlv88wfz0r","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"pA7hxzTGy+9WqXo0Vo1YG8h/eRph+wUyA/e0PIHL7vZYeQUwhEGH9++a37E/X1uy3MnKqfy6XXLwNY0AdubGGA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1talpr80tq8ny5kcczzmv62yqpk8hxlv88wfz0r","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","gatherseminary5",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AzPZlpot8f9U/HsNC+Zky+8bBz8u/L91+BT402cVUvsm"},"signature":"BTzTinn+i1ohrBfBIsL4tTleAb/H9+LvvrzLgYye8Ghrhg9sG3xsdfQTCy7Ob5Xh6YkZVm9HilK3xJDd3bIo5A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1talpr80tq8ny5kcczzmv62yqpk8hxlv88wfz0r","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["gatherseminary5"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AzPZlpot8f9U/HsNC+Zky+8bBz8u/L91+BT402cVUvsm"},"signature":"9TqceYRZKe+TcTA5OLsana57R8eHJVU36Uqo+qG74zpgWyFNjWj2Q1UYVPl48n5RCdO9lRLwW7NgaZhcnjsYEQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1talpr80tq8ny5kcczzmv62yqpk8hxlv88wfz0r","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1797","gatherseminary5","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AzPZlpot8f9U/HsNC+Zky+8bBz8u/L91+BT402cVUvsm"},"signature":"jy+z5digteZ3DhzWpfWDR9ZMeTtuBD3V1tGc/bsQQWwzL3g5OzfJw1H12kucR8PhPMyvaJaSy/3/HvzMIBsnXg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1talpr80tq8ny5kcczzmv62yqpk8hxlv88wfz0r","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1797","1","1","g1talpr80tq8ny5kcczzmv62yqpk8hxlv88wfz0r"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AzPZlpot8f9U/HsNC+Zky+8bBz8u/L91+BT402cVUvsm"},"signature":"sdgE6be7sVgsGJ3z2f0cgQXJQwVc95GEuiQMAZz+1ikzZERQckPmku1KuY0Anpds3XZKRf/4AQ03dBS1G8yjNQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g172fn3rswg7dxyhemapn9l2ck0x48uytvklukzq","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"WVMoXV2LMhzemSdMhJ5XlvvUJFf8pWt4dZGthsfLWw9XxRpDpJVCfUddBaawBj4M39zb8Gvt9GfKDlDKSPY6Hw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g172fn3rswg7dxyhemapn9l2ck0x48uytvklukzq","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","coffeepitchxy",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0jUFeYijVRz1+iGw1eN1zlx3QtxRtFNT88K6gZ/T7EC"},"signature":"xgz6IlWAWC8YtNB9Z2MwPF9TGphgxpRsY/V3OBWD+2Yo02+NuSHapQYsxgDGuTsOzRnEpGwVWAl1P171LiKCTQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g172fn3rswg7dxyhemapn9l2ck0x48uytvklukzq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["coffeepitchxy"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0jUFeYijVRz1+iGw1eN1zlx3QtxRtFNT88K6gZ/T7EC"},"signature":"o90f9+Kur2oWvYTgTe6KxM6KID27c+tVpmooLYWNGB4Mk+/N/NfPwxGCwdVwOdxkw4rAt9Mxcs8avtCQc7b0pQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g172fn3rswg7dxyhemapn9l2ck0x48uytvklukzq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1798","coffeepitchxy","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0jUFeYijVRz1+iGw1eN1zlx3QtxRtFNT88K6gZ/T7EC"},"signature":"psayqyZsdNtjNAcyDfajD/HNp3C6dglP6HyEyG+SDNAo3Lc3kRP4ZqscuKk5wyTk+Lqjgj4ppmJ9LTT/rqHOhg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g172fn3rswg7dxyhemapn9l2ck0x48uytvklukzq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1798","1","1","g172fn3rswg7dxyhemapn9l2ck0x48uytvklukzq"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0jUFeYijVRz1+iGw1eN1zlx3QtxRtFNT88K6gZ/T7EC"},"signature":"TpHJQVGbGLk/u6t3TuzfolO7TLpje7ZS1md+k2OkuHhKWEFyA8LAWibudx/Vgq1jg+q1uRk9uFJcti9r5doxAA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1mt9hsfq9l8sfgld77nsls0d48m7yt6mwdv78vm","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"cD9GbwtPUW8dp8rHwWdZp4Tt3iS0dZgqdX9CgtKIqKcF7Li+KqtezkgEPnroLggxhHMYZC1aUmv6zff5S2ZPxg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1mt9hsfq9l8sfgld77nsls0d48m7yt6mwdv78vm","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","liondreamfg",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApRXyPA7c58b1cBLd6FScSypxeRRI4jylpSaMvneqsDI"},"signature":"7DVOY3y1bdfh6J7Mtm3d2SpcaTpWDDuc69Dt7ThnIaxK7rwOmsAWIg/4DmhFNWKp0C0T9IFoKylFI/M0mw6hbQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1mt9hsfq9l8sfgld77nsls0d48m7yt6mwdv78vm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["liondreamfg"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApRXyPA7c58b1cBLd6FScSypxeRRI4jylpSaMvneqsDI"},"signature":"/V5LPJgx0VCGjRlj7K6hwL0bJq3V96E9UXR2DA0H8BUPHLyQ5GRLq/JLNbbejsK5uqOZfDoUQBFk3+lFL0VdCg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1mt9hsfq9l8sfgld77nsls0d48m7yt6mwdv78vm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1799","liondreamfg","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApRXyPA7c58b1cBLd6FScSypxeRRI4jylpSaMvneqsDI"},"signature":"r+Rc8AHXCcHs53wV8uKzcnrxrp6/eat6eVr2sXTw33xbrg1/EJ3CKE/ce9mLEOcoB8kyrCb8D/axvpAk2dE7eQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1mt9hsfq9l8sfgld77nsls0d48m7yt6mwdv78vm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1799","1","1","g1mt9hsfq9l8sfgld77nsls0d48m7yt6mwdv78vm"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApRXyPA7c58b1cBLd6FScSypxeRRI4jylpSaMvneqsDI"},"signature":"U1kZIekLNrEkBZWYlyolwzfyeRCUiYDkkcntpm4HcmQ8bb+nT8mJCL5k1xasVaWgdP6TvQbThtBIcAhTTcR/XA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g13y7rtmga7t4dqaw708373j843wx79d3muxe4wj","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"K/zHT9JHCaAA7yzB1+qZy+dMn22KpGaaf/mugc8NWMMd8cskRstEeUTVA00dB87AT59PYXxzwp9Wn+AFB6rSZg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g13y7rtmga7t4dqaw708373j843wx79d3muxe4wj","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","reducetransferdq",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+GWHbTDAhxyg2MEBN3f9sXLAKkTXPw/Nfdysoaw4U6v"},"signature":"2TcCBm8rXR02Bk2K3KDZuvAL+liE+TqvFCkQZsu9UBcd8bj1EXExVCwz7WADLvE2imj60iX8hNOacUF4sf49Rw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g13y7rtmga7t4dqaw708373j843wx79d3muxe4wj","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["reducetransferdq"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+GWHbTDAhxyg2MEBN3f9sXLAKkTXPw/Nfdysoaw4U6v"},"signature":"cLbtIpUohkqmowO7n42X7PKhFyKxp9qq0a/CyUOqYBAJUstdxvtPdvw3DJF7ylr2MBv9Q2b+D6Fci5CX24VGsg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g13y7rtmga7t4dqaw708373j843wx79d3muxe4wj","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1800","reducetransferdq","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+GWHbTDAhxyg2MEBN3f9sXLAKkTXPw/Nfdysoaw4U6v"},"signature":"e4fCdY1q5YEoFEkSvlfdckJtk0+8o7KRcsjb7Zep5ONBkeUl/fsxa9W/NiE0PkKFNW2/zmXPgmPHWVtLsjTKCQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g13y7rtmga7t4dqaw708373j843wx79d3muxe4wj","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1800","1","1","g13y7rtmga7t4dqaw708373j843wx79d3muxe4wj"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+GWHbTDAhxyg2MEBN3f9sXLAKkTXPw/Nfdysoaw4U6v"},"signature":"Xlqz/eueNLEgwvR+MtkM7BUNTTGYBYVQp/TaAnQ1bJJ6b2ZihaGNrGnbYJgKPVqKJWONm0Pt1OAXY4BDGqWcfQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1e9w8nt99ac44fx97lkp4z42l3muv8m4cj8vvcs","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"8YbUkte+0G+OTucbrq6946e3BhKV6rqeozWz0WA40wkuT4BKXrovZk6PXL6hsSoeTHwT5k31B0KWxgIujJ4GVQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1e9w8nt99ac44fx97lkp4z42l3muv8m4cj8vvcs","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","timecase4f",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApfHxlzpPlmKXfjyngTh5dyQVOgl1G5zDEzlHE/j8xr0"},"signature":"Bpjea+Mqvryj/LisWzre7F9heO6FELQy8/syQlANg+kbC1LkzGvuyLXrel3bVt8vWXP25gihNC8S9Up/+kq8fw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1e9w8nt99ac44fx97lkp4z42l3muv8m4cj8vvcs","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["timecase4f"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApfHxlzpPlmKXfjyngTh5dyQVOgl1G5zDEzlHE/j8xr0"},"signature":"c/oG6paYRsZW5opMoZwg6N/NC2upbVsO8CP536YhrK4nMvgrtbm7epMOgLnnAmz+BEeSQp6IDUEFBddTqn4I+Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1e9w8nt99ac44fx97lkp4z42l3muv8m4cj8vvcs","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1801","timecase4f","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApfHxlzpPlmKXfjyngTh5dyQVOgl1G5zDEzlHE/j8xr0"},"signature":"m1eQVMrQQhcUwP9LbD8L9+nspiuVY12Vki6GiVXWgkZ9JVbRlAs6DWjb8yhrwnZjSI9hVrwl7tYS+FXWWjwHFw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1e9w8nt99ac44fx97lkp4z42l3muv8m4cj8vvcs","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1801","1","1","g1e9w8nt99ac44fx97lkp4z42l3muv8m4cj8vvcs"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApfHxlzpPlmKXfjyngTh5dyQVOgl1G5zDEzlHE/j8xr0"},"signature":"y1g40cpX+F3iPanCyW5Z1KlZvxXkWGz/CFmnS8n7audmE2N8Eh2eptzVan7nH4UpgSoXu9duGow6BMh7jcHSog=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g16hjg482hs4fuzsrm80m93aetk474w0p6q3c0dc","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"LxkF0JKbcUNjeNg0C3oSRqn8NyRWN+cKAS20dNyI9qknKZgip6WM6KPCJoW5W7tjWzSGhDyz420W1C3psn7aXw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16hjg482hs4fuzsrm80m93aetk474w0p6q3c0dc","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","sucheitheruz",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmZL6PbrmgYR/nTew+GUWK8yjABuW+kIuLSFzsWGELjB"},"signature":"TKVVUlLA9PSuKY87T/mCSzu/510DTOLZ+OJTtOnUeJkOC9PrezNUNcvy3KZi6ovPE8BcgMNAqkCWjwJV5gg8zA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16hjg482hs4fuzsrm80m93aetk474w0p6q3c0dc","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["sucheitheruz"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmZL6PbrmgYR/nTew+GUWK8yjABuW+kIuLSFzsWGELjB"},"signature":"qoCcjq9c96GCDtEZjsms1ieWdEXc7NbhTg8byeG4sRN/e6Rrq5Zb4eXghN+P0vdMDyR0VCQYAZ2DMyl7Lv/BZw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16hjg482hs4fuzsrm80m93aetk474w0p6q3c0dc","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1802","sucheitheruz","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmZL6PbrmgYR/nTew+GUWK8yjABuW+kIuLSFzsWGELjB"},"signature":"nuuWOX57dhmopZmzwn0PgUsFWa8jayaJTLdqLvqUHB5rHzSHJ3O5s1WsVJ+UPq+mHQj9ImK0d1HOPhJ5s3NoJA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16hjg482hs4fuzsrm80m93aetk474w0p6q3c0dc","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1802","1","1","g16hjg482hs4fuzsrm80m93aetk474w0p6q3c0dc"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmZL6PbrmgYR/nTew+GUWK8yjABuW+kIuLSFzsWGELjB"},"signature":"3SiZRR5f024FeZh9uP8JRfbMN9PrtUob3u+3ZowRXncP7oT3FTy6P8NhZ2YvgoSkDByyHosuxOQtuG18OjSePw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1a2p358f8au4ne643yg26afw9hk9w5qjz6c6gmz","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"m8MVYgr83nK3E8w5qYqUwmK9UWfoPcrj3zpaEwahTKthnyR6XqcOjDzDq5VkOzqpCvVed58fUMVYNuCKZxftuw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1a2p358f8au4ne643yg26afw9hk9w5qjz6c6gmz","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","heightcomfortne",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ar7klSBCnNWlJAPcYHcVk53HmlXOCBlfdFrRh6Z0R4vB"},"signature":"H4GYecOIo8T9el/2TFV90S3p2l0Fz6GB7WoDjBtGbNRXv71VidL6Fk9w7S8Vk3rIh/r5i5T1zY52kc1Q7tQZLQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1a2p358f8au4ne643yg26afw9hk9w5qjz6c6gmz","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["heightcomfortne"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ar7klSBCnNWlJAPcYHcVk53HmlXOCBlfdFrRh6Z0R4vB"},"signature":"rC1OQ+0aWOIW6eMKLjF4P1lro3RTZa5nUneGqTcwZHpJRow1+jEI/q2m8kGFOtmCEFYQNj1ex/qC43bD6tqmlw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1a2p358f8au4ne643yg26afw9hk9w5qjz6c6gmz","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1803","heightcomfortne","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ar7klSBCnNWlJAPcYHcVk53HmlXOCBlfdFrRh6Z0R4vB"},"signature":"RmFGplnedsGmoztuaCguKlG7N46ZSo+QTYl+4TjknQh8X8GVmbqQrnxuYwbQBoWXAlhudHc3OFOfbpEdIC5Wpw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1a2p358f8au4ne643yg26afw9hk9w5qjz6c6gmz","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1803","1","1","g1a2p358f8au4ne643yg26afw9hk9w5qjz6c6gmz"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ar7klSBCnNWlJAPcYHcVk53HmlXOCBlfdFrRh6Z0R4vB"},"signature":"7VZBCgWDp9GGMmqNg88h0RnE2liEK/fRDOHKyftP8OMTVc4uq4iB6Ldk+fHBhHAYN0bmwIsIPM/eYw1NBO+hxw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1hhw46yda974x8g8hxy4gyh269wmgzsng8z74rq","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"hoJHUXDHtoVj7DuEaUzrEEVq6mND+gFANx38VoAmYn9dzP2+0xKX0vLymBo/gikSq/AwItgC7EGPP/k9yJvB0w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hhw46yda974x8g8hxy4gyh269wmgzsng8z74rq","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","reasonpatchx8",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A79Pgav/tBW20Y23mCDfSdjQa3bS8s3BToM6QFa5xQmn"},"signature":"yMALSNCfqeTE143UvmUiiM3R1ckD5gZxV6eyoM4pnhR88vcK5iNmnArxJ1ofH/Qo9kL5aYiHkeFSzippjfKEkg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hhw46yda974x8g8hxy4gyh269wmgzsng8z74rq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["reasonpatchx8"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A79Pgav/tBW20Y23mCDfSdjQa3bS8s3BToM6QFa5xQmn"},"signature":"8H3Im5mhPwf9iHUhI2sdMTz2g48ogNVV2zFt/ttv7rhsvUWT02EpKjNHmSnJmzyb3zBdWnOD32qlvdXv3s+4hg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hhw46yda974x8g8hxy4gyh269wmgzsng8z74rq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1804","reasonpatchx8","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A79Pgav/tBW20Y23mCDfSdjQa3bS8s3BToM6QFa5xQmn"},"signature":"ZGxwx+HoO8jD75yjgMcRTi9zBLGLmOONpX89S3/L1Phmo8LPETjCVyVgr49RS/JpDbmkzMNDpsNYBWYl+WJdhA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hhw46yda974x8g8hxy4gyh269wmgzsng8z74rq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1804","1","1","g1hhw46yda974x8g8hxy4gyh269wmgzsng8z74rq"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A79Pgav/tBW20Y23mCDfSdjQa3bS8s3BToM6QFa5xQmn"},"signature":"CUIfNGTqigwEU7Ky1QgDi7YLcKFn9um3FKCOE2CsHW0jDK+fKDYa/IIQSQUkWeI7RPTqMX6PgzFfXA98UYKLog=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1q6d3mu4p9s87upv0c2sdpcxyc3txpzr7ez4vpf","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"9E+6ylxQu/sjKKi6O5IoJ/TyLFeenz2PU7IcEAYnO35+3gUl9dgSX3lz0br604FiCifeIPRLqMnOA65IMN8m1w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1q6d3mu4p9s87upv0c2sdpcxyc3txpzr7ez4vpf","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","amountveteran7u",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av0Jnieq3dAFSxYrN1e0K9z9WNzntHkgzO1rEWRoSz67"},"signature":"PhfNmkrZ/TacgWhKnpay/y6YE/YisKkzUb+WAdaPrp8b2N7HINOmRU/guWLdd9r3fvYfw0H3/Vbg3DaeF/gj+g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1q6d3mu4p9s87upv0c2sdpcxyc3txpzr7ez4vpf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["amountveteran7u"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av0Jnieq3dAFSxYrN1e0K9z9WNzntHkgzO1rEWRoSz67"},"signature":"MdW3sh8Oh6zz+1NU53W0eR2VzP+vNQgWF+oqNvxrZ4NX0yZOT5IZZye0BJuSAZV03xGs4ahJeKxc/2/2cZRqqg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1q6d3mu4p9s87upv0c2sdpcxyc3txpzr7ez4vpf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1805","amountveteran7u","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av0Jnieq3dAFSxYrN1e0K9z9WNzntHkgzO1rEWRoSz67"},"signature":"39vmy/XAMFpd0eejn4kKAby9KOptx057bw4Pb3pQZUtVERigCd1twes5rEJCuoZAqgKQOl3HG0/xG2dgHgyobQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1q6d3mu4p9s87upv0c2sdpcxyc3txpzr7ez4vpf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1805","1","1","g1q6d3mu4p9s87upv0c2sdpcxyc3txpzr7ez4vpf"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av0Jnieq3dAFSxYrN1e0K9z9WNzntHkgzO1rEWRoSz67"},"signature":"uwbzJ46/qArW2T4xxhsmHMUmCSz/b8qgzTyRvehsxhZ9YldWUItQi7zNpIv/lsJGh/7VRzM9nBTER5IYhYVXVA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1k2err0ny3es7gytmqkcyazww02rf9cr50yj4nv","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"PeH629OezMzcp+7XkiWJQlpfn0mSnqVoMNXr93yvPf5CdBUTC+xhW4XXGDUqwj/wRKlT/2TPRXtsaSvCjuI70w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1k2err0ny3es7gytmqkcyazww02rf9cr50yj4nv","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","cabbagephoto7g",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+kae2JxFI26NJiEfUtSpEGW22vM2loDVTGK1v9ys2DU"},"signature":"NSZefBwybz0LO8wH4r9L9DBclus1EZMadteqE2ucvXsr2ePPOljTrYmf63mnDqc12wxGc7O9Dirs44NW75RQCw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1k2err0ny3es7gytmqkcyazww02rf9cr50yj4nv","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["cabbagephoto7g"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+kae2JxFI26NJiEfUtSpEGW22vM2loDVTGK1v9ys2DU"},"signature":"HVVbmKeYXIkx7KjH/e5+5QIG3sLfJo6ycSuJ/yYTnhQXCyrqDoWpnSeVfG2Orzct3G+BfkmatrKiCLRpVil8Vg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1k2err0ny3es7gytmqkcyazww02rf9cr50yj4nv","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1806","cabbagephoto7g","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+kae2JxFI26NJiEfUtSpEGW22vM2loDVTGK1v9ys2DU"},"signature":"L4D6vaWXTxixRBxGTiOPM+EgrQBO6Sz8By4EaK0MYhsFdIi62Iy4O9tDckV5Z1FhSf1TSUdJutoO50nG1t8CKg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1k2err0ny3es7gytmqkcyazww02rf9cr50yj4nv","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1806","1","1","g1k2err0ny3es7gytmqkcyazww02rf9cr50yj4nv"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+kae2JxFI26NJiEfUtSpEGW22vM2loDVTGK1v9ys2DU"},"signature":"/CbHURi6opANIsZRsyflMUg2r6Qbz2OSEqbNPOqglosdjXj4R767PgEO3kqQkjg4E6bQK7JUdJfsk0fVF+d0XQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1wa09n9y36xmmmz23du446rf7kp5mw7lwfzx9z6","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"IJS3Yyvp5Y9tQN8n8mQuBbIJxHCSAhbdtR2JVzsAafhtJHsdyYOgcglhKx0Bk9LTWxlfVMSn1IsUJNttM+pLzQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1wa09n9y36xmmmz23du446rf7kp5mw7lwfzx9z6","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","paradeburdenmm",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A32Z6rhC91yku+HfWi/wIzbqcdd6tL12e9h97nUJGUxL"},"signature":"s8sof9rk1BCql5YfeE0ALEzwcyNYrYqTO/VNiE9Bha0+NCXfbM68avkdtTUsLCWujQ2Hk0jnYHlRl/D3IO4Fdg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1wa09n9y36xmmmz23du446rf7kp5mw7lwfzx9z6","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["paradeburdenmm"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A32Z6rhC91yku+HfWi/wIzbqcdd6tL12e9h97nUJGUxL"},"signature":"os4xvo4ecDF6DDNlUVGG/Ed34ESTz70Rb4oEeTKenCcMPxSp4Nl0cS9lqfvIcsp8Oyw4IIL36MGXLx2qf9Yj0w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1wa09n9y36xmmmz23du446rf7kp5mw7lwfzx9z6","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1807","paradeburdenmm","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A32Z6rhC91yku+HfWi/wIzbqcdd6tL12e9h97nUJGUxL"},"signature":"U4uJNGQsPPZtJjcL1r3Xer4+P84gg6/HRFWfsVM2JtkzkF5V/5fc2wO/BK+peJoEr53bzBYfZ5xjyFkIvw/u3w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1wa09n9y36xmmmz23du446rf7kp5mw7lwfzx9z6","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1807","1","1","g1wa09n9y36xmmmz23du446rf7kp5mw7lwfzx9z6"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A32Z6rhC91yku+HfWi/wIzbqcdd6tL12e9h97nUJGUxL"},"signature":"y2PzvyhtWj1kHZJ8yPRZZ2NZ4ncN4vgeBN7BMsgp4vM7STIrYVpbzfGSeqNZ3McoY/eVGL0lQbBa3DJBATEZEA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1n40xt9c2fyav7827xujz52szfl7ahlankd2qp3","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"9CGk/0nuyZqLXrkC4SJAqNMD2NCM8wCLQB8iRQz/TUp43uS4GNTsE8+bP8+y2SzNyKC/2Ioi8UiDt4VWKTImSg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1n40xt9c2fyav7827xujz52szfl7ahlankd2qp3","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","radioelitev7",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/rOHqzuoWzHVanGSj72EdlQ8vVn33rYpdI1njUw04wn"},"signature":"AHmDny4vd83KtZRNO2xXXLVw7cSQAlHHZ9jb0+lDkBEQztV7iU03Zetc4h89DqUGjOKp5U4gMf1gP2/XMBDwCw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1n40xt9c2fyav7827xujz52szfl7ahlankd2qp3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["radioelitev7"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/rOHqzuoWzHVanGSj72EdlQ8vVn33rYpdI1njUw04wn"},"signature":"X5vYrYIdJN4WipLSIGDZGYDpd0K0z1kvWkgjSpUeUykjCe/+VG93xB2wfrxzdyu88YMG2K1zXMn/SOtecbjQKw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1n40xt9c2fyav7827xujz52szfl7ahlankd2qp3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1808","radioelitev7","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/rOHqzuoWzHVanGSj72EdlQ8vVn33rYpdI1njUw04wn"},"signature":"DmIfe89cPYS/W1u00DbjgtA40zs3o43WqiZB6mbxzcIlwbaD7o3i7aY4x+tSDezNCraDWRaaigzret+MImzOdw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1n40xt9c2fyav7827xujz52szfl7ahlankd2qp3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1808","1","1","g1n40xt9c2fyav7827xujz52szfl7ahlankd2qp3"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/rOHqzuoWzHVanGSj72EdlQ8vVn33rYpdI1njUw04wn"},"signature":"v2nvuUrPe3rBQhMywHj8OcauMgNiaZY+bejtoxBxUSd1NRrhNODFNbv+9iOxF9ZShsa1yyu2x1y7hJEmCbDRWg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g16ypxwt6jrccyy0unp04r3fpl0q9ld02lkumacr","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"trEuGGtiQmsLqInSltWnSn6oa0UtfLQ67MZUNInrabJ+qmIhL3LpN/abPLErs2AnTIu339T0Fj1LGsMaecywQg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16ypxwt6jrccyy0unp04r3fpl0q9ld02lkumacr","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","crouchhealthyy",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A89m36JqDSthtsjEwj4F5xuuNrVlQL6q0QxkpsJIx94M"},"signature":"WlJQZ+YVUBS85qUKQhCGq7wMFlgPxTszI9Nmtie1BZYwdx8UWD7acmEB9r1ewyMowzKYrwAaWGJt7dyV1pIHyA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16ypxwt6jrccyy0unp04r3fpl0q9ld02lkumacr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["crouchhealthyy"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A89m36JqDSthtsjEwj4F5xuuNrVlQL6q0QxkpsJIx94M"},"signature":"Bfxt3yC9OcoiSSzl2jDtRhJCuflV0/c4yzVttZdVd9M1trDFC8VYysZ7RCYXi7ExNyJueK4Ay+m1KDfju7d90Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16ypxwt6jrccyy0unp04r3fpl0q9ld02lkumacr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1809","crouchhealthyy","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A89m36JqDSthtsjEwj4F5xuuNrVlQL6q0QxkpsJIx94M"},"signature":"wEEETgMZbBlfsIBckvS1wST3XGVcFZetwT5+7Y0YHFwT1a+Cu9jnC5j+z0uaOybRxmGsepy9eOi0EhgGZInQAQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16ypxwt6jrccyy0unp04r3fpl0q9ld02lkumacr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1809","1","1","g16ypxwt6jrccyy0unp04r3fpl0q9ld02lkumacr"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A89m36JqDSthtsjEwj4F5xuuNrVlQL6q0QxkpsJIx94M"},"signature":"rLlo8bgVdR4Qg71ncUQgRh/1uJAmI8xYHkCs/HnET4Nn3iy4c8Iz3RJyh9FpxaPQKpvLy8DD6xCyqGR1IIUOEA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g10pn6plhejpa7mx63j62jazjaeudl827s7x9yy3","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"0FlfGOsh7SRoEWoiRSY094Xq5x1IKGo5pYOYIyOpsCNIOvmVW8jxAmtMoZ3+uCIKItDSgj5wZMm+Q+y+mqdT3w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10pn6plhejpa7mx63j62jazjaeudl827s7x9yy3","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","metalinfant7m",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AspaaLM4R7uyv7ExE0HILF4hupdQ3CTRKuA6aVz7/MCc"},"signature":"vQkGCjWyFGB7jjkHP3LQA2xuJo6fA98gNd3/iPpTsL9i1GfvhRrEdDIthCxUIvJIQn8BQ1c/gMDrtKv3CxCz8A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10pn6plhejpa7mx63j62jazjaeudl827s7x9yy3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["metalinfant7m"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AspaaLM4R7uyv7ExE0HILF4hupdQ3CTRKuA6aVz7/MCc"},"signature":"8ieLAF8tBq2RcSbzKw2X8daUCltE+hKjfBJ7iN1nNRAxP9P5ZNtnOReS4igXWcPV6OSoeuoeuZ76oy0XdLq+xg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10pn6plhejpa7mx63j62jazjaeudl827s7x9yy3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1810","metalinfant7m","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AspaaLM4R7uyv7ExE0HILF4hupdQ3CTRKuA6aVz7/MCc"},"signature":"1O3/uwMJoa3SjV1NL69T2NiNKSkaTQaa38id7PyH1gQPJ/1TBp6YMcs1snOsahT/JISzzGd3X6WXcopChsPhzA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10pn6plhejpa7mx63j62jazjaeudl827s7x9yy3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1810","1","1","g10pn6plhejpa7mx63j62jazjaeudl827s7x9yy3"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AspaaLM4R7uyv7ExE0HILF4hupdQ3CTRKuA6aVz7/MCc"},"signature":"BbUjhlZTJUOd5JaKSOdzaUOvRIRMQgLXkMfgavqrICleuH5wGMNhyhRsWaDvHPvF8OsRgF6Sn36g3HH+unLXLg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1dujrsrawt5mndlpls5nr2p7te2lk52cnyvggc0","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"DCx6msOEQrG6uyQTZMbxzNs6hUZG9Pxs//lw0tGLFthNMV3sPxfI9VHLMdktF7/dAgZso4EUf0kOw5zvQP+U1g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dujrsrawt5mndlpls5nr2p7te2lk52cnyvggc0","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","notecreamnd",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1IWm4wUafOtVZiii+u6gmMTiz3yw4vbYZUS01ZdgZu0"},"signature":"TQR1eJkQD6K1+n5CFz41mGyn04GtWk9jXJxeRdc79PVuuu8FfjT/J6+oRkp+6PP2mN590PxhDM3j7uv1UxnxDA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dujrsrawt5mndlpls5nr2p7te2lk52cnyvggc0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["notecreamnd"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1IWm4wUafOtVZiii+u6gmMTiz3yw4vbYZUS01ZdgZu0"},"signature":"pzuKsuYDZjHndJnZQgfB3DOIVFwttast/WWQTlf3cuYqkdTA3ktKXqD4wxtryDj2AZp8Mj3hfU0jxht6+tixRw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dujrsrawt5mndlpls5nr2p7te2lk52cnyvggc0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1811","notecreamnd","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1IWm4wUafOtVZiii+u6gmMTiz3yw4vbYZUS01ZdgZu0"},"signature":"Q5cCBKXYvu6kDC3JDi6Ff6ugwg8+MDySNNeH5ikP29cspLfOb0Ty1XrlcovLcEHVtQ0pPTrauqzSedqZLt2Arg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dujrsrawt5mndlpls5nr2p7te2lk52cnyvggc0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1811","1","1","g1dujrsrawt5mndlpls5nr2p7te2lk52cnyvggc0"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1IWm4wUafOtVZiii+u6gmMTiz3yw4vbYZUS01ZdgZu0"},"signature":"d7u9FnGQb0FvpLdAlQB/SyMmEjSPYDxaa65GX0xVIasCn5jzX+j/gYmKvkRVPkrBRHWPf9OSBMxfdsk4o7jx+g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1n9f3ksnsuucfqvpv0lplp26p83m8g9sy708mgt","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Uoh1jS6pM6XnYYZIQhAdYLRgvELRpD+kIUM+FAAuk3toq8MG5AzVP5ilZSF46NiZ7t4qOWYCOV/8yRRqyu3dtQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1n9f3ksnsuucfqvpv0lplp26p83m8g9sy708mgt","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","bossdesignfq",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuPDdWrpmx4iEn/MmCYD/NnOn3k8tp+lGdIawyT4a/r9"},"signature":"tFVQRpTA5aHSXiGCwZfGHWiaUf5cIBJtS8fnjvaBheE3NAK46Gq/2f1KPW3E2ybcXLaCG9283o3EuM6y4+hXjw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1n9f3ksnsuucfqvpv0lplp26p83m8g9sy708mgt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["bossdesignfq"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuPDdWrpmx4iEn/MmCYD/NnOn3k8tp+lGdIawyT4a/r9"},"signature":"RJGMEl21bpdcrC22IqmaaReUn0mmKKkoLhmpjIAh6ekVnjDOhJ+18F9iDFLdf56jvpatWsUabt1Of0t8NESC9w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1n9f3ksnsuucfqvpv0lplp26p83m8g9sy708mgt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1812","bossdesignfq","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuPDdWrpmx4iEn/MmCYD/NnOn3k8tp+lGdIawyT4a/r9"},"signature":"3tycPkuezlXSSLZWDwopFILqwI4M6FcDBg1qekZxZitqWInILRHVH4XtlsFA9jz/kPaF+0MSsWLUpGoH3Yl/pw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1n9f3ksnsuucfqvpv0lplp26p83m8g9sy708mgt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1812","1","1","g1n9f3ksnsuucfqvpv0lplp26p83m8g9sy708mgt"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuPDdWrpmx4iEn/MmCYD/NnOn3k8tp+lGdIawyT4a/r9"},"signature":"jde73hne6trWJkeGNbf6J3uDO3gOaZqzJ/p2uzjKof4vutkt8+qTh45n/ddxff3v4jEbH3tP8c3+0xsi7n267g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1lukryl86kz88gzxtv0vn9w5wnnx0qpcmwtjn8a","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"pDagOd0RE0T27ttv4PVG+PISGX6RiQC1kaIQ1XXW0Ikn+9qe8RzdFYuQzDBggB+fdTOXriiWey5VeAECNDdOIw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lukryl86kz88gzxtv0vn9w5wnnx0qpcmwtjn8a","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","puddingcannon8g",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ag+qnmI8OsxqhfQIi9goNuF3g6Ui4y/QG1PFW/d7+41/"},"signature":"U5jL5iu3R3lE1KYF45Iax7TARn8k8UQ9M/8vn01cZbUrFuWigzYqj21UVISslTWfI/MbbOjeYSjeXXuE9TWB4Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lukryl86kz88gzxtv0vn9w5wnnx0qpcmwtjn8a","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["puddingcannon8g"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ag+qnmI8OsxqhfQIi9goNuF3g6Ui4y/QG1PFW/d7+41/"},"signature":"oit03hwB4rV1C+ApT8G/Ts+arDdYXqwtN+5s+A4etdQ+EuYB0f/52jbhjNaDbtrVSGjNzywqenXO8pB/CMY3sw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lukryl86kz88gzxtv0vn9w5wnnx0qpcmwtjn8a","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1813","puddingcannon8g","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ag+qnmI8OsxqhfQIi9goNuF3g6Ui4y/QG1PFW/d7+41/"},"signature":"ZvjbtUqbN1tucoOy/yodJLsI9YNGPOz0ly5KzQMgCy09opNvSHHFHUolkBNxaIwH9AfitUV0hpqqvaG8C4iKiA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lukryl86kz88gzxtv0vn9w5wnnx0qpcmwtjn8a","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1813","1","1","g1lukryl86kz88gzxtv0vn9w5wnnx0qpcmwtjn8a"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ag+qnmI8OsxqhfQIi9goNuF3g6Ui4y/QG1PFW/d7+41/"},"signature":"tRC8fqUF/cuCmWvhZIZ5tW5LRn97UbLDumvN1e6SKCpbniLsz00uh4l/La0D6IvkJ63wwGCzgX1PvHCp4oGI3w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1pj7fc0aj3x9y4k2xhn5vqxyxeafqduuyegm5a3","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"T4JOp/Qp/Iusgs9SbpQBo6IomwxvRJXEDDUjR+XhkfJY6GOo7uef4OKV4rhemV8wVeqg/I7S5T3jBvdFTNIaTQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pj7fc0aj3x9y4k2xhn5vqxyxeafqduuyegm5a3","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","jellywayy4",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtzFrXyxQVYQ/H1Ug762ISYu+L6+ZPh++EmkM75k3hGC"},"signature":"VmnIZQhQSq5ZTsQMsTeqktuhYX4mSluOwafvFWz+bF5UPNw6I7fnBGeTb3zLWTw5loJuFQYEftNB90N5hnPi3w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pj7fc0aj3x9y4k2xhn5vqxyxeafqduuyegm5a3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["jellywayy4"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtzFrXyxQVYQ/H1Ug762ISYu+L6+ZPh++EmkM75k3hGC"},"signature":"2lRBQvETmXqa7EbL7VNBT4sAppS7riHC35KOADqri+lnHsLLgBN5oTeW/xUZNA8XtN2ccy0yOKae9nGnOuWjyw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pj7fc0aj3x9y4k2xhn5vqxyxeafqduuyegm5a3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1814","jellywayy4","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtzFrXyxQVYQ/H1Ug762ISYu+L6+ZPh++EmkM75k3hGC"},"signature":"Wnd3AGTs+dkfWf/P79Q50bQRh30mEqE/r+LluoMy1gAmC172DJ5UrvS7acfXr9ov4KVkAqpXP/PswsVeeE63IQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pj7fc0aj3x9y4k2xhn5vqxyxeafqduuyegm5a3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1814","1","1","g1pj7fc0aj3x9y4k2xhn5vqxyxeafqduuyegm5a3"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtzFrXyxQVYQ/H1Ug762ISYu+L6+ZPh++EmkM75k3hGC"},"signature":"3HzMFiM16PyKdyzOWlaTBkWJvc3+m2e6ggjFs/Hpc8oTskscYvzC6Yxi8B5RzY5augDnzDK+BNDZe7vfiVLOmw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1gzxssw7xjq5k8d3vp34w92yg6jwwy3fzfp50qw","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ovaQR+ZvGQBDwUmjVdYWA0wW3vGMddMRXopCG5TWnOFsrBP8zxO9fJV5ispXzgY9lGY7SVeVUkrkz4KLX5SMpw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gzxssw7xjq5k8d3vp34w92yg6jwwy3fzfp50qw","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","tinybeltk8",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmTiYhCc4W8xobE67RtchIjbDjuolehy9wXsXiOU6DZH"},"signature":"yg+Pt9lzhhI212QzchLlPWKXA9RyLEsTzAa9m/uN85EXTJgtr7BqBMzAFpIeaf8CVlowREgAINwY5+Tjd3Xt/A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gzxssw7xjq5k8d3vp34w92yg6jwwy3fzfp50qw","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["tinybeltk8"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmTiYhCc4W8xobE67RtchIjbDjuolehy9wXsXiOU6DZH"},"signature":"nSkGfeVBVUSqqWfrpF7FmUJAS4KC4ibNGE71XsNh7Iw7qNG+N7VauD0E7picF1lt6Umpwzm4nqlUEWuZsMwn1Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gzxssw7xjq5k8d3vp34w92yg6jwwy3fzfp50qw","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1815","tinybeltk8","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmTiYhCc4W8xobE67RtchIjbDjuolehy9wXsXiOU6DZH"},"signature":"oW6zm3m/8xlsAyeycpt1vNxP5/SSTHOYjVsIi7q/r79PeaLS9d1YfaWPeio6NHHfYAArQYGYN14i9zdi925YZQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gzxssw7xjq5k8d3vp34w92yg6jwwy3fzfp50qw","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1815","1","1","g1gzxssw7xjq5k8d3vp34w92yg6jwwy3fzfp50qw"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmTiYhCc4W8xobE67RtchIjbDjuolehy9wXsXiOU6DZH"},"signature":"IB7ZeuhbPfIwJ0/5I2CRB9xhNQo2AkiV5eQU7m3pYp0SNZNofHQjLIkBOGCQfQ3xz0miEk1y9Y4h78UNpThXEw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1pw0edze36h2yug40tf4rvd072gyhg7gatyxm2m","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"MNYiADihfL6CxntTBPtiEEgZhP8XvANmcoaEa0E2vD4rthnRmSPt7tWC1iLDVeWv4fUA5E2wZXmTbT1uezdkdw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pw0edze36h2yug40tf4rvd072gyhg7gatyxm2m","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","meandiceyu",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoVGnuzqVZ9rGMaz6vBbGQiWY7GuOyRuSGObBrKSbdUs"},"signature":"XtyrubdMVp1dQJpZ4Lt9iENWsTLRK5h1ADsyPstll5g5vzyPBgm8p34mSC8rVAcWaQGjOibV93TMw7p5AMQuIA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pw0edze36h2yug40tf4rvd072gyhg7gatyxm2m","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["meandiceyu"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoVGnuzqVZ9rGMaz6vBbGQiWY7GuOyRuSGObBrKSbdUs"},"signature":"Wv0PUkpy3IeC1kuak0L7wM+Wgy/agjCifFRGzhWy6mQw2H2dnyctZ1xTCcbErxwvKZeHCGgFZcx3boKuYLGgYQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pw0edze36h2yug40tf4rvd072gyhg7gatyxm2m","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1816","meandiceyu","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoVGnuzqVZ9rGMaz6vBbGQiWY7GuOyRuSGObBrKSbdUs"},"signature":"ctIIPsWDfoDNverIW3ZpgxrgDrkMvICehtl/ZrY3HtEJT/UcaK5v+jasErZk3FLQaNHRu79VmeiynfAZa3j6jQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pw0edze36h2yug40tf4rvd072gyhg7gatyxm2m","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1816","1","1","g1pw0edze36h2yug40tf4rvd072gyhg7gatyxm2m"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoVGnuzqVZ9rGMaz6vBbGQiWY7GuOyRuSGObBrKSbdUs"},"signature":"VQeJQwRZZ/ojodKHlODbWZKvmi68WZ49PruBBjV9RYhn77yP+2FzGmVPZ17C5AEF/IT6ArE+fOdND8I1OVJedA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g10e6svlk9c2uzet46rsjlhqpx7k4g9yq2ffx3jm","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"bk33Qi0FzbsrGjn5wrYN7omaRIGHz9UkifPUC9hqoLcSV7ZhNi0eJB9IdgLWj+cSYeynt3D/Z9Shs7GffpXXIg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10e6svlk9c2uzet46rsjlhqpx7k4g9yq2ffx3jm","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","orbitembraceze",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AopZa7JI/llVNkm1GMEJGHrwDjV2SW7hL/XZArsU9PBT"},"signature":"S+La5ngC+nn2Yp/MnsscvgnrIho2vk+QHx5iZYi8IKFAXoX8yhyTnKIElVHFKKnjZqbOZZtTAO2eZ+pPn3wqSg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10e6svlk9c2uzet46rsjlhqpx7k4g9yq2ffx3jm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["orbitembraceze"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AopZa7JI/llVNkm1GMEJGHrwDjV2SW7hL/XZArsU9PBT"},"signature":"27jTlLnb1TZjwdx6t/r5Yk3RBrHdwi0UyjIlOD+we4BmNpcadg57byunouvUPtHhry6WR1KXxHoYo3dnVdHhRw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10e6svlk9c2uzet46rsjlhqpx7k4g9yq2ffx3jm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1817","orbitembraceze","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AopZa7JI/llVNkm1GMEJGHrwDjV2SW7hL/XZArsU9PBT"},"signature":"3uuS/RSGA0LtBRD7aw28ccpkMH1sHUXgiJL9/YwViqMoe6DGERdlwnacn63nlPItl9EdPC/roNkssMnFC8pW6g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10e6svlk9c2uzet46rsjlhqpx7k4g9yq2ffx3jm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1817","1","1","g10e6svlk9c2uzet46rsjlhqpx7k4g9yq2ffx3jm"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AopZa7JI/llVNkm1GMEJGHrwDjV2SW7hL/XZArsU9PBT"},"signature":"mxk9pxdmEgoZaFAjKUOTjIeBhHVVqtEBIcWFg5BKjJEmNA0EgAmiNTrueKDAzO0ECL8IpJAWf8pVCi7pCyaWHw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1z6ks8q7ggmuwf85t30ps8trufv5vs8pzzue524","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ynrp8mn1IhgKvLfJMFo3u/swRE2vz+aqPkF/LaiE8yRGDUOG5o90dB7ocW6I9NjkX+lj3XF5K4KVtRsQPXZxQg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1z6ks8q7ggmuwf85t30ps8trufv5vs8pzzue524","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","copyhusbandwf",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8FGQAawVHvv8mKT+Bzesn4pqjCQpdn8jvFor46+OOIz"},"signature":"yhjd6LMFubxDPmw/4NHjYXQn5e5dOB2pXrAEyAG198VZH7+VQnHVeMqX7XxlDg3Z85o+ygGkwGULYVZfz+CSCg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1z6ks8q7ggmuwf85t30ps8trufv5vs8pzzue524","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["copyhusbandwf"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8FGQAawVHvv8mKT+Bzesn4pqjCQpdn8jvFor46+OOIz"},"signature":"nqJvHG52X4l+KWCAiJ6heyLePtUF+7CM3a5quEWKnr0g/19rnYNpYTHudRgjd8uqI9AfwSxOGvndSyhYVJuwJw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1z6ks8q7ggmuwf85t30ps8trufv5vs8pzzue524","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1818","copyhusbandwf","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8FGQAawVHvv8mKT+Bzesn4pqjCQpdn8jvFor46+OOIz"},"signature":"Q25W/QqaqesImVtL4XtwKdRldUZWbYanKhgVBb9zUel673hb76f/TCIODDjOet7iUammdW3w+oFGElg4pOySKg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1z6ks8q7ggmuwf85t30ps8trufv5vs8pzzue524","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1818","1","1","g1z6ks8q7ggmuwf85t30ps8trufv5vs8pzzue524"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8FGQAawVHvv8mKT+Bzesn4pqjCQpdn8jvFor46+OOIz"},"signature":"kZ2GYFjLOQ/2nUxBIKJHxBSWliVkhdg33vPXz8ONzgV3o1D6AnW7ksKfSSLIht7OKpqJO1mzjGz2cx1qT8v0fw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1jd5cp7pm4wdzgvrreaff3e2kfs09z2lsgt5zp4","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"NEK4k8aEXhgMOjsuj5djAzEAcRW9aryxzHwpQPDeIzAGfB67cap0d6fVOKjEdttuL8sFp3lECahQPmMOUzKplQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jd5cp7pm4wdzgvrreaff3e2kfs09z2lsgt5zp4","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","rooftipzg",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkBdXnBwL5irsQrES+TVf2hcm0BAVMXNGqXCj31tJ7wj"},"signature":"GzOCwoki1hyCqpk1C3NTPi74sDpFkqOQDnCNJtW8gA44zXqHKCAzf1QbwzgVvE6KDNUUkAL56V1pU69wf2iX1w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jd5cp7pm4wdzgvrreaff3e2kfs09z2lsgt5zp4","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["rooftipzg"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkBdXnBwL5irsQrES+TVf2hcm0BAVMXNGqXCj31tJ7wj"},"signature":"GP7jik3Dg9aUS/pMjkx1UGqGL1SlhrqPTFcer+YHwVhcmITPqWqEzcIq2hmvx9hNmM55Rxy1jpyXfT4/+AiAVA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jd5cp7pm4wdzgvrreaff3e2kfs09z2lsgt5zp4","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1819","rooftipzg","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkBdXnBwL5irsQrES+TVf2hcm0BAVMXNGqXCj31tJ7wj"},"signature":"7GrFAgWJ9Sfdp+Q+LA1z6LywYzqFi+S6PBVd3NA6EZUnereAbrQNqEKmyjlQsuyeeBYJKXqDBL0KFsdU68hm9A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jd5cp7pm4wdzgvrreaff3e2kfs09z2lsgt5zp4","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1819","1","1","g1jd5cp7pm4wdzgvrreaff3e2kfs09z2lsgt5zp4"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkBdXnBwL5irsQrES+TVf2hcm0BAVMXNGqXCj31tJ7wj"},"signature":"FkSp00z/hOZRGxpgbL4WQBofyvFcl+Z2E+dmn0erJgdDBeofpBB2sGYEta1LWBYFCKiFhg5kByPVxe6BVQt8qw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1kuqd8ahfze2jsdt82u3h09q2fzctxq0rzhzcac","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"UNzMVc9oatzqhT3xlVoghdEbDTM/gPMRotwyVXR7cKsruCp8loOBjww4yNmtZQytl+PW68zYkBjIvW0va82Lbw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kuqd8ahfze2jsdt82u3h09q2fzctxq0rzhzcac","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","treatuniformjs",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AriZLFoJL2V8EcmUtr05iv7hI05LySR8GQ+Vhye4fVwU"},"signature":"Hx0Ds++dWzQx5W6m2FPp5A2JyIGmBBsyzK9b7Zyvv09L+dAdasjq+C+5OHvYXtolsiI4E7uV78IOpBwS+g4vhg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kuqd8ahfze2jsdt82u3h09q2fzctxq0rzhzcac","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["treatuniformjs"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AriZLFoJL2V8EcmUtr05iv7hI05LySR8GQ+Vhye4fVwU"},"signature":"Cqd9nPyfX4TrErJ6bHNjiaDpfEvAWNXWniBNqBudOWIu0EvzULVy1HxUVnSjkSSR1Nq2hQC3Y6AItu5gmHoEUQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kuqd8ahfze2jsdt82u3h09q2fzctxq0rzhzcac","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1820","treatuniformjs","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AriZLFoJL2V8EcmUtr05iv7hI05LySR8GQ+Vhye4fVwU"},"signature":"+dJUAqE513ZvGjcvg/SIfi1J04J69iyzaF0poT12y3RTNyccJlt6zJtqizZEhPOsosx3j35MAq/aNxu4yHKQvg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kuqd8ahfze2jsdt82u3h09q2fzctxq0rzhzcac","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1820","1","1","g1kuqd8ahfze2jsdt82u3h09q2fzctxq0rzhzcac"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AriZLFoJL2V8EcmUtr05iv7hI05LySR8GQ+Vhye4fVwU"},"signature":"w5NYlpif/SNE0Xlt2iMwPoGyO8ljwysROW6AhYWBkOcBEKljcMSNQwWLWrLBFYjd6Y93Q8TEqmURFo4S3qVmVg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g14mg5ry5jwc6yh42jjead0g5zqa5afjt3n9d45p","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"NUzBFoEu8I5XiB6IDkHe8IPLB+tYNX06PMM9VyEKR0wy2qfHxpSMLbsU8OY7LG8YfDD4m0RD8IBgM6S1fW6q4w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14mg5ry5jwc6yh42jjead0g5zqa5afjt3n9d45p","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","zonenewsyh",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Apz4LUyCZndqv2cBzEOsQaewSRgK9XviPVAQjAz8fjBX"},"signature":"TeNpKbU766kieaAMDHwTpCeKRg/DwVkuG1s8VQwfbHJWNXTxeAEjtcQGMFhDQ1Cs7crBMOgRS7HhKRd0Ot9HHA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14mg5ry5jwc6yh42jjead0g5zqa5afjt3n9d45p","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["zonenewsyh"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Apz4LUyCZndqv2cBzEOsQaewSRgK9XviPVAQjAz8fjBX"},"signature":"AeT4NnqTr58AwjjKc3e4fe24tDep2Gor8o5ypLukYSpqKvuddP7+UA0APv+9u3kBNAyGD1EjK1BnoEkY3hBKaQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14mg5ry5jwc6yh42jjead0g5zqa5afjt3n9d45p","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1821","zonenewsyh","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Apz4LUyCZndqv2cBzEOsQaewSRgK9XviPVAQjAz8fjBX"},"signature":"61wNhR0O7C54dmwG/sy7yZSqtfsHMvktOf2fxZ3znjAIu/x8Za2KsIm8rDjPf352QuzxC7a7Aakc5pzwlNr1UA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14mg5ry5jwc6yh42jjead0g5zqa5afjt3n9d45p","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1821","1","1","g14mg5ry5jwc6yh42jjead0g5zqa5afjt3n9d45p"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Apz4LUyCZndqv2cBzEOsQaewSRgK9XviPVAQjAz8fjBX"},"signature":"hNS7bO3zo9LDoo7F4rbQEzm1pO0hkjVZoRHskEIhRjk3Z0LWB4c6kAejIW5O7vOEATnG0cxJ0uEtBVT0FuD6Zg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1fuf47gstsmg7wth6u9vyeth7qgnwmr67mjqgpr","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Gbgli/WY2ZWUuRbxOFgmHy/1BGHZUi7DxYlWmn7AxQ5GGI6oyYcllK4oL/Gy/ZFMpvqFV2M9Iuj0OSTtX/pi/g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fuf47gstsmg7wth6u9vyeth7qgnwmr67mjqgpr","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","ovencapable7w",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AsjRmv5ZUgFBABM7t19+F8iAxugk2acQBKBNui7WY/40"},"signature":"aZn9sH02Sjg+3R83inRC1LXaHOTbZvS/iZEoY5+EgCFyIEhSBrHPI4Mnoqy76f0wOTJKrffKJNZ9tGBXAOUN4A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fuf47gstsmg7wth6u9vyeth7qgnwmr67mjqgpr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["ovencapable7w"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AsjRmv5ZUgFBABM7t19+F8iAxugk2acQBKBNui7WY/40"},"signature":"pdshOGg59MAzfWP6I20iJbHYKNTXvQmEnGDxhE4zLWE2Hv8Jx8TpQ/5qlMXxxnSljSgQm04xmLWgi/n/z9MikA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fuf47gstsmg7wth6u9vyeth7qgnwmr67mjqgpr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1822","ovencapable7w","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AsjRmv5ZUgFBABM7t19+F8iAxugk2acQBKBNui7WY/40"},"signature":"EmAxBVfPBzcIhOhtsNTcYGtLCVsBpiJPMiwPL3/Msck1eKFqLoF8GJZcXuQj2t14iD2jqWm8mfDiQxmkihRTwA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fuf47gstsmg7wth6u9vyeth7qgnwmr67mjqgpr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1822","1","1","g1fuf47gstsmg7wth6u9vyeth7qgnwmr67mjqgpr"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AsjRmv5ZUgFBABM7t19+F8iAxugk2acQBKBNui7WY/40"},"signature":"Go0wAOXYJvOkV3DlepSpgwB/1m4/pWEtBfa8DPr2oDsF5Y2kS0MtTBBHrBBCp0mWlf2ip4aDvlYhp3ruXDrrHQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1xl7lnf6fd997360cgfygxrv7kvx3vs6qqfxx2p","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"bBsk6OFumfl2pNXzFC9SLCT1Knu4NN8B159n+Vc7li9ky5q5lck9uNpk/KurB71qge7nBOKUfMPpOkgfhkFcsA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xl7lnf6fd997360cgfygxrv7kvx3vs6qqfxx2p","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","scenedescribe73",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqQnuVjilDlMZGfgpMpcbUtcYkYSMvM6bILymiY4H63V"},"signature":"HjU04sqeDwlJQhgpYVSesCbhSWmZkCok5H904gbELmUB5MUBRV2mSna9ya3M6iQHlDWD73nApeu2ebI8dQYfSA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xl7lnf6fd997360cgfygxrv7kvx3vs6qqfxx2p","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["scenedescribe73"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqQnuVjilDlMZGfgpMpcbUtcYkYSMvM6bILymiY4H63V"},"signature":"pe08xTtoA0HCb/z9jAJ1buBkMRkKodOWmmRxEZxkVKFHXSU+bQJec7pznK2ftNe4aDPxEYjafG6KEZDr3m/EyQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xl7lnf6fd997360cgfygxrv7kvx3vs6qqfxx2p","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1823","scenedescribe73","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqQnuVjilDlMZGfgpMpcbUtcYkYSMvM6bILymiY4H63V"},"signature":"7ftJEib/3fW6CBSqsCXXakYUkTWzrl4Y1PArEtd1JcI4fvEt7etUMvE9PZ9oZGIY9GXIdcpvi2PBMptFPkmj3Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xl7lnf6fd997360cgfygxrv7kvx3vs6qqfxx2p","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1823","1","1","g1xl7lnf6fd997360cgfygxrv7kvx3vs6qqfxx2p"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqQnuVjilDlMZGfgpMpcbUtcYkYSMvM6bILymiY4H63V"},"signature":"xS4cv8qV9AEpI1VfUKDP4GPLj8duCKJHzqMCCH7uGHhzM2ysJg0ce6Vk9vaV9lpByOF6YsJkk5TpvZt3c8fXEg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1t96vf5q93knjt70mgppagkgrm4u9vpysdqt8t0","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"DAKwxa524ZGNQTcCc8kbF+VqRiWsrtMBZps4eNEQx35FEKV1g9CLH5+a5+wV6ngfWQJkd7+/TGcTuHsWnsLpwQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t96vf5q93knjt70mgppagkgrm4u9vpysdqt8t0","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","slamtransferjt",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AumzMe+W4FHkVNehSOIrqNVUGiH/GUJ6FdkeEEsFrO0W"},"signature":"cduTx/mUlSs/FPzqe8pAX9tKZrJUy2QShQzbB2y11yt12dwrD6fLo9DxfqPND6o6GMPqIH5xB1k6fh8ZO7MuiA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t96vf5q93knjt70mgppagkgrm4u9vpysdqt8t0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["slamtransferjt"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AumzMe+W4FHkVNehSOIrqNVUGiH/GUJ6FdkeEEsFrO0W"},"signature":"+VAqr9wLyjxC4PhJZe69Vbc1CKXVQyj1bDJdUAjboVEhlBNS4Zvboyq40V/+YekLslrfhMbU8CXJjI3mjimPqg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t96vf5q93knjt70mgppagkgrm4u9vpysdqt8t0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1824","slamtransferjt","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AumzMe+W4FHkVNehSOIrqNVUGiH/GUJ6FdkeEEsFrO0W"},"signature":"BY1zebL8d3PyrWGElzTSRYuNmTrR4KBBTfVaRzB5SVJC/pfRUb44p9jnCRdpD8CqVgbVKRB5a86iWsae1Nul9w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t96vf5q93knjt70mgppagkgrm4u9vpysdqt8t0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1824","1","1","g1t96vf5q93knjt70mgppagkgrm4u9vpysdqt8t0"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AumzMe+W4FHkVNehSOIrqNVUGiH/GUJ6FdkeEEsFrO0W"},"signature":"a0vWCIqbFs2sb4CShqLPXjCFyWZjqyhhdnHoOjJp5pQzi0DMEUh00kMSqWFfpdPUdAkb/pkndS8N8vo5s0u3mg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1dch5vql02qq0dgj7s8pv7c32yxcrvxvq0czehx","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"/YrgLS53favit+JBaCZ/9GEmYZl1CouZhTVUVtkrDdgS2OTwI5Bx1RKM9+fS384BtX2I+vz+Xx41db18SNqLDQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dch5vql02qq0dgj7s8pv7c32yxcrvxvq0czehx","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","gardenbread0d",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuEF2gPtQAl+jqTMjqjBNB8anAxK2jMtShKGuDLu7LfB"},"signature":"rNFZam93Uf42smUNS40HwOL/v3I6EXDyd5C0lp9UCm1GbOGeM0mNeWkm99PLFGQQbUZFx7RD6CQ4b/KpEpv4gQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dch5vql02qq0dgj7s8pv7c32yxcrvxvq0czehx","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["gardenbread0d"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuEF2gPtQAl+jqTMjqjBNB8anAxK2jMtShKGuDLu7LfB"},"signature":"rHy8vL482fVH2HTPk/+k7BbvyJ4NmTUvP/9HQ7IrJP1qyNoSc+zUPRWqU5VWPbkK2EGMWrGrUsVhaMvoZR6r4A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dch5vql02qq0dgj7s8pv7c32yxcrvxvq0czehx","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1825","gardenbread0d","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuEF2gPtQAl+jqTMjqjBNB8anAxK2jMtShKGuDLu7LfB"},"signature":"IpYiMaY+60/fhkV5GbEx/tdwLCK0qrdtypaXNENRGU1NOQDGuv54nb+JbU65udRmHR/by/gxpF07Tm2IjW9gdA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dch5vql02qq0dgj7s8pv7c32yxcrvxvq0czehx","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1825","1","1","g1dch5vql02qq0dgj7s8pv7c32yxcrvxvq0czehx"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuEF2gPtQAl+jqTMjqjBNB8anAxK2jMtShKGuDLu7LfB"},"signature":"4p6LqAw/1Ufmu8nyzfWmGhK/9DCAvbNFrPiD9gxyNckclsHzB4CgBq6aqGKYgXeAQfExwONW4LVEvznLjkGfUg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1t09p864m79vw8tzpd4y3dq9edm9jw04ys8wwtf","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"1VDv9C+33PPyTJvI0Fg7SggfOuhvQMZ4cAsPrXxcsMZ7iVmirY657LauPOS/kOd/3n15j9bYPda13G9fXv92tg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t09p864m79vw8tzpd4y3dq9edm9jw04ys8wwtf","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","soongaugew8",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtyEdDUrdMKGGZRGem2GJ75T0xl+epQ7DAuOrEWayqlx"},"signature":"PHXUjY5zqHWk6tzLagZ75rqRqgPgwB9hyMZTmfS3c70KtfkrtNRLx88LfBCc9U7fa3CjJ/PQbyr9exwegD1Ftw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t09p864m79vw8tzpd4y3dq9edm9jw04ys8wwtf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["soongaugew8"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtyEdDUrdMKGGZRGem2GJ75T0xl+epQ7DAuOrEWayqlx"},"signature":"rsvblZ+LNtw0YLJjOnoO8GR3nmfCzNW61XbF4uQnYL9PozeJY6ql5w3j2yA7oc+5P4w7UkBUP/wcxNHG6sQo9A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t09p864m79vw8tzpd4y3dq9edm9jw04ys8wwtf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1826","soongaugew8","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtyEdDUrdMKGGZRGem2GJ75T0xl+epQ7DAuOrEWayqlx"},"signature":"sOTCMnfHRjtRTW6rrfEBiWlc14+aFiNyFDlEwHpq3jF01IMBpO809jScvxpyrFc9xet0CY17QP6D1NFd8pAZcQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t09p864m79vw8tzpd4y3dq9edm9jw04ys8wwtf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1826","1","1","g1t09p864m79vw8tzpd4y3dq9edm9jw04ys8wwtf"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtyEdDUrdMKGGZRGem2GJ75T0xl+epQ7DAuOrEWayqlx"},"signature":"kcc6HwF1s8JD2hUz+EpDMyQVNR+bd43IE5FH8r+SmvgvgCWSJml2t+6aorrU4UnMGVjkb7w2+Y0bOS5tB3fZaA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1760asxlff7j628jd7us8nd8lgz58nac7dxuzjl","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"lcd+L07VxuKOIaLV7k0Ya52HKZzcfyBi5aIQPAPQhAoa63FvEqtlhBaivNESqemeo0fw5I2d+B4XhetLsu4U5g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1760asxlff7j628jd7us8nd8lgz58nac7dxuzjl","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","voicerequire62",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AzRcZHdrd/Vw9ry9IP+bbKXu/3oJIvqC2MdA5pyQ5fHY"},"signature":"0Mnx6Ns4hAKmPEKg0PszYXWr2cqojclgM9hQ5hI62uMQyBljMxjOmu0JVfucDicEs1GrLMBAF2qj1rOJl1v9cw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1760asxlff7j628jd7us8nd8lgz58nac7dxuzjl","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["voicerequire62"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AzRcZHdrd/Vw9ry9IP+bbKXu/3oJIvqC2MdA5pyQ5fHY"},"signature":"rNe8Zm9WDp8bDqoGYfX38/qPEhyX/TXIZx7LMWJwT9tGPeF4GwSPmH5ELg8Ly+L019QWfnE9dBOoBUYjyIWgkw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1760asxlff7j628jd7us8nd8lgz58nac7dxuzjl","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1827","voicerequire62","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AzRcZHdrd/Vw9ry9IP+bbKXu/3oJIvqC2MdA5pyQ5fHY"},"signature":"6MTl/95/FFJvG6xPqNRNUSwejEz6zgoP9eyl46L9xlNChgQBg91wh6MwgRyOMtT95EwM8kXiVwXdIyFxwq2/zA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1760asxlff7j628jd7us8nd8lgz58nac7dxuzjl","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1827","1","1","g1760asxlff7j628jd7us8nd8lgz58nac7dxuzjl"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AzRcZHdrd/Vw9ry9IP+bbKXu/3oJIvqC2MdA5pyQ5fHY"},"signature":"ct4YvoWxy7+HTSER2gT3rGAXahDDx/W8kTLMOPLe9Op0YUDr5cFwDkUPVhiazs0Nl9SQdTg9PB4mw3g9dWNMpg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1ufg9j35x98r7r4dfqj37n5wpuc0ys3rm79zjj0","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Qg/+efnjqGmruZycrv29X9MW4B5fAIhbevM0BoFmszBogX+P03zHOtlkBtf8HhDd1hKdCtcscuDqdrUzD2xA0Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ufg9j35x98r7r4dfqj37n5wpuc0ys3rm79zjj0","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","fancyswear7r",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AumkNBhfKBXOpSuBwV6tfUP7x0Raix+vB6B6keVCjiMp"},"signature":"sFCqg3vR1g7nE2pT8owJIUpJ0LRAXzu4P+uKB5PIJgVKA6UbpEmYVr1QHqjZ9JOwTSX0mVXo1RBqM3Z6VgbVrg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ufg9j35x98r7r4dfqj37n5wpuc0ys3rm79zjj0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["fancyswear7r"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AumkNBhfKBXOpSuBwV6tfUP7x0Raix+vB6B6keVCjiMp"},"signature":"ZzKmNoHExMTP2a9veBvFGUhgayB04psjVWohpi7ty8Z2AMQZVT1MdwuWbhEVN6ebV1xm3w7CKmtH8s+KiR2iVg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ufg9j35x98r7r4dfqj37n5wpuc0ys3rm79zjj0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1828","fancyswear7r","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AumkNBhfKBXOpSuBwV6tfUP7x0Raix+vB6B6keVCjiMp"},"signature":"p0EkAph/GUjyFYbUactleUJ5+nFX1axr/MidcgXnuPJ1I6TDruwt8H69DfJLm7yjObbfp9BoGBa3AAYzCIewFw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ufg9j35x98r7r4dfqj37n5wpuc0ys3rm79zjj0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1828","1","1","g1ufg9j35x98r7r4dfqj37n5wpuc0ys3rm79zjj0"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AumkNBhfKBXOpSuBwV6tfUP7x0Raix+vB6B6keVCjiMp"},"signature":"UDuma1k6bYsysArlfkCm+XN2aEv4mFsIvf4m9W/6GmwvTGMACEoI9n4ZyBG1dL/No2vF+9u2Jg0JT552Dio1Vw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g15jqupta55n8uwn506nztewd9yl7aylg6u8xxtn","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"NZDHPMA7JiNGV0Q31Y727Uauo1okYrgqe0gznERqNJIY5OOEAi3M2xgB+TTmsa0JwlNoYj6FG5slT+kyzVFklA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15jqupta55n8uwn506nztewd9yl7aylg6u8xxtn","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","shiptossuw",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aolk+1m3TrcXnB+y9Z67D3csKpaqAB1yW9HhvXNNZgU6"},"signature":"5PcnIAVSvyPSv0HDWXf0/Y1w4cYkDjpFMspx9TSVmcluKQ7i2U4Vq/oizufQyxeLJGOmlPZ6W51VShO9wa0AFQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15jqupta55n8uwn506nztewd9yl7aylg6u8xxtn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["shiptossuw"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aolk+1m3TrcXnB+y9Z67D3csKpaqAB1yW9HhvXNNZgU6"},"signature":"NEg5Mds+sE3jtowt/NulBQR8SJcfSCrVwctf7csAGokVl8KRepN0pIvl8oq4g7hCor1/hwb8tLOgjQjUAMchlw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15jqupta55n8uwn506nztewd9yl7aylg6u8xxtn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1829","shiptossuw","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aolk+1m3TrcXnB+y9Z67D3csKpaqAB1yW9HhvXNNZgU6"},"signature":"CpqTn2oxwxMJWUqMnTvGfjOOWXLnNXtjdb/yS+eW3WU7kkOvnnIM86O3KW8bU6QjJQfTMb+L80PfO0xb0/klyw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15jqupta55n8uwn506nztewd9yl7aylg6u8xxtn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1829","1","1","g15jqupta55n8uwn506nztewd9yl7aylg6u8xxtn"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aolk+1m3TrcXnB+y9Z67D3csKpaqAB1yW9HhvXNNZgU6"},"signature":"77FZHl0giasqomXLig+qH3/IuAJKyeiy9Fp5B0bkF9UQTdri2iUP1Nt1cT2zYUiai73PsVUI+5K/PHH8MTpCFQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1lf0f40a2t7n97v86xqj7z3xcskck7x99qvt3ja","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"79ivEFVzEHn4ORj7Kps6O2XS54INcwrIgKYcf89/LJ9BkdZ+Ef5t5mRUeJ3pivagjMUdJXz9Cgtx4npQpGk1og=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lf0f40a2t7n97v86xqj7z3xcskck7x99qvt3ja","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","latermean97",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgjlOy8/o+nz6w2t1GZl67V2qQ0smMQ9pYu6bcCCB2Wh"},"signature":"HTaD3HkswawtXocLsoKSg/j3/vfFaISRrxEgBZ1Pf8wBbAWULozDS6GM75NTkp6/vkBamMSYlhKRgfZ/cZwgtA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lf0f40a2t7n97v86xqj7z3xcskck7x99qvt3ja","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["latermean97"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgjlOy8/o+nz6w2t1GZl67V2qQ0smMQ9pYu6bcCCB2Wh"},"signature":"f54tgaSxqGWTILFbUuu9iqPo2gZhrjp2rmz5D6KuCwQZrsz0m0GdRT5qp6bvvv4ciFev1JIBiGtZVN1MBbk2yg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lf0f40a2t7n97v86xqj7z3xcskck7x99qvt3ja","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1830","latermean97","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgjlOy8/o+nz6w2t1GZl67V2qQ0smMQ9pYu6bcCCB2Wh"},"signature":"aT0gnxIk4n667zMI6tRk40K9vLTOUAwDWoshm4MqhrRHijfZPT88O8lRz+QXZkSpvMthYTuuV+OQiVmYEi6czA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lf0f40a2t7n97v86xqj7z3xcskck7x99qvt3ja","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1830","1","1","g1lf0f40a2t7n97v86xqj7z3xcskck7x99qvt3ja"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgjlOy8/o+nz6w2t1GZl67V2qQ0smMQ9pYu6bcCCB2Wh"},"signature":"qU1Z61uGQ5hr0R6NdFqmndR7hr3IRu7105tYyPeEbzYoGK8L01nJ30cPt6OOISVfG/InPZPqqzTglGuX5i10zw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1c493pyklguq0uxd8z2law58836rspmn4pm5acg","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"p6CYR0+436WfQmyPf6Zicn59sTgzYDVP5n2MGjtW5Sc7Uk3itlUdwal4ypiN3OvyX6VKq51Mn+OrnF9Vo7rweA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c493pyklguq0uxd8z2law58836rspmn4pm5acg","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","verbresult0u",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnG7kdVovMLwBAS243HkxS/GBwqzyQ47UxVY2fPnATMi"},"signature":"hb7MJKqR/h/2V08cIQmwVtszYz6yZNJ+hKsou5m5PSwbEGTl9jJEIIPWqWiv0avbTqp367f/p7XEdFwf9mWkhQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c493pyklguq0uxd8z2law58836rspmn4pm5acg","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["verbresult0u"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnG7kdVovMLwBAS243HkxS/GBwqzyQ47UxVY2fPnATMi"},"signature":"VM679gJ+ZHeW9BV4PHxQE5ZEAIMrvNpt9EqFEd6EPvJCpTSjnMuS8zoK2YrqquUJv7Srl/uDkBNtTzoJv9RDmg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c493pyklguq0uxd8z2law58836rspmn4pm5acg","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1831","verbresult0u","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnG7kdVovMLwBAS243HkxS/GBwqzyQ47UxVY2fPnATMi"},"signature":"HyjugxvlLRlupJJmz43VNwoGkzNfloa3edj7vfnnpLpNcMO+oeGsrFm3Uba3x9gQ/O7no7Qz2LX2HUUzNRMeiA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c493pyklguq0uxd8z2law58836rspmn4pm5acg","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1831","1","1","g1c493pyklguq0uxd8z2law58836rspmn4pm5acg"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnG7kdVovMLwBAS243HkxS/GBwqzyQ47UxVY2fPnATMi"},"signature":"fHg+oO9VQ2IVS2gChdvJCy04D5S1zbOrM57yDKGcQahlDRDt0kC3dNWhhSV3YNEKjjBWCX76bdZr8569Kdnz1w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g14qf7mzrjuadvnu4lkce3ck90h9lkhn4jjdltzc","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"VJEq2MJv5h5DsO1Er+iG94+cy8CkauIwacOHfRFsJ5xXV9ISp3nOVqd9xC5Q6Z7pLUeHOqFHdpvIV7E9zrUShg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qf7mzrjuadvnu4lkce3ck90h9lkhn4jjdltzc","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","racesubwayvn",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8jofzZRFC/iMmwHiNK1VKcaO3giTklKvIlYBJWS2Z+B"},"signature":"OdAv6N3hrxWvqI4Ea9NcvWJ3h7sHH/iIeHglhaeJFXA7SvFm7voLuThb8ppjBillKi3+z373vfmd0C4qAF+A+w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qf7mzrjuadvnu4lkce3ck90h9lkhn4jjdltzc","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["racesubwayvn"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8jofzZRFC/iMmwHiNK1VKcaO3giTklKvIlYBJWS2Z+B"},"signature":"VSo+HLEZywI5euQL1ZY1/RfJjTCyRwT+5sdPohJ6psklWRpCBZ//KMTpG0fmEWMiD5IgtSgRrUyHKFxW6Ap8zg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qf7mzrjuadvnu4lkce3ck90h9lkhn4jjdltzc","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1832","racesubwayvn","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8jofzZRFC/iMmwHiNK1VKcaO3giTklKvIlYBJWS2Z+B"},"signature":"Vih7fM2lX6s5vc7SZpJDD2OP0DZVxRUZ3tjwfxm9O6lmCAf0nDQFI4xT3l59Ku/jrVxfDXonlwOOhQ4CiHaEPg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qf7mzrjuadvnu4lkce3ck90h9lkhn4jjdltzc","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1832","1","1","g14qf7mzrjuadvnu4lkce3ck90h9lkhn4jjdltzc"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8jofzZRFC/iMmwHiNK1VKcaO3giTklKvIlYBJWS2Z+B"},"signature":"yTECUAKQV6qbgJTfSfxJyf6DRY5+uv0Wzj/Iwra9cVAIq4FPiqXUrlpGeClPX44N7LriA0HEx5sETOM/O3APXA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1e5vwr9r7k3lfmck6s6k8726yhtd46pmy8u3wt4","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"vckSlmHtIER3FnbT1aJL3hG/DTfRwn+BexIlEY0bcu8t+FkhMWH1X7K2/RKyrEJ1hKUmYlTfNrxfCvDc9IlQIw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1e5vwr9r7k3lfmck6s6k8726yhtd46pmy8u3wt4","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","sportbetweenfm",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxHE4QWrK2gL/qZpFxTYbsTVVrZMG0rpB9pm7Ifjycnk"},"signature":"LtdUcKmXF90U+qGvSbbTl4eoIBzsTft9V4g8EKcg0ycY6vT3iRZgeBU1+KtlVq4C3XM4mfnvEP8bJDCyp30+4w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1e5vwr9r7k3lfmck6s6k8726yhtd46pmy8u3wt4","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["sportbetweenfm"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxHE4QWrK2gL/qZpFxTYbsTVVrZMG0rpB9pm7Ifjycnk"},"signature":"TJ1a6l61duJW3G1BszrjjTLhcR4mOD/LzGzSn5NcpV5QFIgF4Bm1g9ogTD8snSBGjiIlkdrgAq8fogVoZ+VtLQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1e5vwr9r7k3lfmck6s6k8726yhtd46pmy8u3wt4","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1833","sportbetweenfm","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxHE4QWrK2gL/qZpFxTYbsTVVrZMG0rpB9pm7Ifjycnk"},"signature":"xlixwhpMoujCetFQ+tk7NG41pXai9OpsYDtxLLqC8FwW5+T8W/ApZnfj8gAcZIsnpTmTFvgjW/D6t3qzA/x6Yw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1e5vwr9r7k3lfmck6s6k8726yhtd46pmy8u3wt4","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1833","1","1","g1e5vwr9r7k3lfmck6s6k8726yhtd46pmy8u3wt4"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxHE4QWrK2gL/qZpFxTYbsTVVrZMG0rpB9pm7Ifjycnk"},"signature":"4zOk5kIpFqzvZVOS8vlNTC6GrSryfISwwQbVV+MJg0Ix/A1VLoB8YBWZNAuWlttG3+it01NmUEuNZW5KMwnNgA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1z96lycru7ua22jsunw7t3jqcmvkwf2vfrt0gwu","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"qPx+026KQX07mM3v77L4mYnRxh0T9+l5aJYXvdixUZsGGp3dr691W7hYHOuGCY+7YKoRAsET4glZJA2Dzo1wgQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1z96lycru7ua22jsunw7t3jqcmvkwf2vfrt0gwu","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","hostgrid22",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+TFVEe/VjC4MOwovO57sLgsPS8B99goW3076UpFWtvI"},"signature":"kWZOhgaPVDIdD8ODhC6Kb40J9peol2HhzN+5FLO5LeUvriVL3dTAUDmawyHAc7jkJiSaDQV3UEJJVsyXI2epDQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1z96lycru7ua22jsunw7t3jqcmvkwf2vfrt0gwu","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["hostgrid22"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+TFVEe/VjC4MOwovO57sLgsPS8B99goW3076UpFWtvI"},"signature":"ZCyzbToZkVtH/SA93BQ4dif0ez9qozydY7dlMNJhsOcvmFqB30nbUrls5ip26yyXY82IruRMC10SQumZqyqsCg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1z96lycru7ua22jsunw7t3jqcmvkwf2vfrt0gwu","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1834","hostgrid22","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+TFVEe/VjC4MOwovO57sLgsPS8B99goW3076UpFWtvI"},"signature":"tqqIMBEBodSVAPUBues/J38zeTvyafMt+nZRQOOikFpIDBseIgextmSObek2/7FBcSGspWmnL/MLW7/JQAc6LA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1z96lycru7ua22jsunw7t3jqcmvkwf2vfrt0gwu","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1834","1","1","g1z96lycru7ua22jsunw7t3jqcmvkwf2vfrt0gwu"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+TFVEe/VjC4MOwovO57sLgsPS8B99goW3076UpFWtvI"},"signature":"cvzkt/WpM1tQUh4yuLjSdjQVG6rNphuTP2FKf0IT/V9ygqTRLBxxaZkJDucKqhiyTO8aenmNyUFjt025q558GA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g19clfxn2jsmrzhf9lwjjty2mzlcamkcpth9q94t","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"48OHTgrvl3PavDFBSJVcsf8xnJQzqkuQLptrL08Pi31sFumY3ctppt3GP+iuq7bn1lI5InyIQnjxan1kCZl7SQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19clfxn2jsmrzhf9lwjjty2mzlcamkcpth9q94t","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","estateexpirezh",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4uhfwJzo+lqSsc7PL+aLPJHGnvzngG2xMqF/TYe3P/C"},"signature":"G82HwiQ7dPDsLlQTe+7wRkZUW5k5tA2Nq9ukm6MwmWAaf7h0lAYF1UphcuLunSsMvm5PGnn2ww/iBNN19/8nBw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19clfxn2jsmrzhf9lwjjty2mzlcamkcpth9q94t","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["estateexpirezh"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4uhfwJzo+lqSsc7PL+aLPJHGnvzngG2xMqF/TYe3P/C"},"signature":"YXHugBhfQEjcCt0Uu87B5Or9+UpoaZlovu0b2kCj7+VfyH4i4L39/LKlvVEOLJ3af8ILHPMFudHhZOgEw+k6Tg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19clfxn2jsmrzhf9lwjjty2mzlcamkcpth9q94t","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1835","estateexpirezh","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4uhfwJzo+lqSsc7PL+aLPJHGnvzngG2xMqF/TYe3P/C"},"signature":"b9LKg0MGRdLXiSwmQ2qT0PnWdsq2EmeMAFEDXeUm/PVdfPjJeqV/Q0sl6fxqKVjkJWXX6s98q5OyLiZee28gCQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19clfxn2jsmrzhf9lwjjty2mzlcamkcpth9q94t","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1835","1","1","g19clfxn2jsmrzhf9lwjjty2mzlcamkcpth9q94t"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4uhfwJzo+lqSsc7PL+aLPJHGnvzngG2xMqF/TYe3P/C"},"signature":"5aLub7Wpqnk2iOXyiclAYyXxnXkU6gY+jN9/aBvRp7B9fyiCo31td2h/tVpasElaE35G36oOMzdZPEvEyQt1ww=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1pp27hth7nz036tqe9gxu6782ukeljdzxtcvkmt","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"CT+8nOSQ6LvD6ynzmv6Bk4owmdJKWrzPrXNIYwUkvTd/BuCT5pt15yadtqkwpUZGLVuiQOnpOn70149aQnC7rA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pp27hth7nz036tqe9gxu6782ukeljdzxtcvkmt","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","finishjealous36",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtsPJNYmaZhy4MQGafla1aPslmBFMGkFbjsTvdIvykS5"},"signature":"H/0Wa0GMe9mwmwqyoKqGUmB93DIPUzYaa6SMNJOyWWY/wwA/JQp90E2N6sY1CuQpJycBsCn2F0gzZtzByiM72g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pp27hth7nz036tqe9gxu6782ukeljdzxtcvkmt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["finishjealous36"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtsPJNYmaZhy4MQGafla1aPslmBFMGkFbjsTvdIvykS5"},"signature":"eR+Rn7pgE7a8T/GabiISX9ImGAq0AFrkZkbEbl3YlYQwzt85k8HOApj2v/D0n/whcv1pyHGdJfML+ZvQmWCeeQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pp27hth7nz036tqe9gxu6782ukeljdzxtcvkmt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1836","finishjealous36","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtsPJNYmaZhy4MQGafla1aPslmBFMGkFbjsTvdIvykS5"},"signature":"FG0WBBM4GiS4UqXdym9mTl9IX8DKNoY6+RPGlVwSoLdMtc8Ztg2Hb69hpyMAFiS46HqewV0+KnsOxya3IPVhbA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pp27hth7nz036tqe9gxu6782ukeljdzxtcvkmt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1836","1","1","g1pp27hth7nz036tqe9gxu6782ukeljdzxtcvkmt"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtsPJNYmaZhy4MQGafla1aPslmBFMGkFbjsTvdIvykS5"},"signature":"M9tgNFhfnAdJsdft622a0jJ51+DFdKmFL5Hl+Hnn/cY4KO6qfG2HqHZ+7Nt4xzSjn7zst/vI32vRqderveCnTQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1r20eg3ymmzjp973kjasqtn28xdgwju5en7py5k","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"6Lo9GuDsW0+4A5h13QAGqoOw0SyhB9vcoHc5gV2YssxY1Vee73CdRfdOAqugy9gTu6v4CzGZTVFLMXMzhrbzNA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1r20eg3ymmzjp973kjasqtn28xdgwju5en7py5k","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","livesizep9",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av1zluSzUrci2MvZ+NpBFugESg4FhUQThUW8dsTZPAVq"},"signature":"0ZC6VnMXRZl2iobBQwc3zNuCBovAuCo+LfthzFEC2/ZDslo36KN9UYrUmkaWdQItolkUF4BwNarUZHoqFov+Og=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1r20eg3ymmzjp973kjasqtn28xdgwju5en7py5k","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["livesizep9"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av1zluSzUrci2MvZ+NpBFugESg4FhUQThUW8dsTZPAVq"},"signature":"owq2rAX6YsCeRWkWV7qq8oMCc197dU55TKJMCpA1yPYehr6PI4GxhgMSbKGBXrTdCrMAnLr1JxX/RUQ730A8Vw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1r20eg3ymmzjp973kjasqtn28xdgwju5en7py5k","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1837","livesizep9","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av1zluSzUrci2MvZ+NpBFugESg4FhUQThUW8dsTZPAVq"},"signature":"VG/g+2N/B4ibfeo3k4b7msmNuAyVutu85oLwgj5fmIJfrXUeDYD1MXrNK5ZkOKsQj0hW6TNsOaKKfp03H9qmTA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1r20eg3ymmzjp973kjasqtn28xdgwju5en7py5k","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1837","1","1","g1r20eg3ymmzjp973kjasqtn28xdgwju5en7py5k"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av1zluSzUrci2MvZ+NpBFugESg4FhUQThUW8dsTZPAVq"},"signature":"RMvSJfo9RgOj5WLPx49trTUuHU/MkFR4oSvGru5Ut5F59tdzKXz/ZcaB0mtPw85dfnmtEOsp1yjBmeijVloMNA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1dvzdflklg8l5kfrqxydw8fxpw0gz8n9dlmgtz7","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"iRCLFFMDuI0cfpl4V3oxmRXlvC3uMa/vH7Ti0SwIf6It3dbVWwvXlO+evsXp+g5ODEzAZNgAt3a5Vk0V3HOHKQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dvzdflklg8l5kfrqxydw8fxpw0gz8n9dlmgtz7","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","sentenceuncle5k",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqrlyhlTvtaHi0GUWTlFf4gc2QsE3TOmRDla2Tt8sIJ7"},"signature":"ItOuPAcw5xt8B2fQzgJThvqYqVADC1Hq3b9sPV0Bo9BipVFObMGPH0tOcew2oC8VSR7tRRsnndVtHbwwkFwF7g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dvzdflklg8l5kfrqxydw8fxpw0gz8n9dlmgtz7","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["sentenceuncle5k"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqrlyhlTvtaHi0GUWTlFf4gc2QsE3TOmRDla2Tt8sIJ7"},"signature":"wh3U5qD81kogjpsonJ0i/vYepH3XacjRyrdVhBRqCW19AkdOlsrGhIrP1FNanknHLLt4lYFf8JMJU0ogIzFZtw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dvzdflklg8l5kfrqxydw8fxpw0gz8n9dlmgtz7","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1838","sentenceuncle5k","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqrlyhlTvtaHi0GUWTlFf4gc2QsE3TOmRDla2Tt8sIJ7"},"signature":"3tyxIBejTjk9CMJCPdjTvuvr+y+TfJqpznytHjYMy1wC4+UaWU/JFKg+KB5GGX7sPOym7/6w2Qt0KGdkL8b+Cw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dvzdflklg8l5kfrqxydw8fxpw0gz8n9dlmgtz7","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1838","1","1","g1dvzdflklg8l5kfrqxydw8fxpw0gz8n9dlmgtz7"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqrlyhlTvtaHi0GUWTlFf4gc2QsE3TOmRDla2Tt8sIJ7"},"signature":"d45INBh41xJaQ+wumN65RliPS0uXcDHPihQwjvgnLegYfKACewtHafWhr+Sp9Win5n0Bn1ucfFlsTuB2vucfhg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1497t39cxsrsrz6u2hxk8emqmt9n7jmhu4sf7vm","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Za79ftE0f7dtSCTmp6UXkDZ15qoG/WgwuVD3DU3kPr1Ph6dbg7QKJ3CwELk3BXBhOiHGgMtpfkjcR4M58LxC6g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1497t39cxsrsrz6u2hxk8emqmt9n7jmhu4sf7vm","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","picnicnuclearrz",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiQJ0jDgSpwWzPcuu1iRUd5/DitZgnOdvE/cdj+MW8E0"},"signature":"2cDOoKMiXdaXnkzTu3AGTTpyxcP0MmrmlCw+q2gS00xNoWVZ2mppFpGLALYW1XtR7TGHaZ/pfLmLc9Kp4zBKFw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1497t39cxsrsrz6u2hxk8emqmt9n7jmhu4sf7vm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["picnicnuclearrz"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiQJ0jDgSpwWzPcuu1iRUd5/DitZgnOdvE/cdj+MW8E0"},"signature":"Grz7Z+yEhcs3+63oENL8lO89UQnxSE3YaSn9dOAo5Ap42CzHpLKPBH3HFlqWdlPjFGwp7bV09OHKS0NCE5H15A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1497t39cxsrsrz6u2hxk8emqmt9n7jmhu4sf7vm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1839","picnicnuclearrz","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiQJ0jDgSpwWzPcuu1iRUd5/DitZgnOdvE/cdj+MW8E0"},"signature":"PNvA2KpwGc3uDg0U8E4+kR9Kx1hVcXNLYjiZSEpRteNytxuUPA92InTazezDELuQprrGrxAVnS5dn4TeICD7NA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1497t39cxsrsrz6u2hxk8emqmt9n7jmhu4sf7vm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1839","1","1","g1497t39cxsrsrz6u2hxk8emqmt9n7jmhu4sf7vm"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiQJ0jDgSpwWzPcuu1iRUd5/DitZgnOdvE/cdj+MW8E0"},"signature":"BDqKZyiWFYpillGuSeQAAsXEQd6Ir54gREG4UUGpOORCnmVW/Gd34L8zhw3svBe9+4EfVJp/AF3sh3rBSmTcNQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g15cw96emegdyh5x0lc7wzkpy5e680rt7h4v08ng","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"oX38no7PjSB6jTw8icA0whPbIM77hmOzwIHVZqtC6/0fgv1ag4LPKnPf93nXCPEmzaXfrxH5z4I2EWWINaufJQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15cw96emegdyh5x0lc7wzkpy5e680rt7h4v08ng","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","exampleboardh5",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmgoAp1DweLvw1onuhaPp29fcxtTvNc78mijuw36sZXE"},"signature":"DseGjrVnXKIMCNbGpmEVQA6P2jFIHT5UWGVstUaOjRdm7SF9z6vwlWmd3yQB65ehvPqIlYUZnbX5dmxKnO9Nsg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15cw96emegdyh5x0lc7wzkpy5e680rt7h4v08ng","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["exampleboardh5"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmgoAp1DweLvw1onuhaPp29fcxtTvNc78mijuw36sZXE"},"signature":"cm+jJ2nkkAHFJsV1jcekZ/U2/WsALn5xpTEbYaovMQcFkyn1bbTRM7mPwPcmPNO9lao/KUNHnKxnd13vUzM2pA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15cw96emegdyh5x0lc7wzkpy5e680rt7h4v08ng","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1840","exampleboardh5","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmgoAp1DweLvw1onuhaPp29fcxtTvNc78mijuw36sZXE"},"signature":"mBuFPB8YLyS05EGFnGn5bv8iDv4YVtv4F0h39pczTiNO9M5PknkDIXS7DrZ7MGAm3eLPluGeYri2nHxO+v+2VA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15cw96emegdyh5x0lc7wzkpy5e680rt7h4v08ng","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1840","1","1","g15cw96emegdyh5x0lc7wzkpy5e680rt7h4v08ng"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmgoAp1DweLvw1onuhaPp29fcxtTvNc78mijuw36sZXE"},"signature":"ngEUutrTs3q53sLwEuuyPee99W1TZF0EZs8Q6lr2149oBh10SwlQ2fH4RLNXP7OiQVrp2aEo8mHeutZ/7ZwiMg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1wxytrkaksx8yazcfq2gt4awf6ekjtdh9u96qnu","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"9k3+ZQM4gPAVjuS+Wk9+b31hEItMiWcqmqQqBjBngJZ1Z7H0oWTt2oxz4yAyULvGAhrAu1P5GJzJ6Eg2oL/3EA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1wxytrkaksx8yazcfq2gt4awf6ekjtdh9u96qnu","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","looptipya",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5sHM/Afli4shiw0rOBLCZVGcw1jId+qDPG42AlGTBGJ"},"signature":"hEkqKNt6OAuvpOPont92gFeapFT4ogP0gIjlZDhrXOwkYVuh/kj8+ilYh18CAIpG/ZEqcw7aQGimk20D/HIN6Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1wxytrkaksx8yazcfq2gt4awf6ekjtdh9u96qnu","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["looptipya"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5sHM/Afli4shiw0rOBLCZVGcw1jId+qDPG42AlGTBGJ"},"signature":"wQPhIOnH5ayrCEGwbIU0PbYhyVR7eqdF8bwOoZ4HY11uZWTx4ak1wYBEpXeGWlMiLdV3vmJ1VLnch7cobprfVw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1wxytrkaksx8yazcfq2gt4awf6ekjtdh9u96qnu","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1841","looptipya","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5sHM/Afli4shiw0rOBLCZVGcw1jId+qDPG42AlGTBGJ"},"signature":"Axfmu51leyuoC+CMnPN4qR1JSL4bMIRUD8Lq9aOE32NIa7QSLYLLnfu0yGJ/lwP5nP6iqZ6+pwhCPiI4MeD5zg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1wxytrkaksx8yazcfq2gt4awf6ekjtdh9u96qnu","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1841","1","1","g1wxytrkaksx8yazcfq2gt4awf6ekjtdh9u96qnu"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5sHM/Afli4shiw0rOBLCZVGcw1jId+qDPG42AlGTBGJ"},"signature":"3hk13ZtwtXRysMlIMQoPA9wvutwBdnaA6JRmGceFuQxrtaLyruOjFBGQ01fpEDZmYdTpuooIiOp+wanv1jQh/Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1chr05wl2z60q23fhurt0wj3ul5n4utyz8362ns","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"SMuAlra0IeO3kYHBGLfskDO0K+jqls0JeEsv+c/xHI5bj6Bn3Elv493N+Ge+8ZBiKfvx6pvEHD50Q5ElcSQ7zQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1chr05wl2z60q23fhurt0wj3ul5n4utyz8362ns","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","predictminuteq2",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3pgVfD+h/aOV24HGbTBSpHiECKRET1g/LcNWYWUjPYW"},"signature":"vHdf6M7GbcZkO1cS4SvDdx0e+d8SrAkYFrvMiohis80dMMzaSE5MWPZHA/9z0YIbgST0FGJI110uNMR1eeBB7g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1chr05wl2z60q23fhurt0wj3ul5n4utyz8362ns","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["predictminuteq2"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3pgVfD+h/aOV24HGbTBSpHiECKRET1g/LcNWYWUjPYW"},"signature":"5bWeeGHQn1pGzn9ktNQeTKxL+hRKjKeJCSl5QmSso5gfkIWWBbdBPXkeeSkENqm2t1ZeDmVnOr1KOw9pkjON/A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1chr05wl2z60q23fhurt0wj3ul5n4utyz8362ns","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1842","predictminuteq2","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3pgVfD+h/aOV24HGbTBSpHiECKRET1g/LcNWYWUjPYW"},"signature":"seLwWLVhRKUhRy+Ow/gLXpnJ5eA0n8zGzMjkZ2jnQBYwhUgaqvhy6XI+guuD6b0MkQYK4haL3lHneEZPSZoWxA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1chr05wl2z60q23fhurt0wj3ul5n4utyz8362ns","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1842","1","1","g1chr05wl2z60q23fhurt0wj3ul5n4utyz8362ns"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3pgVfD+h/aOV24HGbTBSpHiECKRET1g/LcNWYWUjPYW"},"signature":"wOon5P6nuxKwCZepKLHYKJ8EC/7dZpD3h9ciaG/Msp9VXYbTDtZ1mn4ZPSkZHN4f/+WcWX1StOGet8XyLagH8Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1p8mjktmc8gxd74zmc7szeu7l94qkglglp2m8fy","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"a9+2aNBaWtdjY1lQkNvdWcA4jvbXY+5uija9xEOVxRxKXyMUZPPl+PZap9haa3ynw9U/zUM3JEGLr/jYSwg3Hw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1p8mjktmc8gxd74zmc7szeu7l94qkglglp2m8fy","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","dividehealthd7",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6slRaG371931h09G3FxfenAfs8JENeV17BuazuwVzBO"},"signature":"gGRt3Noml/QO6OiQ8y65xOS/EHP2kwHoFXaLFptXwvlHvxAssxaETRl89LFM4P7vO/3PULQWWJ/uAF25ycSPkA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1p8mjktmc8gxd74zmc7szeu7l94qkglglp2m8fy","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["dividehealthd7"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6slRaG371931h09G3FxfenAfs8JENeV17BuazuwVzBO"},"signature":"LnlQei+XDSnyJbJ1oprQMUlbSJ1XqjJRiV6rZ/sCe5pFzkda4mQknJz2JTJNjK7RwK2Y9RjDgoQOQ52zKnbTng=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1p8mjktmc8gxd74zmc7szeu7l94qkglglp2m8fy","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1843","dividehealthd7","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6slRaG371931h09G3FxfenAfs8JENeV17BuazuwVzBO"},"signature":"uE2Yy9Yb+0qL8hKS2GcPoOaHR8qaE9KVjFym8VOTSYM5du96AXBk4ThOGYIdp0LunpAfq8M1xjhuQKoW+sxr7A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1p8mjktmc8gxd74zmc7szeu7l94qkglglp2m8fy","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1843","1","1","g1p8mjktmc8gxd74zmc7szeu7l94qkglglp2m8fy"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6slRaG371931h09G3FxfenAfs8JENeV17BuazuwVzBO"},"signature":"45Q6PMEbvx45zweH77HEcX3rTIPvxTj4EPTEDRX8EO8ZUYhjglmEi+ulj2Y0vze8bR27qvB6vp3jzr32DUmtvQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1h8atpmszpyewcr70t7wxrjd0j7ry3ul5yvz2vn","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"w2ZyClFnMSA8oBq4JN97tsKU5Q8Xgam7/87UoN67dek2ZfLE5Ixp3f2HppesZeWkLtgzh/FuL7wZfhan4UzwzA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1h8atpmszpyewcr70t7wxrjd0j7ry3ul5yvz2vn","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","museumseatwc",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyaCX75qU9sOvMWziKY21NuoAo3vHl+OeY33ERI7PdzD"},"signature":"wkCKCfb+2i63jqRgmwmULu8qxJtlVP35Q9zukNvku2VmeKoWo11KkSbRJRNau7qqlRViuQjDHDeizV9qIJ/GXw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1h8atpmszpyewcr70t7wxrjd0j7ry3ul5yvz2vn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["museumseatwc"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyaCX75qU9sOvMWziKY21NuoAo3vHl+OeY33ERI7PdzD"},"signature":"2QkWfCp1M5St09Bp9RvMR6WCYlfFtOGy4by4wjAbdZlf/IwD3jAX7GOdjjKF92+TNtqi3HB1nsG3grwDyh5LbQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1h8atpmszpyewcr70t7wxrjd0j7ry3ul5yvz2vn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1844","museumseatwc","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyaCX75qU9sOvMWziKY21NuoAo3vHl+OeY33ERI7PdzD"},"signature":"fdEPCgu85O0qqTiKVUnFH013ASSATuI30JUSUlHDmLVhlowP8EduH9cthBifg0UdP9jjVBa2+XwWscuC2PeDxw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1h8atpmszpyewcr70t7wxrjd0j7ry3ul5yvz2vn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1844","1","1","g1h8atpmszpyewcr70t7wxrjd0j7ry3ul5yvz2vn"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyaCX75qU9sOvMWziKY21NuoAo3vHl+OeY33ERI7PdzD"},"signature":"LNn79KyvH+8m8XOeXlL6fSz426x7gGGFiRdljonW0dYACifei1TPVTYR2beWtHmUy32YWP2QO+yZvQ6r3PmCgg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g19rq2wvzt87h8cw7jxa6xdwwfq8lyn22xxe5dxa","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"FuMuFSbVlqtg0GQOXhElEXymiMBjCl1okvERGwAq8WM9lO/aFvRycrLGZdlWUlZUavJcYtAHwB99kbFOXxvqxg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19rq2wvzt87h8cw7jxa6xdwwfq8lyn22xxe5dxa","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","ravenelse8c",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8d3CZIWTLCYKiuAZWeKD0snm4bYCweuDBU0RCCmCf8n"},"signature":"6clmwTpnfPGaj2CebSo9s56h2/uoLtxSTr2XcJ4fh+wHKKpr+qsLdb5fGx3OfNRTt1QZsovdweg8nW1DOdmw4w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19rq2wvzt87h8cw7jxa6xdwwfq8lyn22xxe5dxa","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["ravenelse8c"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8d3CZIWTLCYKiuAZWeKD0snm4bYCweuDBU0RCCmCf8n"},"signature":"gzxJea9C/j/sCMfZNx1aaeSXp4pMfSRO424ko6uHVKourpbhK+kyCvR6fd+l9290D4TnPzTUx1ewpef10WXdlg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19rq2wvzt87h8cw7jxa6xdwwfq8lyn22xxe5dxa","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1845","ravenelse8c","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8d3CZIWTLCYKiuAZWeKD0snm4bYCweuDBU0RCCmCf8n"},"signature":"V2qvA0Y7HhYBMdA/skPOnpb5g22C5/V9Lman8PWbpYlUA+AkJ+d6C9JhVhEbzqHtpRHB/46/k8Ff7hpmPtq9eA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19rq2wvzt87h8cw7jxa6xdwwfq8lyn22xxe5dxa","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1845","1","1","g19rq2wvzt87h8cw7jxa6xdwwfq8lyn22xxe5dxa"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8d3CZIWTLCYKiuAZWeKD0snm4bYCweuDBU0RCCmCf8n"},"signature":"wUpQDBUTMQmnW7ciPOwqP8wZd1xk+yQHoJca5Uyw6olhiSMphoXxDTx+BOl6IsXedgumTEe4K3y8TlwO7HV3wg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g19uvkkq8cs8fktxkfc4q0awg3lpwnw8nvkx20gf","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"fi3ZcWutOaOxPlUrvU3sOvF9Jf2kF+lwHb43livtXpVaA2cRJqLACtYGuUmuRmfljlTwV2AmowwrDRZOzYpH9w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19uvkkq8cs8fktxkfc4q0awg3lpwnw8nvkx20gf","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","birthtenniskt",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1yk0FFVZJvK/n2RzFlCIZNDAtEmw82qbWntQBesIkK+"},"signature":"w/rBoZ4wsxQRsJkz0ycL3Tt5pmuCFZcasYIc6B9Q0UguTbiC3wwJVURRPia50e/oAlUkZz9ldAoNjb1m6GzxXQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19uvkkq8cs8fktxkfc4q0awg3lpwnw8nvkx20gf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["birthtenniskt"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1yk0FFVZJvK/n2RzFlCIZNDAtEmw82qbWntQBesIkK+"},"signature":"4Sc2FsO9ZmUX8dQU+rE6QwKFYRtiE0CAoDY+/5MuUsgwtIoGkceQy8H9R4YZCJi5afST/UNfm0agF8Ect+XWaA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19uvkkq8cs8fktxkfc4q0awg3lpwnw8nvkx20gf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1846","birthtenniskt","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1yk0FFVZJvK/n2RzFlCIZNDAtEmw82qbWntQBesIkK+"},"signature":"GRKE0boFPtD+HXTwzj389H+WDQI0Fl0YsMbQlsCZPegpJYivyaKFL0bQtSDFesEeLV4myqa1114V8w/0oOumpA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19uvkkq8cs8fktxkfc4q0awg3lpwnw8nvkx20gf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1846","1","1","g19uvkkq8cs8fktxkfc4q0awg3lpwnw8nvkx20gf"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1yk0FFVZJvK/n2RzFlCIZNDAtEmw82qbWntQBesIkK+"},"signature":"qsVFKQDsVz9cJ1kmwkflRCCXSwYUWo6R5Sl+14LInSMm7GLGoLCpAj7CFw4fQeLHoSG1H8cv6lt5tCYTEDzglA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g14dvwxlsjfakst2k9gh4haczt4m43dxc889xrxq","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"v8PrXKCtDt09Pg8RSVTJv9H/xp5mHgF3KVKPnTC/AFdUYLSMirCufSWcFirvE/JJqzsz2bUer7U9dj3l4crS1g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14dvwxlsjfakst2k9gh4haczt4m43dxc889xrxq","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","increasemarginst",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgTD4kwl6VeKJ3svEfjbwC012RoFNNIcPOi999QmXaFR"},"signature":"l2uToQ0usuUSXtpYBNKPEgVmZtzbDAbDFXlc3uJccgUbA2IRGZ4IFKKflupSSYRy+DZttEasJMIFpouWEdYXgg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14dvwxlsjfakst2k9gh4haczt4m43dxc889xrxq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["increasemarginst"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgTD4kwl6VeKJ3svEfjbwC012RoFNNIcPOi999QmXaFR"},"signature":"mvcKrLQACaAu3paCDNujCIU4MeO9qODW4W6ikHhM4RJmndLOjjCnA9AHvjs6k8Ms3820S+aUElPJje3NS3rheA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14dvwxlsjfakst2k9gh4haczt4m43dxc889xrxq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1847","increasemarginst","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgTD4kwl6VeKJ3svEfjbwC012RoFNNIcPOi999QmXaFR"},"signature":"UaYN9zFQ4G6a0vR6HzIOzoEdO4ISLSwUEk6zXU9gidpKhiNgiXYNcRyeVBOHzdXEndRa24eeQlUhy7smv87nSw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14dvwxlsjfakst2k9gh4haczt4m43dxc889xrxq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1847","1","1","g14dvwxlsjfakst2k9gh4haczt4m43dxc889xrxq"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgTD4kwl6VeKJ3svEfjbwC012RoFNNIcPOi999QmXaFR"},"signature":"4b0Pdb1BCI3lSr/UyCV7a7WPPaWwtlhytlvfJI9IfLJng605aEnbg6Zx4aR2S2OEi9vqiyMlLSQhSRWb2tL/sA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1tpqc0metennuysuqrdghfue5tt5m8mzaqppar5","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"N/XBhApSE0bfzYK8EZ6xCz2vVMFRSauiKryr0GpBP0g4YkiT9lwdgpwA+mqcKK8XWOVil7Wap12nflx2MSZ3qg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1tpqc0metennuysuqrdghfue5tt5m8mzaqppar5","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","validfunuy",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtiAgE6cA9AIS9Slyg/bzvr4C/E5z20xz1KhR/FwesHJ"},"signature":"5hp9qPURjC4o2GMo+fNg1feL9Nm8sCePeNU63PuldtkirX4kwwaqBFuVxkH7gUgM+qDvKBxJvK9cPosuA6gH9w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1tpqc0metennuysuqrdghfue5tt5m8mzaqppar5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["validfunuy"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtiAgE6cA9AIS9Slyg/bzvr4C/E5z20xz1KhR/FwesHJ"},"signature":"S5gBJznSs/4AFoQYNQ4fVQ+tpPCu3dUZdlwTOk1sYuwqVFvwiqK2JwSXBXd+o8wT+jxhxfZT8ayGGTZ1PFgLfQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1tpqc0metennuysuqrdghfue5tt5m8mzaqppar5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1848","validfunuy","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtiAgE6cA9AIS9Slyg/bzvr4C/E5z20xz1KhR/FwesHJ"},"signature":"PRoINPlFzABHfamlMl5xJoSFqZrTIDpbt0SfuP7jjKEgRYo9Gcz2be9yr2gNQ1hG2dRCQUFn0COCFAnW9VS/oQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1tpqc0metennuysuqrdghfue5tt5m8mzaqppar5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1848","1","1","g1tpqc0metennuysuqrdghfue5tt5m8mzaqppar5"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtiAgE6cA9AIS9Slyg/bzvr4C/E5z20xz1KhR/FwesHJ"},"signature":"4ZnTz+0kWi7i8L3iPARzZrjLO3zmdvIi3EU816Zs1k19sk745KGc40kvBQpfkpOprG95HCx7gpBH2Xlwef/LoQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1xtgqf8eh5dxknvnepwerrpsl8jj5tp4tykjv4m","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"qJ4Z09pNjrSktI/Ahb3x178J3MiOx5A6+rzJ5+aS9IwZz03tdqqi8U/52Be12UVraVEXIelxA0AZQ/rQVego0w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xtgqf8eh5dxknvnepwerrpsl8jj5tp4tykjv4m","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","switchdetailkn",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuGuP+1YxBlpXfLKR/naznsh6qhv/oUSpjWvs2BW0/Ik"},"signature":"FZNJmFAQURCac8pBt7djFSwhs2MVcOs34cpR88ZioZV+ecd49FmUWPnZ1ft6LT7B4+7NoJ7JqcHjQIv7kkVbBg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xtgqf8eh5dxknvnepwerrpsl8jj5tp4tykjv4m","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["switchdetailkn"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuGuP+1YxBlpXfLKR/naznsh6qhv/oUSpjWvs2BW0/Ik"},"signature":"yi0VfeMT2Rs8VKO3H68p9s95zb+GxjYyv9ba74W0sEInYxW0VhJM3qYhOZOLRe3CDWvBzoHPu3qaTIXQz6K8qA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xtgqf8eh5dxknvnepwerrpsl8jj5tp4tykjv4m","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1849","switchdetailkn","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuGuP+1YxBlpXfLKR/naznsh6qhv/oUSpjWvs2BW0/Ik"},"signature":"EP3TEvbbjOnNAwKmsmN7dBmxMUAPMAgPSF5atH2Rt6g5gRAUeIbupPDBqk0s9eMT1eiyYiumvE4bfBToQWc9uw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xtgqf8eh5dxknvnepwerrpsl8jj5tp4tykjv4m","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1849","1","1","g1xtgqf8eh5dxknvnepwerrpsl8jj5tp4tykjv4m"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuGuP+1YxBlpXfLKR/naznsh6qhv/oUSpjWvs2BW0/Ik"},"signature":"s5hb658YxyDQEUYSIKcS/ra07Oaz8xsRR63dy/tuBs188qSSY6GWtpVK83umilmTjGQk2k0YYJHDDsc3XyRZRw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1m4fhheuq8ljec4t5n2q4qftylg65zgvr3yd75u","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"4lZsOua+a2zyBRchJ0La8ozILaldKWC+wslWICvhb2Yxp0eYnrAfDjnYbQlHkpT0ybLAjk9cuglCHQqtsb6WVA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1m4fhheuq8ljec4t5n2q4qftylg65zgvr3yd75u","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","trustseaec",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3mLxwLTOw1V/y1bmKNeRoqPg5sWuty5iS9iGw3ZkA7X"},"signature":"aWlug6h6ht8RYJ+Z6PYKbnZMg3gFhnYJKW8nMCwzgopsynZrdYknsxyomFoPh0ziRCN/JjRXVUdgPr94r5MuHQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1m4fhheuq8ljec4t5n2q4qftylg65zgvr3yd75u","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["trustseaec"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3mLxwLTOw1V/y1bmKNeRoqPg5sWuty5iS9iGw3ZkA7X"},"signature":"7EwasrLg2gAKvCglNyXlqP7vHHyXwhWgu4yM8mp4pm4eELJtg4QXfaDFK4mJlhOkAQakGCONsfwsWgJQwaXqqQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1m4fhheuq8ljec4t5n2q4qftylg65zgvr3yd75u","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1850","trustseaec","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3mLxwLTOw1V/y1bmKNeRoqPg5sWuty5iS9iGw3ZkA7X"},"signature":"vnM7ScQHpztFvtqQPUY/7OT0NA9TKN3ZoCqZh9DQFZtF2j+VI4b4U3Ve9HIWAd89Ltbi9D+FIThONKjCZ1KZHQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1m4fhheuq8ljec4t5n2q4qftylg65zgvr3yd75u","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1850","1","1","g1m4fhheuq8ljec4t5n2q4qftylg65zgvr3yd75u"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3mLxwLTOw1V/y1bmKNeRoqPg5sWuty5iS9iGw3ZkA7X"},"signature":"ZaT3JV3UpOJY5alzsyAUQ+GReEgnTbdaQ9pHeTrEHHNG7rd9HjdBSo5W3yuhT6T8uePHmgzZhsbeu1eeG/9ZUg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g15n6xmevpp7weajwek47k2rkx0ujkmdpxcv44kl","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"XvTTmMV/Yvq8bnB98WjnQOaFp6JRvqkLf10s9tL3KCMhtjFrnZuJoTdsxW6+7I8m/nHiauvTUUfYW9sieEHH8w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15n6xmevpp7weajwek47k2rkx0ujkmdpxcv44kl","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","rebuildcashea",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1nZ3ch0/HHIcelGZ7Ux0jcgnokMkTc0N7veGORBPGFz"},"signature":"htv6jPgg1NttmtvVfIFKpqUwyZ0/q/qnowJvKC5RrnIGTSXec18TUukSSF6bowkCzlc9DWAs6dIF43ZGUHtvIw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15n6xmevpp7weajwek47k2rkx0ujkmdpxcv44kl","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["rebuildcashea"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1nZ3ch0/HHIcelGZ7Ux0jcgnokMkTc0N7veGORBPGFz"},"signature":"crPGZKpBz9SpccIPKVj4wirtemhQGuzVXDcK+8Br561Sx/mTFT2WdZxmnHgfKfTTXE2Cd4pXT7BtripHBJLGbQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15n6xmevpp7weajwek47k2rkx0ujkmdpxcv44kl","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1851","rebuildcashea","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1nZ3ch0/HHIcelGZ7Ux0jcgnokMkTc0N7veGORBPGFz"},"signature":"A+5kqr/TgVpM13tRRXZJTD8jswuWCv/+1Tl5H3hkU6pevSUo5ytw7zku+QTtRCwuDyBHhWUh3QfMGUXZFX6d0A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15n6xmevpp7weajwek47k2rkx0ujkmdpxcv44kl","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1851","1","1","g15n6xmevpp7weajwek47k2rkx0ujkmdpxcv44kl"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1nZ3ch0/HHIcelGZ7Ux0jcgnokMkTc0N7veGORBPGFz"},"signature":"1JImyNRyo0ByJXOQT2gHvlZPhe05zLZwwDCQRsSr3WJUWsjXMiLqgCWwPM9IFefGp1k/r/6ajg9jpDenoCfVdQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g14qyvvhpqfjqxfwdww7ytrq396dmhz762g33wcz","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"qQgZ/A8RsAKiZFvXE4SPelMN1A3IvbauVlhdDp8aj+84mCayR+5WbvGkiS3eh2gvV2JRCBJMQYjfIvFyzc9DFQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qyvvhpqfjqxfwdww7ytrq396dmhz762g33wcz","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","identifyaccidentxf",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxRR7e3X3UVJOLSsX2yzckQS4eZ/Xn1BDeIKAhzkHhx9"},"signature":"nAxSZzcI7OYWBfb9FdgcWzvB6OAj/GI8rIVewFWfemxJJpP5JO/oV8Eh4KaBwm1811unn/9gdnruuVgV5T4tUw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qyvvhpqfjqxfwdww7ytrq396dmhz762g33wcz","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["identifyaccidentxf"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxRR7e3X3UVJOLSsX2yzckQS4eZ/Xn1BDeIKAhzkHhx9"},"signature":"TS/st5jGly4Z3m3FEW04gTf1xF4qtBSUMYNTjryC95M/lII+Dut4qIwDc01GX/sRc5G9W/0wSUmV/hPTQNhbUg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qyvvhpqfjqxfwdww7ytrq396dmhz762g33wcz","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1852","identifyaccidentxf","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxRR7e3X3UVJOLSsX2yzckQS4eZ/Xn1BDeIKAhzkHhx9"},"signature":"Hx5yGj1M74MZFhEDIh/pyDLh7yenXJY5X+YfLLznhbIPy9jcDxr1vC261lPGm9k7ouF5omYrJHQdRPMFXILAxA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qyvvhpqfjqxfwdww7ytrq396dmhz762g33wcz","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1852","1","1","g14qyvvhpqfjqxfwdww7ytrq396dmhz762g33wcz"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxRR7e3X3UVJOLSsX2yzckQS4eZ/Xn1BDeIKAhzkHhx9"},"signature":"OIE24urjlodovdh1vLpQyH7swLZqCvzDJZiF1ybh6vNf1sPdY1Bo2zHS+Z+tK65Vym3OVJ8i7/Vi/rzjyv954Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1fk2na58py7juwxzd6gwsc5xcyrl2rzss4whz8m","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"jvf2+e4dt7KFRpR380HIt+qEgaEBdAGZD4vHj4ugPjpNboWyEV8LJYYZtAyT/aFI+d7ovYntzd5M6J/H35Vc3Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fk2na58py7juwxzd6gwsc5xcyrl2rzss4whz8m","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","hedgehogthoughtuw",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlOOzjIbflQ32wWFRdTdRc94uFCYOcHeBbYuRVUOwbe4"},"signature":"pN8tbPiCbIkE4KN1D3Y/QSP5kuEUC1VJL5lu+qdAHF8Cdoj4AGMd5cPEkM9KXd0e0WuCFfZR1IzRBye9bZxU4w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fk2na58py7juwxzd6gwsc5xcyrl2rzss4whz8m","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["hedgehogthoughtuw"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlOOzjIbflQ32wWFRdTdRc94uFCYOcHeBbYuRVUOwbe4"},"signature":"JmRM0v0fPG/T0efeJ5RXR4IHscdVx20uYgWl5J3gKSUgYkYlZf4awDOv7Fvnnv5IB7ITBX5wWj/6uPymlQ88PA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fk2na58py7juwxzd6gwsc5xcyrl2rzss4whz8m","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1853","hedgehogthoughtuw","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlOOzjIbflQ32wWFRdTdRc94uFCYOcHeBbYuRVUOwbe4"},"signature":"LbFeUJVEQuIqPGgbFIwQrI6Y6C3N99Wlyt9lFUJPwuJylU1SszvD+O0FC+tYE+srdqkH14+WpVtfP2HbYNffAg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fk2na58py7juwxzd6gwsc5xcyrl2rzss4whz8m","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1853","1","1","g1fk2na58py7juwxzd6gwsc5xcyrl2rzss4whz8m"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlOOzjIbflQ32wWFRdTdRc94uFCYOcHeBbYuRVUOwbe4"},"signature":"Rn0xKME603L+3du5j0lLHt8idnA1McEkMQNdeZSExbhUX2wnrGlZy7KrWy20BrXtC0KOiWZIobR9hI6tt5cZ0w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1ltzxm9ac7pjfneq6ultyxudu9gna6mtxmh8gql","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"MyRVQ8YSejFLMan3HLzorhwJPVhybkUkPFtHL58wu1w7O0cnJtOFuwnQp0Uo/0EMqoGlT1bQA3ILI1yqg64Fpw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ltzxm9ac7pjfneq6ultyxudu9gna6mtxmh8gql","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","fictionwaspfn",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2X46KDz2siGy73apam7ya6SBG0ZGsKZDA6GPMTV0j75"},"signature":"5e1Y9iyP4KwK5suzTizTxpE3P5F7fdp4M6lxm52hxM1MTXYNc8V12IifPu47R5G6/ZBA9arVvfXIi0DZOLDdIg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ltzxm9ac7pjfneq6ultyxudu9gna6mtxmh8gql","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["fictionwaspfn"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2X46KDz2siGy73apam7ya6SBG0ZGsKZDA6GPMTV0j75"},"signature":"RYSN9brKYNoOzgRwDfIFbL0oXmHAmLrg+DjbYJd/erZd3fuFL6XH1hN2/mBmV1fxAm7SQEF/SKV14HSyl21Tsg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ltzxm9ac7pjfneq6ultyxudu9gna6mtxmh8gql","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1854","fictionwaspfn","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2X46KDz2siGy73apam7ya6SBG0ZGsKZDA6GPMTV0j75"},"signature":"J/+LM7HmnR7oteQXr7DaPnPNVRWreCrQs2Al+KRad9YutJ1leuPhIhlvVONuuEOSruAJDe5C0kbs00BS3pa2pw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ltzxm9ac7pjfneq6ultyxudu9gna6mtxmh8gql","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1854","1","1","g1ltzxm9ac7pjfneq6ultyxudu9gna6mtxmh8gql"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2X46KDz2siGy73apam7ya6SBG0ZGsKZDA6GPMTV0j75"},"signature":"Xr0+73nh2fA7HaAkyiBFfqCT4DrzBd6cDJ5P6Q6mgiAA+zaGKnDjolb9Wbn8QncRe2tzAZ//gYrNm+7CQnakSA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1kqjch2v8wmzd3cxkndlsscxf2jl0hn88cgh3r9","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"JlKu3oB+5+biepEjEyR1bArdpul8Bp0uK0bNZqUgoTU4c7vY4/W4iGmsGO7lr3rhzqNAWIJ5Vvqe8DKvQOCRlg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kqjch2v8wmzd3cxkndlsscxf2jl0hn88cgh3r9","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","qualitydryd3",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3R3MN+NwGoz8ZNDJMs9fIC0FHwHppozaaYUupgL56i5"},"signature":"jzuu4VSSpJfa3rmC3K7g+pjsV3/U5Cx06USwpG6Wei8m2EGRgkR/Zi94too/df4LQcuesTzfmaDAgoNXg7tZog=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kqjch2v8wmzd3cxkndlsscxf2jl0hn88cgh3r9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["qualitydryd3"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3R3MN+NwGoz8ZNDJMs9fIC0FHwHppozaaYUupgL56i5"},"signature":"yLspHwmHZrYC7xISYktk42qZ4CMPw7w3brOy8PmCry0kC/pel11l0Q7v1h/scbQYOeonoEA3Kfe5ukIxJS6Akg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kqjch2v8wmzd3cxkndlsscxf2jl0hn88cgh3r9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1855","qualitydryd3","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3R3MN+NwGoz8ZNDJMs9fIC0FHwHppozaaYUupgL56i5"},"signature":"UN+wlmHsqh+w5XqsdtF4e7lC434kKo8moyYtxTRtwApw7iU/xidFxePY9R+6wryuk1huHuAVL211I5AZPThDRQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kqjch2v8wmzd3cxkndlsscxf2jl0hn88cgh3r9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1855","1","1","g1kqjch2v8wmzd3cxkndlsscxf2jl0hn88cgh3r9"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3R3MN+NwGoz8ZNDJMs9fIC0FHwHppozaaYUupgL56i5"},"signature":"QQedKZhooAv+w+/hRJVvMhm8VdEFoATpTPlvQ6GhPXZtRLXtd9BimVvGcnKRbyjByHEhajLOSALvSWX1cifOcw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1g6v9jmaul22axkdt4sd59cpez9ynyyqhpfu5ks","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"mN1cOpiwkKS4WW68Ca0nTi2rjBpbqJl86nxy52e6hswERanqaJTiqTbBkId4F87b1O86HtJfH1DbND2s4+dWYQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1g6v9jmaul22axkdt4sd59cpez9ynyyqhpfu5ks","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","symbolsufferax",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Akp93Q02ZYEg5pGkc7VVjZijELIW9ruYus0A4LG+cJxx"},"signature":"z4h/2wbAi5/aP5tsbtyz5ypocYZY7VgHUWHsukGRXPwxjdqzJcihAprP7TnI97rW0+r00i3gCMB+EfqZRRhKiw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1g6v9jmaul22axkdt4sd59cpez9ynyyqhpfu5ks","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["symbolsufferax"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Akp93Q02ZYEg5pGkc7VVjZijELIW9ruYus0A4LG+cJxx"},"signature":"5/rjKuLY158R18E5WpGgzUWfikO5wdNNI8gLGFgLuHhHRt4vd2kqGxWC0ctJ+5m1fKSWEz4QqNhpDkudUh3MfA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1g6v9jmaul22axkdt4sd59cpez9ynyyqhpfu5ks","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1856","symbolsufferax","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Akp93Q02ZYEg5pGkc7VVjZijELIW9ruYus0A4LG+cJxx"},"signature":"Cb4GXpiENazN4j1lPJbiNhphb2bdIP1R8RbuytKGSHo7pInq7CgbIVcG3sEWXDKqcEXlJtVXCDTaLZowoC51zw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1g6v9jmaul22axkdt4sd59cpez9ynyyqhpfu5ks","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1856","1","1","g1g6v9jmaul22axkdt4sd59cpez9ynyyqhpfu5ks"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Akp93Q02ZYEg5pGkc7VVjZijELIW9ruYus0A4LG+cJxx"},"signature":"TEs+BMX829XJ/vbbvl50KrpvdUOAIs3FOXDB+EnzfTJEuVej9dh3Wk8djNVDGZ9QKqp6Dx+E/9xr2QjIKoPojw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1t4prjg2mh2ma5e35hnywewgs33m26lc94th4nm","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"YECeia+YkX1oQ5paQQuCyxez7+SdqJCBrAlTmRkkvTkiqVdsFCaFBbT+ikYjvxZZGrsczid3Z+KeIFmwFclXww=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t4prjg2mh2ma5e35hnywewgs33m26lc94th4nm","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","assistcooka5",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ahk4r1O2wkWmkUav40MbKun7XSSEZexbMQRps7mFQgtH"},"signature":"VZqW3qJ5s/JWw6qq5zT9yeUw1R3ik24067Apr6BEbFpYYfW9Ra12NT/o0gK+YAHoTg8BMQA78CZ9j9hIUhBvgg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t4prjg2mh2ma5e35hnywewgs33m26lc94th4nm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["assistcooka5"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ahk4r1O2wkWmkUav40MbKun7XSSEZexbMQRps7mFQgtH"},"signature":"x3paFvpteZBZs+Qnf9shPM2ST0+bqRXIrhb42796YBk8jgnuGE6eiYYy69emT74EAEdovCmH7+Xy1qYFTPc74w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t4prjg2mh2ma5e35hnywewgs33m26lc94th4nm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1857","assistcooka5","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ahk4r1O2wkWmkUav40MbKun7XSSEZexbMQRps7mFQgtH"},"signature":"yKE7uN1LecC2Xf3g4/3NtGPvGMRICn34/nMjKfvZlIAFRN9d47HStqJpDOjeU4MHk9pD+mhT5G1ssBrzBUdn3g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t4prjg2mh2ma5e35hnywewgs33m26lc94th4nm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1857","1","1","g1t4prjg2mh2ma5e35hnywewgs33m26lc94th4nm"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ahk4r1O2wkWmkUav40MbKun7XSSEZexbMQRps7mFQgtH"},"signature":"EXwYm/LcjwJF2bwdecy21ZgREdhg4oyHjvDKRDJy7dtMlYavnXyo4Pr80bQVGRxb/svLoM8CeUt/iVP+ggSc3A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1z7dnmrw5302u5kxfhd4flw5dwsd3x7w8nsk4xy","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"9k9xOln8XFK4xfxTamApxbFUE/AHxTXm81ATKW34r0FNv5MNEmHds8JDxAHmsMkU/KxMg6e9ot6uaLVoT3k51Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1z7dnmrw5302u5kxfhd4flw5dwsd3x7w8nsk4xy","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","hovermanageu5",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A54VIX1bibQw+jy1ZidFdW9PFpNqlrcNeYO5b3eNWYKX"},"signature":"0Kzkq6aCBZxXhO1xV00ixgabiqe/xEsCQK7SWdvgU3RMLpgmpREknTmrbEjO4O115ub9axgpvabhVOcYGMPy/Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1z7dnmrw5302u5kxfhd4flw5dwsd3x7w8nsk4xy","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["hovermanageu5"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A54VIX1bibQw+jy1ZidFdW9PFpNqlrcNeYO5b3eNWYKX"},"signature":"YGiNXVwg/VqC4PiwjUWIqmxrHCE2oajVW6zeNTuqUq5rPGqCfsCIz51+Gue8Ndn3XDav19Pu+dwycvFw2QF21A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1z7dnmrw5302u5kxfhd4flw5dwsd3x7w8nsk4xy","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1858","hovermanageu5","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A54VIX1bibQw+jy1ZidFdW9PFpNqlrcNeYO5b3eNWYKX"},"signature":"ym3bz+j+JgW6hWT5D47YzNjKlsYB0FhTn8bGP/+OzmgvaKk+lAQWpyYWUVcTNGBe+MdwjH3VTKtDrGlAv01T+w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1z7dnmrw5302u5kxfhd4flw5dwsd3x7w8nsk4xy","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1858","1","1","g1z7dnmrw5302u5kxfhd4flw5dwsd3x7w8nsk4xy"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A54VIX1bibQw+jy1ZidFdW9PFpNqlrcNeYO5b3eNWYKX"},"signature":"ATi8YNIZzMzQTZP2m4oqfJA8W+eoV5vFYGXGzwPfj15Fmbv8oL6nSzzUM48skijG1Ox9SiHujY9IYS7J4w8yTQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g15sfy6j5tn2rmsuaz6t3sjmg8sgwx6wj225pacp","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"0t++kKc+PQxGX4xrI2UweruW2h13TydSRhgigdoG/EVKbGsCmEiDxTaGQ9+AByQ33VlImC/IUbfTIxWaVy9+dg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15sfy6j5tn2rmsuaz6t3sjmg8sgwx6wj225pacp","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","writekneems",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1BKMdtmPg+V9ph+/8Jx+27p4+MfK+hkjVeRRowIMcUR"},"signature":"otQOeeSqWBQLPHIECVc65dJ2UAIfMEyCWgFVusdk8Qk57gcWD3OShLyaoGI+mANcmkcefMd3r9jlcqnpdBYIBg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15sfy6j5tn2rmsuaz6t3sjmg8sgwx6wj225pacp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["writekneems"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1BKMdtmPg+V9ph+/8Jx+27p4+MfK+hkjVeRRowIMcUR"},"signature":"vGsaMj1QPv1lkjAH7XG2b6Jvg3BBumP+o3w+unuxnV99I4urwSJXUg+XDtDhRzbtsX+U36sDD96eKShgkq1YVg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15sfy6j5tn2rmsuaz6t3sjmg8sgwx6wj225pacp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1859","writekneems","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1BKMdtmPg+V9ph+/8Jx+27p4+MfK+hkjVeRRowIMcUR"},"signature":"0n+5wOD3z4lEry3Ui5nFh18Y6Ed7Diu4pnlbRnVzdfE5mYtBdK4hz9/UjKCXUX1Lel1vQcYhQkjx85W/HwvEWw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15sfy6j5tn2rmsuaz6t3sjmg8sgwx6wj225pacp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1859","1","1","g15sfy6j5tn2rmsuaz6t3sjmg8sgwx6wj225pacp"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1BKMdtmPg+V9ph+/8Jx+27p4+MfK+hkjVeRRowIMcUR"},"signature":"ixeh9j+lr7C76z7bVLs8xTNmGXz2Bqgrc7mf+8HP580JFFs9phMLxLeB/OcZvIlaM10lZGyxzIuxkXhrjy0t0g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1eqjly6epq4el6gln3ngh4a84pkgte44cypy8g2","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"7agFB55KF8XOJNV2KyT/iCiTYMBoVhMORTyFdMg5kjRXBEwe2fTPv4NvFiZmcztumbm+l9BvmN4rm1o8YOkRjQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1eqjly6epq4el6gln3ngh4a84pkgte44cypy8g2","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","shrimpswiftl6",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhtsF6AyHpM+uFV7FYH6e2t6bhtX7QJUlQVARtI5Jr1m"},"signature":"8EeOgQAHB3ESFNu6LWeYLXQIYzMtJeeqVf2f6VBA0yZNB6ATjfPhBzAB+upRTpj4JeONnyNa03+MkOZAyjChWQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1eqjly6epq4el6gln3ngh4a84pkgte44cypy8g2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["shrimpswiftl6"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhtsF6AyHpM+uFV7FYH6e2t6bhtX7QJUlQVARtI5Jr1m"},"signature":"mQmELA1GOxWPCshxCF0gQ/A2YrnoEUlz8423LeZ/FFUDFMtRVa0EgxXoVSZ6WtmyKZO2g7rK0Njhduq5T8uK0A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1eqjly6epq4el6gln3ngh4a84pkgte44cypy8g2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1860","shrimpswiftl6","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhtsF6AyHpM+uFV7FYH6e2t6bhtX7QJUlQVARtI5Jr1m"},"signature":"O8TVwWkQOMzkQGfKF50QkwLBd/Xqlp13yVZK5ncDvjlYQEYWkUWAJ4OoiBeugwSVpT2YXJ73ptnnkHxxHixuPQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1eqjly6epq4el6gln3ngh4a84pkgte44cypy8g2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1860","1","1","g1eqjly6epq4el6gln3ngh4a84pkgte44cypy8g2"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhtsF6AyHpM+uFV7FYH6e2t6bhtX7QJUlQVARtI5Jr1m"},"signature":"6CuSDkl0zgeGsD1jhpBgpCXGdYYS6HKSfcFGNnsWX+MeeZnFa39piddEzMUCXKOLuR4OzehDh81WW5g+JJoxOg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g12h7g2xps0ve30q33jeh4vrxk5y28cjj49knysm","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"2AO24Xohdi8OC/BsroDqmDcmI0RcQv8TqmgPC7xMa4lX5nzziE86Ksu7lJNK3oefu3+B1q1ZfaIIC2dyulSunw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12h7g2xps0ve30q33jeh4vrxk5y28cjj49knysm","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","pactreturn30",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7J2qKvkr10c6z2q4hPjGjd85c4LqH8LzDWFJ3bJTNCU"},"signature":"/tacJxHpI9geVmaFtcc/Cpe4d3CggkIxZaCnS/6NeNoGDQL1XIhrcA2Mgm+g0xhhIhiZRvn+hrwAXFrGyO3Grw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12h7g2xps0ve30q33jeh4vrxk5y28cjj49knysm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["pactreturn30"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7J2qKvkr10c6z2q4hPjGjd85c4LqH8LzDWFJ3bJTNCU"},"signature":"HkJNPJtlHr1XD/YmU/fCCiPi43u45M2GmhoaDgY84McFVmn8Xc1Sp2HD6dDnYnI7DHiyrj0m6zukM0sS1zeHBA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12h7g2xps0ve30q33jeh4vrxk5y28cjj49knysm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1861","pactreturn30","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7J2qKvkr10c6z2q4hPjGjd85c4LqH8LzDWFJ3bJTNCU"},"signature":"Np8HzQvvxZn2V4weRrOBYy0TQof8pCVuKIRYbXbeK+NLELheUYQo3DDV1CVl88eptE5QOwEVo4irDnvx0XhL9A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12h7g2xps0ve30q33jeh4vrxk5y28cjj49knysm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1861","1","1","g12h7g2xps0ve30q33jeh4vrxk5y28cjj49knysm"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7J2qKvkr10c6z2q4hPjGjd85c4LqH8LzDWFJ3bJTNCU"},"signature":"u3DAvtA5KzUipZu4f6WdVsi+NuXjI6ZzPYFMvPPoLoYcWoT88GrULOIuN8YeI6yafGkikxzaPFffIN07trZ4aA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g103gfgllhvz8q47m383drrslkj44272s5w4gne8","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"JkS6g7e+saLAjMZaKHBLXODYXFxTvWVfmWqTdGaKfagML0fZ902DmlqHH1C/wkzQA3WRQQY3a9BruglW9aj7tg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g103gfgllhvz8q47m383drrslkj44272s5w4gne8","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","bottomblameq4",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+T4CQN/7cwFhMGMh45ObVXHK1msfqf8yP1YosImh+qi"},"signature":"pbUz4AkdAQYtKCfvo0dsYKa01Y/ldzA3ub01Qb6j9csHPTyvU5/xLdE8hh35eLDc+gt90OsLlV5deIkGwzKx0A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g103gfgllhvz8q47m383drrslkj44272s5w4gne8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["bottomblameq4"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+T4CQN/7cwFhMGMh45ObVXHK1msfqf8yP1YosImh+qi"},"signature":"i+5H4eDA8+vI55vwJNBIiSARJtGZZPuuuT5kbhucDLUN3pZWDAnAOJPxcPUBZ1xsdToMqQC7jvYx36F/lpk2dw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g103gfgllhvz8q47m383drrslkj44272s5w4gne8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1862","bottomblameq4","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+T4CQN/7cwFhMGMh45ObVXHK1msfqf8yP1YosImh+qi"},"signature":"plRHdvDC+3WGUfXYFnXvA+LjpWrPFeF7r3w2+N8QEzkB1fKvkcg70P36ae6ex6OoIx6dXxLgX3IzP1aXSKoxdQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g103gfgllhvz8q47m383drrslkj44272s5w4gne8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1862","1","1","g103gfgllhvz8q47m383drrslkj44272s5w4gne8"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+T4CQN/7cwFhMGMh45ObVXHK1msfqf8yP1YosImh+qi"},"signature":"FW56AraXCvRmFsfbmZf/G9RuCs95uCA+X/QkISazYu4BP7fqD7t2NkUZXyUdnumVZ1VrY9hj+pLmyXiy6fUOzg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g10qfcwqdp30lf6kj0rztkcdajz8cyh9m9sqsefq","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"/PFFvMSQVqYIw6q8ItkgUCHyS5ZgRzNJXFcYloDrNJwJ7nY3+9cL70z4S9LpZx6o/ccXp4HalrV4y85Ws5GAEg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10qfcwqdp30lf6kj0rztkcdajz8cyh9m9sqsefq","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","juiceshedf6",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ag6AMkdCcpSfP8YFGNOpfI0ZAHOcnnxvAPVKzcgL38WZ"},"signature":"yctlEMkKLWZqN3DyvwBl8ZxypkV3kI2/wfMq5pKGDgVunvmAa9NSslaPmdxAtVXfGT18csclUCv1IxRmXbebJw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10qfcwqdp30lf6kj0rztkcdajz8cyh9m9sqsefq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["juiceshedf6"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ag6AMkdCcpSfP8YFGNOpfI0ZAHOcnnxvAPVKzcgL38WZ"},"signature":"n3hgZUnIZgeqtHR1Rh80iW4FkEQUQu1wrxZAd7YLhJoVF3XOXpGWbIsacJ3kZT97osxMsZ99pKEi6oVvgKcIJg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10qfcwqdp30lf6kj0rztkcdajz8cyh9m9sqsefq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1863","juiceshedf6","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ag6AMkdCcpSfP8YFGNOpfI0ZAHOcnnxvAPVKzcgL38WZ"},"signature":"Aitom2OCz+QO2LWMuNzTUsDjuVIe6d/2z7nIPXy8DoQZ/xu28tWEfyKcXKeckIu94Gzg4ZnSj4QR2YL/sKF4Nw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10qfcwqdp30lf6kj0rztkcdajz8cyh9m9sqsefq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1863","1","1","g10qfcwqdp30lf6kj0rztkcdajz8cyh9m9sqsefq"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ag6AMkdCcpSfP8YFGNOpfI0ZAHOcnnxvAPVKzcgL38WZ"},"signature":"6+wCXG1gJFE5o01/WYtJLvdWfqQTuv1ZCILn31mVmHAWI5J4FZVSvXe0dPBTBglMsoz1tn6RxoWQ2D8fhq+j6g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g10zeltasvef0c5dt0wgnp7p3kd8hxjnk9lyusyp","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"iWeDVv74JPLX6lbkIg3w2fUejA5e1li9iK+7c9AmWDVfUhyZs9yV16K1QT0IbLFOQBVJ+ec3kcuHFbNmaDvdyg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10zeltasvef0c5dt0wgnp7p3kd8hxjnk9lyusyp","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","hiddenrawc5",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6FQ0Sh5cgLg9n/8r2cBoCtzBbLqK/Hy9ZYcCVxe2aWL"},"signature":"eO2TQZz1T0yy+Wx89zpP7FulHsVC3+MmfX7nfjvQurFnwYE9GigbCbN30w3dsHN9JqgktIKW6vQwnKmSV0BF+Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10zeltasvef0c5dt0wgnp7p3kd8hxjnk9lyusyp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["hiddenrawc5"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6FQ0Sh5cgLg9n/8r2cBoCtzBbLqK/Hy9ZYcCVxe2aWL"},"signature":"3yu2fg7MMUQzLvcP5dDaGVBJUsLgS7gd/E4sGvSrGD8P0oLADQmvrblPnHreXkEDYivwJdLoHHUDqyZAhf1teQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10zeltasvef0c5dt0wgnp7p3kd8hxjnk9lyusyp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1864","hiddenrawc5","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6FQ0Sh5cgLg9n/8r2cBoCtzBbLqK/Hy9ZYcCVxe2aWL"},"signature":"LclRRSoCJypGeu7h/KCUh+0fBNZDQQotCBZm9mX6NS9YmcUGYR+hw8RXIsBBvsoqShYfaQJTWyCIxXofnB/trg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10zeltasvef0c5dt0wgnp7p3kd8hxjnk9lyusyp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1864","1","1","g10zeltasvef0c5dt0wgnp7p3kd8hxjnk9lyusyp"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6FQ0Sh5cgLg9n/8r2cBoCtzBbLqK/Hy9ZYcCVxe2aWL"},"signature":"zWUkrHZBVW3OHJDX2YK+O+N/VJzZtWuczwD7hmubC2kvDRzRRiu1CbHeLG/EgmuxI9Y7Ci2q8aS3VqpTZ62Bug=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g13563y40hnxjffds0r20mfpz8dn3xr9923xuuna","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Gjupohx5Nkm2qOUCtvld4ph6eHzmm62M0Y66wk/4+KgmzjtO+viB9cjoBy9JXhG6V88TLlgE83Ex+p9HPqiZaQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g13563y40hnxjffds0r20mfpz8dn3xr9923xuuna","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","dwarfcanyonff",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvD8i4Hb76TyfrvuczGBvCtdtI5TADeEYxUBanCi6Elu"},"signature":"7lZ3e7QjpGlE6iIeZIyukj/EKkXMIiEPvzym8QxQn1xqq3WuscOY4nQyhHWLohfUgUBBVm2H655M3Mi+xYrhAw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g13563y40hnxjffds0r20mfpz8dn3xr9923xuuna","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["dwarfcanyonff"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvD8i4Hb76TyfrvuczGBvCtdtI5TADeEYxUBanCi6Elu"},"signature":"Nju+rKBcm4bOhNZBkf2a1tWFzIMpcd8VcV2WzerHCmRMj+xPtcjIHxTpOB7HmfqvgjWS+jOJfzKsGjHmXaBbbw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g13563y40hnxjffds0r20mfpz8dn3xr9923xuuna","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1865","dwarfcanyonff","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvD8i4Hb76TyfrvuczGBvCtdtI5TADeEYxUBanCi6Elu"},"signature":"aa3CSWpL9HsvZ3nwj3vkj4g7S1tiWj84iUvoO27CPe1/rM98vSiq9cBX2gCfNNeDP90G74vzsnivTEGJcGmT2Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g13563y40hnxjffds0r20mfpz8dn3xr9923xuuna","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1865","1","1","g13563y40hnxjffds0r20mfpz8dn3xr9923xuuna"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvD8i4Hb76TyfrvuczGBvCtdtI5TADeEYxUBanCi6Elu"},"signature":"pYQPnqgvgyNIzfgE8gDKVgsT/b8AFexZerVymiHQaBAVexiPSg8mvwN+aX/j7TXdccJBgfMvBY6KUCcZT+GQmQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1m68g3safks4mn7c2qlm883gyn9zewtr909aac3","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"LJHIyrumBpsl7oR1pEHYXAGQFySant5y46GcDtp6+Mcx4Qpyp22hj8tgf/cItrX8OnDsZi65n9LEGoKAGYriaA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1m68g3safks4mn7c2qlm883gyn9zewtr909aac3","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","gritpairmn",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Azjdflg36dcOv8O9IWXhibpKMK+f5/vb4/V0wKDMF5oh"},"signature":"uOadVXgsDQqwa0Nt/5UIAQIcAGpGq8D96xYW3OL6p+FAb2qPWXMSuy/EjHJqsEfp2XbiTQR00zjiEgkDpwCoxg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1m68g3safks4mn7c2qlm883gyn9zewtr909aac3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["gritpairmn"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Azjdflg36dcOv8O9IWXhibpKMK+f5/vb4/V0wKDMF5oh"},"signature":"ccHa5gTEEFAYasrdspXIosnFiCg+1un947wCSu4ZNPgOnrxXAzFfGzkM2ax6KTMWWZbq999Vw0fQvRQX9KGmfg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1m68g3safks4mn7c2qlm883gyn9zewtr909aac3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1866","gritpairmn","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Azjdflg36dcOv8O9IWXhibpKMK+f5/vb4/V0wKDMF5oh"},"signature":"9FJC2byBQgJ6+iO62TkX4MlLXyZNZIAG0rZ6p821wSBkepACcU/61W5VoLxLfNc4lzhgWQayv1PN3krVSBkhCQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1m68g3safks4mn7c2qlm883gyn9zewtr909aac3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1866","1","1","g1m68g3safks4mn7c2qlm883gyn9zewtr909aac3"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Azjdflg36dcOv8O9IWXhibpKMK+f5/vb4/V0wKDMF5oh"},"signature":"Z87Q+9NHDPxekd2nFDRYV9cuiezMR0nGZWOtHYoDFjBliR2iHHoNL2euB73O9oO90RaJtq4le5VwLEOymrA8DA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1dv8adpqfwjvld2qnxyy62j6p3t8kzfhh5wv359","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"EVFDRhQMDH/v6rD948KNaRW3DUzh/mpl4tZYqOLJdpI7A9XZYJUAaPrH2W5sXH0Z1w6PHq1hYtzbaGARV+fsDA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dv8adpqfwjvld2qnxyy62j6p3t8kzfhh5wv359","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","aprilinheritld",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+jjMMpfYvmGpf01rnQj01DbIS4igMynFo4+SJkc7dbm"},"signature":"OXK8pO9hYrdN5IaHWcXmFJXGv9RIzt2QuFywBJZVvh4iVleW3SfgjvL0Eu1AxHCL6cooyGNuQIyPiAfNAJzq5Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dv8adpqfwjvld2qnxyy62j6p3t8kzfhh5wv359","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["aprilinheritld"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+jjMMpfYvmGpf01rnQj01DbIS4igMynFo4+SJkc7dbm"},"signature":"vMDbuD1kp4SaH86ItPkaNtDm3ft7boctDCmE3di5CsIhqF0VquLBsZOUcrf+7psoj5NgYqbV/UQB6rDcTysVsA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dv8adpqfwjvld2qnxyy62j6p3t8kzfhh5wv359","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1867","aprilinheritld","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+jjMMpfYvmGpf01rnQj01DbIS4igMynFo4+SJkc7dbm"},"signature":"lSTqaDyvtw2zrxxKHA40iayzuHUEA3vN2YbIDLIlr0YgsB+UwEFJeNkoIJ4OoKnN1GcLDy97G2Mn24K3r8QNFQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dv8adpqfwjvld2qnxyy62j6p3t8kzfhh5wv359","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1867","1","1","g1dv8adpqfwjvld2qnxyy62j6p3t8kzfhh5wv359"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+jjMMpfYvmGpf01rnQj01DbIS4igMynFo4+SJkc7dbm"},"signature":"Qqeuycv3+2UBur3Hw9xf4NXls3AWTyzpCqiXhTct8P1Ef4vt2rTfrJV+Qu76cWOQ3/Zzet3Hdkn7CUdT6+S9Iw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1tzh3d8d44v30h8xeqn8admv50nmegrk4plq5kq","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"q0dVj6JtnWmSQ3SvjqIvOutIGZ7SgEkmozfKmz04/M4ITcWdE51v3JsyYBMgE824z+FYZxwoqYXkQz4vIj/5sQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1tzh3d8d44v30h8xeqn8admv50nmegrk4plq5kq","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","raresustain0h",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Az0f1mHx8DejgvoFALWGMdCXxuuYn0u91XnOLTpJHSCz"},"signature":"usD73By+Jl1i8ywZgjjlAezaj7EjDy+h6dmEO3/Hmql+SjCABf307F3JdU7aIhI/k9rMiSwNXFON1sT2QgN7aA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1tzh3d8d44v30h8xeqn8admv50nmegrk4plq5kq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["raresustain0h"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Az0f1mHx8DejgvoFALWGMdCXxuuYn0u91XnOLTpJHSCz"},"signature":"Jo1fq/ouZP7NNZLjAYo6jx5ta1G8NHj4fSwlYcOPzqJy4V9VASOh4i5f/B1lWiFzf6syayNbn2gI2eVFzFqqUQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1tzh3d8d44v30h8xeqn8admv50nmegrk4plq5kq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1868","raresustain0h","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Az0f1mHx8DejgvoFALWGMdCXxuuYn0u91XnOLTpJHSCz"},"signature":"AKmFDgDVsXycH6kKC5N0cvGn8NxwVrh6CoLRzrE9WJUNMKivILgbOPox0QvlU39qF6E0rttgO7dOQp2++5KO7Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1tzh3d8d44v30h8xeqn8admv50nmegrk4plq5kq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1868","1","1","g1tzh3d8d44v30h8xeqn8admv50nmegrk4plq5kq"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Az0f1mHx8DejgvoFALWGMdCXxuuYn0u91XnOLTpJHSCz"},"signature":"7r4xvc/6QGq0cT2ZFJPvQwtZe+uCqsD2kucXcoeq6IwMLQjMM/yK8PQIjUYDIl8Doq1iViCEKkvNRruUbI1N4A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1jphcuhjzv3xh05m679zyrf5l02yp0tepn4j8lj","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"I7OgDkQbvSzH2pd6L0zOV0N3WwBzRfbChc823drhjNQJW1+xU3KBQKDOMcCuUptSd9mMldKptSLrcysM8CQrSg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jphcuhjzv3xh05m679zyrf5l02yp0tepn4j8lj","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","staterebelh0",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AysxEmKcEJNDLQ+Xa1MEtHKedfkZxevmer6S6SXlelQR"},"signature":"6mFHrMnEw0A4z6aFY3HZdpnAPsIbJl92xJWWIosUSXkKsVVfZIwYBz6JUR53SAm2p1/aYyxxDE+Isp1C82W1gA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jphcuhjzv3xh05m679zyrf5l02yp0tepn4j8lj","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["staterebelh0"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AysxEmKcEJNDLQ+Xa1MEtHKedfkZxevmer6S6SXlelQR"},"signature":"P9qSQ4pKivDXzE+F6JHU1b6u0ium6NmiZjthWrzsBNYe6vtzf8AsLMNk4KhIsCtRhJ6Ye11GqIwXeLIpUcwHjg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jphcuhjzv3xh05m679zyrf5l02yp0tepn4j8lj","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1869","staterebelh0","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AysxEmKcEJNDLQ+Xa1MEtHKedfkZxevmer6S6SXlelQR"},"signature":"UIw2Yn3GawBrMNcQhjkmx166M1LOq6VlTj0bFEX9hSFp/xCvkNA3x7ThQ7VkAyg9a789/MpSYxAgX2fCw/4xkw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jphcuhjzv3xh05m679zyrf5l02yp0tepn4j8lj","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1869","1","1","g1jphcuhjzv3xh05m679zyrf5l02yp0tepn4j8lj"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AysxEmKcEJNDLQ+Xa1MEtHKedfkZxevmer6S6SXlelQR"},"signature":"SnhdJUWE9g3zIqn+HfayCW6jLwnz4enZWtYNs1/5DU8O2L8vEpBrqhvwk67NSWQhrnOvdKKKQhzB9knZc26xCw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g14xdsv76nlk5twz7g2c47tttq24w986ctxwz9v8","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"jO0yl+KuFIMbZm5UIO6vkcEqqCPSB/SvjoJpysVv9tJbltfzq0u+9oiUIxbSXoJU83pHAVx0MZLSHv2H6A1EDw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14xdsv76nlk5twz7g2c47tttq24w986ctxwz9v8","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","electricblasttw",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0jbdKXoZOCYMeSjO72tP05pU4mguAv1hrqosNvH2NYR"},"signature":"8W+bmBTCTnOyPQcoCz+g2/1Fe4nMKkhY0G0N/GIpw8sfqkgDvlvcz8h7IjBFX9YGIK1Diswy12gfyNesVEOZkQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14xdsv76nlk5twz7g2c47tttq24w986ctxwz9v8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["electricblasttw"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0jbdKXoZOCYMeSjO72tP05pU4mguAv1hrqosNvH2NYR"},"signature":"lAW7HSDicj36Wr7q1wHs6aUfSqFmYLnuMaLdiq/nG9ZRCaYoKT1H8yCavjAyV1sUF2Rc2TGiEY4Zws4mXB1fNg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14xdsv76nlk5twz7g2c47tttq24w986ctxwz9v8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1870","electricblasttw","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0jbdKXoZOCYMeSjO72tP05pU4mguAv1hrqosNvH2NYR"},"signature":"JJGsC8egXJJr9piag+bA73+towDA8hNjE9qIQgx0V8hoYknA8LZqvex8xLEzcf73z7HB7xudFWidKPl0dS7g0w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14xdsv76nlk5twz7g2c47tttq24w986ctxwz9v8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1870","1","1","g14xdsv76nlk5twz7g2c47tttq24w986ctxwz9v8"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0jbdKXoZOCYMeSjO72tP05pU4mguAv1hrqosNvH2NYR"},"signature":"hrlC+dOclYuN9D7Mmnp/R0DG3JsxN+Ojk+IRLAN3r7BiovtZ0iZtz+zOCh7twRV1dPk+RCZWDowyFWhYRtdCFQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1uffrzmmt97sq7qhtd4t3lhve5t4lfcwf547kyr","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"FW0Nv1TSMAoHYrhxbyS6xqjbu35PmDWMAidSDGF+dfJG/Iw3iunzHKtOwF0JMQnbhNLO0Evj+JGDYBttwuhghw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1uffrzmmt97sq7qhtd4t3lhve5t4lfcwf547kyr","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","dirtchaseq7",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmrsBJOdgxgvH5RxVQnAdKEmILl6xemwOmgDnL9OcbA/"},"signature":"kkDKiGihIJpPRFeBsEX1io+lrF4V8SRfR8VtgwVtkb8PdCnI2B92CFlIBxubBhZTo13TdfJAlbdUMCZJ0Lt4Dw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1uffrzmmt97sq7qhtd4t3lhve5t4lfcwf547kyr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["dirtchaseq7"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmrsBJOdgxgvH5RxVQnAdKEmILl6xemwOmgDnL9OcbA/"},"signature":"s6ioYfqsnZRJdvPiS6wIjQcIW3Z2K7/IneQNny62yn9SW0K4ioOqn2rpnrbNY37MEFXw2fcUaLAk0Fjm1dt6hA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1uffrzmmt97sq7qhtd4t3lhve5t4lfcwf547kyr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1871","dirtchaseq7","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmrsBJOdgxgvH5RxVQnAdKEmILl6xemwOmgDnL9OcbA/"},"signature":"Rn1SANmYKApyoHp2eKcsfLiajAfLtw7u4f/qy41zi/dYVk4CWy5cj9k7cOib8bCTRLX1YR2zh59TK7wMCtXvCA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1uffrzmmt97sq7qhtd4t3lhve5t4lfcwf547kyr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1871","1","1","g1uffrzmmt97sq7qhtd4t3lhve5t4lfcwf547kyr"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmrsBJOdgxgvH5RxVQnAdKEmILl6xemwOmgDnL9OcbA/"},"signature":"Vt/ISWDm7r0H5TyKI0m/fWQVYwmuukaxL6/xdO154Mcn2OGVznqZzzjiTvBp7qhTUozhJio+p1PJ4KMsjqyNeA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1hfu0wkyutv7ee9sj00jc0e5qhugs5wcq7eqfxm","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"HvJTN8/odYv7UY/yr8aV4v6t3JK6gwuzMIum9amAws1eMsTW5BH5eZC4+qtQKPgC+x4Z4uBt3zB8h2xH3z8Uvg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hfu0wkyutv7ee9sj00jc0e5qhugs5wcq7eqfxm","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","doorwateree",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9BQnqtlexwndWYJPbqS7p1wdYZgoq4FM3apmL1AWAqc"},"signature":"eW3Lfmtq3DRVMUHj9B6wGIre0VppQgV65729wOwvMb45kHN08frtF9Y0Iki01RPWI65+lKaaeqzaJjaXMtQ2jg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hfu0wkyutv7ee9sj00jc0e5qhugs5wcq7eqfxm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["doorwateree"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9BQnqtlexwndWYJPbqS7p1wdYZgoq4FM3apmL1AWAqc"},"signature":"U/BV6IC3VxY6LL2p0J1PX/UiE9v+VOs2dDU52UEmryR0e3eB6TAoSsrVHEnQ6kfy79+GjFJZ6JtJfLAlBwZRwA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hfu0wkyutv7ee9sj00jc0e5qhugs5wcq7eqfxm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1872","doorwateree","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9BQnqtlexwndWYJPbqS7p1wdYZgoq4FM3apmL1AWAqc"},"signature":"Na/onZfotAXdT4mU2WrOQrIkZZPO65KGvHUtX1om+YkWhvErLADeuQgq9tIYw0cOLdiv5pHiirHUJeG4RUn6DQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hfu0wkyutv7ee9sj00jc0e5qhugs5wcq7eqfxm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1872","1","1","g1hfu0wkyutv7ee9sj00jc0e5qhugs5wcq7eqfxm"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9BQnqtlexwndWYJPbqS7p1wdYZgoq4FM3apmL1AWAqc"},"signature":"cvtYqm0vWLxu9oGf/4qRwrMb6i26zQ5Y23aDHKtSwGlMAL8B4McRNASW46G3Z94CP1B6BlM6l36MsZpFS3QBwQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1qg4ncgy6s48r5wnquuc7507ahh6gzswmeprjcz","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Wq7ZNwDWE2A7x5xFbiAvQ4twdunSees7ZjfAzAzWfJ8UaOSI4QZ+lxrZmSTbmE9EJBhcqonBiqdtf6jQEZShrw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qg4ncgy6s48r5wnquuc7507ahh6gzswmeprjcz","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","alleyrhythmr5",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxYiO68YEpnYaC2fzTTxAtU7qUVNZFIRQiiJu7f9WLbt"},"signature":"AN8ceM0ek0ws5wJhrEdf9dODtQqGCkrqcSMOfdOEihRcKEMmW8tIfopJbyo0xjdI2OBvjqzTtfNFbXw7eE2RWQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qg4ncgy6s48r5wnquuc7507ahh6gzswmeprjcz","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["alleyrhythmr5"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxYiO68YEpnYaC2fzTTxAtU7qUVNZFIRQiiJu7f9WLbt"},"signature":"Dy8URXQyq7DSnC/1Ko7GXfp05oaJeNuc7prhgfNMHm8P+3xu5Fm6vQRPYcpOu7ojStCgff6vHFPt0xwhiDzsbw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qg4ncgy6s48r5wnquuc7507ahh6gzswmeprjcz","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1873","alleyrhythmr5","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxYiO68YEpnYaC2fzTTxAtU7qUVNZFIRQiiJu7f9WLbt"},"signature":"Mxa0JauWh395vs7gWkBbX14RXuWCpPYW3uphAgJnB8gKYDjqXuh0FYAJXwy0bxA5GDm23NQzUNpJgK/STsvecQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qg4ncgy6s48r5wnquuc7507ahh6gzswmeprjcz","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1873","1","1","g1qg4ncgy6s48r5wnquuc7507ahh6gzswmeprjcz"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxYiO68YEpnYaC2fzTTxAtU7qUVNZFIRQiiJu7f9WLbt"},"signature":"ngRQ8DMqWdhQqiLKePyoOVuNHqaMAXLoE2xJf1CUpexN4DQgoFP/0gywKpBFE0eD+sT4U6/XWZw1MZBixTiktw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1ujwnt764kw2frle8he7ggw95uruegalk7epj6t","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"UD80qxen2dVlPnU/WnNaOqmdJre1mIWjskvyiKQFOCYBrvKKIXfluoKLjlCdL8aPhqULhIydn/ybOVVTLHwX2Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ujwnt764kw2frle8he7ggw95uruegalk7epj6t","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","bachelorpulsefr",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A33Vv8PCwOJpIEUNewXM83or2HZbgBHscx1bUBq7X6OG"},"signature":"KMw8k7lMo68Qu6xvZEfd4CEC0TuNikdbI6TIVsL00w0YdUyHNAT1GJxQ40Z36pwn9FPjGmFDPOJDz+9ftKfHlg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ujwnt764kw2frle8he7ggw95uruegalk7epj6t","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["bachelorpulsefr"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A33Vv8PCwOJpIEUNewXM83or2HZbgBHscx1bUBq7X6OG"},"signature":"gpAquUro7Y/FDCPXhXC36kJR7eaizwwyEhsDrg2ftKgpo7Bll3PceI17QdDf6RJJd6KbPCNcUQtRSziEt8+slQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ujwnt764kw2frle8he7ggw95uruegalk7epj6t","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1874","bachelorpulsefr","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A33Vv8PCwOJpIEUNewXM83or2HZbgBHscx1bUBq7X6OG"},"signature":"P8Ysy/JfW3cXcLuhLTem/Fgu1YuNTuv/drbfLIEAYHw4IlfVF9/gGAJihhDq/9oEk+6cAesqIqOlQiwfRGSpJg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ujwnt764kw2frle8he7ggw95uruegalk7epj6t","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1874","1","1","g1ujwnt764kw2frle8he7ggw95uruegalk7epj6t"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A33Vv8PCwOJpIEUNewXM83or2HZbgBHscx1bUBq7X6OG"},"signature":"VcJ7akjhmu5QvWgbuKQQe0LUllzYZ3Rs5M7XxPwdLAYiFZ0W+V2d+0PTjlE85kAxaYBLlmMx6668/mfFHnfxJw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g10j6egx8ph9atqgx79jzw9pf9vfxpmpfgader8s","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"jj+a5PlJwOAnEIFU0i0x1wVPuhnp7wy8GZFxvms935gFvM/cE6giVn58J8dizNP/kMYEhs/ExxFLgYmwthZRXw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10j6egx8ph9atqgx79jzw9pf9vfxpmpfgader8s","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","sunnywingtq",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjhU+iozWmy5rXlniu2MYuJqlTVd51cJdUOTT33HdIs4"},"signature":"6cAG5xz+qCt21pL6GcCCoRyinNBaBc9/nCx6E1HROq471s0RDspUjXDV+G6PYU7d6eqFA+QI6/E6hN2x//Eq6A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10j6egx8ph9atqgx79jzw9pf9vfxpmpfgader8s","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["sunnywingtq"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjhU+iozWmy5rXlniu2MYuJqlTVd51cJdUOTT33HdIs4"},"signature":"TiR64K2XjVYTeTtOQVVRA0YI8FXA9AlKvNRswCkjKxI9cEWtegusgjWfULw9WP2UduO09eYBlgvyljwPTSXzdw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10j6egx8ph9atqgx79jzw9pf9vfxpmpfgader8s","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1875","sunnywingtq","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjhU+iozWmy5rXlniu2MYuJqlTVd51cJdUOTT33HdIs4"},"signature":"5KxY/DM/NAQbUxFCrt8I6hoauIwaopdBgKq4oujOnpFir+fAG6S45Z/bTjuKPjLRPlNmJDrwQDWV9iwhbFcsMw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10j6egx8ph9atqgx79jzw9pf9vfxpmpfgader8s","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1875","1","1","g10j6egx8ph9atqgx79jzw9pf9vfxpmpfgader8s"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjhU+iozWmy5rXlniu2MYuJqlTVd51cJdUOTT33HdIs4"},"signature":"Sh2mAMxUbnaS0ZEZA0FJS84wzSmFslFtzRgE/XG5gSgzIfYN5POU7IVkOefgLpk4pRb9WH6xqxcfNHmK4qCkYA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1lpkqjwp8776t23845npqd9dmx2cx83mrx0hr2r","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"pg0cB/rLRj/rpNe81G2rRIxDSqsS4QUxo7L4nxeK3AtOjsrvkx5CSQr8KadeFH588ukLfe9SoHCHwpeZMYrVYA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lpkqjwp8776t23845npqd9dmx2cx83mrx0hr2r","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","pentrustt2",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ahm+93fT8KxIENnZIybjm9b4rWtMgwfnIUtLH97Ptl7q"},"signature":"V90DScF9lLMzXNfzJVxBg7v0+MV6aS+PWMMUOU2+X9w/2B4fK39zK9qKGnsoJ4hlwzFxkzMgmhJokY2xD0yhSQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lpkqjwp8776t23845npqd9dmx2cx83mrx0hr2r","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["pentrustt2"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ahm+93fT8KxIENnZIybjm9b4rWtMgwfnIUtLH97Ptl7q"},"signature":"2lqWgdb+zT0R0QsTV4hCXh9MYg5nNXO7Zx+KQy1kczYaEKerozqMURfA0T7qMHXOETT/LpAyH3jwtbYZp4CwAg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lpkqjwp8776t23845npqd9dmx2cx83mrx0hr2r","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1876","pentrustt2","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ahm+93fT8KxIENnZIybjm9b4rWtMgwfnIUtLH97Ptl7q"},"signature":"Y57VOvNaaxNGPMV+pu370zUsrFxqFCkI0B+a4G10WwolIFQ7SXIiTkmFTHnmtuCusBFi/BL9k/nttVJtIL0j/Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lpkqjwp8776t23845npqd9dmx2cx83mrx0hr2r","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1876","1","1","g1lpkqjwp8776t23845npqd9dmx2cx83mrx0hr2r"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ahm+93fT8KxIENnZIybjm9b4rWtMgwfnIUtLH97Ptl7q"},"signature":"iIKA+cwx7tMVxKdo/2lu6Hj0Gh9bml0zZTY/km6Kvq96zC+tfIEvIrkofehiKEeFinPbujczH3QGTOhYBcYoMg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1cgvgfu7l5j8nhumc75adf9y584qk28g27v8gwp","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"mZheqU6OJFOpTWJ8ozgMuWTdSgdrPiAfZ8RM3o/H73c0vUltaaePNOhQP/iCgktO5Bs8BOFJdG5xc0XLmN6adg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1cgvgfu7l5j8nhumc75adf9y584qk28g27v8gwp","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","governawesomenh",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A76gvhY2OyHzfGeqWjxGsHQRvzQrOxgB61mgcXzm4mnk"},"signature":"sML6H0r9QVhdzCMHenFZQNU+ofJQCbVlLBxBG0bCioQuAsIQlpSA8awKxoiVS8/+UmtPYltS4XxAUrTG+knDHg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1cgvgfu7l5j8nhumc75adf9y584qk28g27v8gwp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["governawesomenh"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A76gvhY2OyHzfGeqWjxGsHQRvzQrOxgB61mgcXzm4mnk"},"signature":"r//TqWTEUDeR0fchFYG/QYEwlDIebJH9r0eQHrtPxvsadhhylxWZPI5hSPrqWxi0dC3f9IUecmCxchifQkSFAQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1cgvgfu7l5j8nhumc75adf9y584qk28g27v8gwp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1877","governawesomenh","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A76gvhY2OyHzfGeqWjxGsHQRvzQrOxgB61mgcXzm4mnk"},"signature":"Ea8Kd+CaK2yoKzbPyto8t+QcNRRWgevqrcV2c20ZWOo3p7v+EjF8EVX3M8VJhJnrqGP+wXrJiWWE45fLFE6jNg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1cgvgfu7l5j8nhumc75adf9y584qk28g27v8gwp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1877","1","1","g1cgvgfu7l5j8nhumc75adf9y584qk28g27v8gwp"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A76gvhY2OyHzfGeqWjxGsHQRvzQrOxgB61mgcXzm4mnk"},"signature":"NrlNHH7Pgthk9afiAUKWWycDy5DlFT9vqrB4b12UaZkPlfCDACkKYtm0cPQm/9iiH/7pzje+Y3ueyigxrvo5cg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1wc83qgdtcu4qjx0nsnlrkkpjnvnnej9583jn5k","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"m+6R7+shgqcELRo7tVG71QGfcyV5jQxoSKDKvkgwFBczSEax+55IKhN/wG+oxCQs/LAjWjd623PG3UgG4ieCZg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1wc83qgdtcu4qjx0nsnlrkkpjnvnnej9583jn5k","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","actortowerqj",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Agh8pWphA/NPBU5eK7bclaxIUwoxhhpz0sBDtzalzKmO"},"signature":"bg2KWRIhAUYYnbMGYjwm+9M/bUAkR1eGfDXg70Ae1swZkulN/pgBdZfisfz3npdK8PImuWoLm3+DzQRQKoyiqQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1wc83qgdtcu4qjx0nsnlrkkpjnvnnej9583jn5k","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["actortowerqj"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Agh8pWphA/NPBU5eK7bclaxIUwoxhhpz0sBDtzalzKmO"},"signature":"Q4Xmt4gWUxWNRkVEgeFl59uyRq8eMIEwYj6kfJ/LlBRTFWQRL+0Vja0bRFhir8fyenKhQsa6gxQCtXwacxAs0w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1wc83qgdtcu4qjx0nsnlrkkpjnvnnej9583jn5k","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1878","actortowerqj","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Agh8pWphA/NPBU5eK7bclaxIUwoxhhpz0sBDtzalzKmO"},"signature":"nIfyVk5/hrpGemDsD2AnDY8HTR4JE7HiRtRjiNNSsoMW1h+ShsI0puVSL3LtU3HSBmimN6AGmwbexYb5pIntuA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1wc83qgdtcu4qjx0nsnlrkkpjnvnnej9583jn5k","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1878","1","1","g1wc83qgdtcu4qjx0nsnlrkkpjnvnnej9583jn5k"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Agh8pWphA/NPBU5eK7bclaxIUwoxhhpz0sBDtzalzKmO"},"signature":"KuK4y/b1bTsLEIaNL1RJhF/cd2CyxqbzYm5UAHUBXnNIuRv5cGacLuHbfKl/BMgyHyJukouAOpaWEKpQzXA8Ww=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1e3d3ax84lukyg9lz6dvdsdkafjarex4v9jrhaa","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"9GNvAcfHnbCCue/sNAjuCXLafjLCaBrlzNITc7V7RTwqxy1wJn6Gy//vnXBPxkqX9oOsP4cCXKiP9wCXZjPmug=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1e3d3ax84lukyg9lz6dvdsdkafjarex4v9jrhaa","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","glidefancyyg",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoR7a2mmm35KkhDADnCNBYJY1AWHVgfAwQQt+inHdj7J"},"signature":"Uywtl6cppSbZg7kAoP7ov7abqwwy7Vi/gJIqd067P9RD8d0vbV42oz77T00412twBiatZ6sI/tghhIJJQCwizQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1e3d3ax84lukyg9lz6dvdsdkafjarex4v9jrhaa","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["glidefancyyg"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoR7a2mmm35KkhDADnCNBYJY1AWHVgfAwQQt+inHdj7J"},"signature":"viGb1kA+LeH/W2NVLYiIURzwII/shPe48/axkDY2cAt5ieIBNFa7HjfK/AqLu0kWocecnALxcryvdJolcgIbDQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1e3d3ax84lukyg9lz6dvdsdkafjarex4v9jrhaa","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1879","glidefancyyg","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoR7a2mmm35KkhDADnCNBYJY1AWHVgfAwQQt+inHdj7J"},"signature":"357+53kUJV5nnKpSPtYFi/LgpGzHFnd2aMgU5GBLA58wSp4IJGu0iH+bnrqZvLmTstH+1+tZSsDSyuDYWDQtJg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1e3d3ax84lukyg9lz6dvdsdkafjarex4v9jrhaa","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1879","1","1","g1e3d3ax84lukyg9lz6dvdsdkafjarex4v9jrhaa"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoR7a2mmm35KkhDADnCNBYJY1AWHVgfAwQQt+inHdj7J"},"signature":"cQ1MuWUz6kdE8U0Z8P5EvnjXDdHibQ5KJIFdvfXaOv4465afEJOGFkovgWM63Vr2AtjuDR5t1V7qlJ9vSit+Dw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1fy209ff9hdcfuh4afscyrphrwaduu0kkaeynwh","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"yZmlwq58eMwrJBQusPvErU+VPEGxeU95xqGx7MpHt5sVO2m+jvhoxz5pVcB+vZU3oWTVs1ikR6ri/JnP4iyIMg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fy209ff9hdcfuh4afscyrphrwaduu0kkaeynwh","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","tornadogesturefu",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aipm+F1WWtGBG9VBLXszDfwmKST/l5B7zWcnfPggyMiZ"},"signature":"Go7Guq8T6oIpaS2h0ogWEXIWtg5pHCU2f7PXCfy0lO4Yfv91Kf6H1kxoFsolsLKcRd5SAtEbwG54NNJ914yjVQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fy209ff9hdcfuh4afscyrphrwaduu0kkaeynwh","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["tornadogesturefu"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aipm+F1WWtGBG9VBLXszDfwmKST/l5B7zWcnfPggyMiZ"},"signature":"VhYJAoUM2486cjTvblAJCtdeaaSnUpXKcxvbKP3ME0gqL6yaxJ0B5dGmTmOUPzeUkodOAs6MMg9SlA9VN2fByA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fy209ff9hdcfuh4afscyrphrwaduu0kkaeynwh","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1880","tornadogesturefu","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aipm+F1WWtGBG9VBLXszDfwmKST/l5B7zWcnfPggyMiZ"},"signature":"nU9kJaE2+aPmioVM+9fhQqxWL5/9iz8CxnmUypPXQmZBa5GRR8inSX0FpftHT0TekKqggtW+6lDk6FyOwSR2PA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fy209ff9hdcfuh4afscyrphrwaduu0kkaeynwh","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1880","1","1","g1fy209ff9hdcfuh4afscyrphrwaduu0kkaeynwh"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aipm+F1WWtGBG9VBLXszDfwmKST/l5B7zWcnfPggyMiZ"},"signature":"B7HuHnncs5902JB2sWYBtwkSCbFma7Py/h2W5jJVRIcZ6wB5ko9mVHUZ/Lt+UlwClqOrMipu5T2v3Xpi1EydZw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1lle5sfrqz9ppy97lucs604xa88vfstx6y3uvyf","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"gzwOuyPv4bNGaaLdHqIvg6azBokDHmGGcG7HE1eI7NACohkhAPMzK0TiBYhe1/BnwxN7WLUx7eBUNsFo0acfkA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lle5sfrqz9ppy97lucs604xa88vfstx6y3uvyf","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","bleakrosepy",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjO8H6UfmTlWDr4A+28E9iMwoJk6cznllFiIxaUmcp2J"},"signature":"D8+cRn1ptSEbaYj37C+LEJufjGVgZPt7FYurfEQyWCNlsfnVhLNjC3gu9dpijrBjWuTA0ls98s1dkZQDAAcMFg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lle5sfrqz9ppy97lucs604xa88vfstx6y3uvyf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["bleakrosepy"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjO8H6UfmTlWDr4A+28E9iMwoJk6cznllFiIxaUmcp2J"},"signature":"qxmZMIy74yA766Sls70o/vBB4D9OAOIdFFWJcUO5HPNwGJU+s6eQHS3OTCsLvv1a4UKZ/xzTcwHfdkvKhoggCg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lle5sfrqz9ppy97lucs604xa88vfstx6y3uvyf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1881","bleakrosepy","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjO8H6UfmTlWDr4A+28E9iMwoJk6cznllFiIxaUmcp2J"},"signature":"bWGPxVB9CBP4YGc6PQmja+xQWBYBhzvXBMq0Grnm/248bgE45JDYjPR6hGLIzD+fNK5D9gQjTo4sogl+rSKa9w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lle5sfrqz9ppy97lucs604xa88vfstx6y3uvyf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1881","1","1","g1lle5sfrqz9ppy97lucs604xa88vfstx6y3uvyf"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjO8H6UfmTlWDr4A+28E9iMwoJk6cznllFiIxaUmcp2J"},"signature":"gTiUy8WVHfC+19u40BkAunFsIvfhF0o8PmsR4F5sNHs7UNk3ieow0RAXxjv2hxboLViLTE3NuXdlS+5z3KLTvA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1f5fnme7a4klqr3mkjcu0galtqgcaugr7dgyfke","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"P1PgP/l69fKZnemm0Ga4fx0YELUNKoZAUoLN5lQiuul8XyM2dnLT/2OjDE8YLE4+BIpFf60kFwD7WBGELV+wpg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1f5fnme7a4klqr3mkjcu0galtqgcaugr7dgyfke","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","theoryscatterqr",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqXE+Cm/vQInQ1i8eQH1sOhxrthg4qVgVIXFoWY6QDbi"},"signature":"rhsBRq+90D7y3p5R6qYbbU+o5/znxKYvKv4J2iD7oxAni2iH43kqSWC/2hPS/U5NlFcFpITCSwIJno0i6ENuEg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1f5fnme7a4klqr3mkjcu0galtqgcaugr7dgyfke","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["theoryscatterqr"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqXE+Cm/vQInQ1i8eQH1sOhxrthg4qVgVIXFoWY6QDbi"},"signature":"IxzsSogc3255e8628PYpzzQ3afzXkQKz4IJF3GvHRPleqYnrFJ0ytKRFLjklP2+5C0WN+nR8TjpHY2ofEqhwMw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1f5fnme7a4klqr3mkjcu0galtqgcaugr7dgyfke","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1882","theoryscatterqr","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqXE+Cm/vQInQ1i8eQH1sOhxrthg4qVgVIXFoWY6QDbi"},"signature":"miDw549Yog60Z494tlSwVCruLTQSnnodOIu/3b/v++F3vkMVUeF4olHnpxlzhiUTZbVBUae7v7ohUZ/OPHDWmQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1f5fnme7a4klqr3mkjcu0galtqgcaugr7dgyfke","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1882","1","1","g1f5fnme7a4klqr3mkjcu0galtqgcaugr7dgyfke"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqXE+Cm/vQInQ1i8eQH1sOhxrthg4qVgVIXFoWY6QDbi"},"signature":"GQqnHxym187ohFLxbZGpENkHKxyz8M2QyUsbvHUbHNADS1JUxoI1PXZVNHI/enHMXCBhXdGP6fRiQSoSkJtv8Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1m4t6zx5hc09w0eq03h2rc58dmhz7ws7pkjd5f2","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"kF2SGlJnQB9kKRpNu+faROR0fypfLwfbh0U24ITw8yQcEejTCol9INrXm2O84GFVKwRDdSyetW/nwZXeMNg5QA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1m4t6zx5hc09w0eq03h2rc58dmhz7ws7pkjd5f2","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","salutebridgew0",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aqf9pPMH9yPgj7D03Zlv8xKozqjXVNJu7uORpQPf/7nb"},"signature":"J7A/fuuqLOypKENEq4UcVbfBsd3KUvwzB6bBE1WTgzdMVZdbCeol0wzWYYMlHhe95WaqHOy6gW/9X58+o5BoOg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1m4t6zx5hc09w0eq03h2rc58dmhz7ws7pkjd5f2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["salutebridgew0"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aqf9pPMH9yPgj7D03Zlv8xKozqjXVNJu7uORpQPf/7nb"},"signature":"GntgCPtBp1VvRZ82WmB25qQm22aSW3ELyLVBuqHjyt5bTq3O5T9E4Me2549Prh2/4QZM98P7LfXPKNbMq0JMjA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1m4t6zx5hc09w0eq03h2rc58dmhz7ws7pkjd5f2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1883","salutebridgew0","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aqf9pPMH9yPgj7D03Zlv8xKozqjXVNJu7uORpQPf/7nb"},"signature":"3UF4rWqQXUNRgDH00ykX9VKbYlW0OwGVJZ81n3RLYutENzT75yJO+gVUN/wt2ZHBBMvSxhqIMAFovnm9DG0ugg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1m4t6zx5hc09w0eq03h2rc58dmhz7ws7pkjd5f2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1883","1","1","g1m4t6zx5hc09w0eq03h2rc58dmhz7ws7pkjd5f2"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aqf9pPMH9yPgj7D03Zlv8xKozqjXVNJu7uORpQPf/7nb"},"signature":"Yvk1WuK8wQhiCZId/WeRqwi6iFzPdkYl2lM7PHlA7xISwYF25lgHBG5iabfTHTrEpx4JkpvonzGr71b09A+5ZQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1s48hudugjt60zsy67napcvqyy43zfcnsq80sej","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"LpTFLq2yBX0wnsl10fie4td3sj8PCyGbpwseY5CVwHkiYM8ExMcgwrEGy9jwKxrNz5W568z1ZYWms01psHOELQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s48hudugjt60zsy67napcvqyy43zfcnsq80sej","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","liquidsunset0z",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6DwOJgUVerCKZU3TtG6UGSffM3gKJh72a/I7r5cf1s7"},"signature":"gZ28CUDm1v1C6TyT8oFJH2eHHbxKBJhm9SXJqx8ikWp9pNQz68WQ1nHngjLlhpoFOTeaxeLf2OW1TMbITtSz7g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s48hudugjt60zsy67napcvqyy43zfcnsq80sej","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["liquidsunset0z"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6DwOJgUVerCKZU3TtG6UGSffM3gKJh72a/I7r5cf1s7"},"signature":"HPbuS7fBJS0Glqv3X112s4DrHTMljneKA0/o9k94Nn1pLbD5x9Gs/iusZ5iBS89Ky4Y63xN6+JlYMHNl06CdIg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s48hudugjt60zsy67napcvqyy43zfcnsq80sej","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1884","liquidsunset0z","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6DwOJgUVerCKZU3TtG6UGSffM3gKJh72a/I7r5cf1s7"},"signature":"DewnG48NAdzsC5V+Qy9ahcmLb8yX58t2fLp/3JFTVPMNUuMz6vwkG2CowY/bsCGSYNu7kB+3KRAPg2N7SFv54A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s48hudugjt60zsy67napcvqyy43zfcnsq80sej","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1884","1","1","g1s48hudugjt60zsy67napcvqyy43zfcnsq80sej"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6DwOJgUVerCKZU3TtG6UGSffM3gKJh72a/I7r5cf1s7"},"signature":"/FFbRbNXtSjsQyQf5ewiEbMcEboVEv1zN11FokwG3IM8WX4ooQdhIKh76Mbc0ao64stz04gNEU9m+FrzLNnVyw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1vd4n7d68n2ly7d6v0ltq7p0uwxaa4wl7j39nj5","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"98ygIPrOiEueiPrOOiivmgPe+mBGRF+p2r0Uf9YJQ7JOoeZ48AFAyRuIvCHM0Y2sjPMVDtdbtd8imulB6+om4A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vd4n7d68n2ly7d6v0ltq7p0uwxaa4wl7j39nj5","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","empowertapey7",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2eyF38rJMu75QNBpJCh1doacwSiXJmypUktY1DlYL0T"},"signature":"J3HeIoluZkuvVIQJu0ePlxOBjqcwRnEzPXXIP1nEEDA8jhmY7b9EpyXFbKYUnOsIUs0PdDv3aM2EjSOTkxHqpA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vd4n7d68n2ly7d6v0ltq7p0uwxaa4wl7j39nj5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["empowertapey7"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2eyF38rJMu75QNBpJCh1doacwSiXJmypUktY1DlYL0T"},"signature":"m+1O9BiyrDSdLzbUkSraGadPyLBOvNZV9wg3yRKS9GkpYk+7OlFrgfhAW1HINS7ezmopfs8InUUWQmzqMyqgDw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vd4n7d68n2ly7d6v0ltq7p0uwxaa4wl7j39nj5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1885","empowertapey7","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2eyF38rJMu75QNBpJCh1doacwSiXJmypUktY1DlYL0T"},"signature":"/VTFHYXeMTTba8r9wfbsqYXUfIptTTgssm3iEbCvTexH/RZH4AXaAR1cad19aocZjKgBAwtXfQXd6nE8RfaL2w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vd4n7d68n2ly7d6v0ltq7p0uwxaa4wl7j39nj5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1885","1","1","g1vd4n7d68n2ly7d6v0ltq7p0uwxaa4wl7j39nj5"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2eyF38rJMu75QNBpJCh1doacwSiXJmypUktY1DlYL0T"},"signature":"2CeeHA1Mq2LjLaiboG+TcGCygkWfA/iPKeIreKFRz4p9tgo5vX6vv02mwbm9AADUyaiv+YtR8vapZDUd2/5twA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1uzqedl2utqyx7p0slayzp2qss22zu4par53tck","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"1yWR6SSJem0W/BQvLsZX/fI/6jmeNBkVF21djEQBuNsHOi9WBOoCfC6gq7jgCLK9BTYYLTkAR9kkaSSaxLhmpw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1uzqedl2utqyx7p0slayzp2qss22zu4par53tck","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","arcticdestroyx7",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyGjNGlXBqKkHH7/lrvBj9xgP3k9k6KzjfTLdJqrjK9H"},"signature":"1LdxjDIidp2wrcu5a5RIfKt33iymdc6ZvJpla/PTuIYVgpUEHjumw0ujvjsypLLBBKh7YppqULMP0ZdjnRLTKQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1uzqedl2utqyx7p0slayzp2qss22zu4par53tck","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["arcticdestroyx7"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyGjNGlXBqKkHH7/lrvBj9xgP3k9k6KzjfTLdJqrjK9H"},"signature":"SSf4q6HeemqpXDsBkse+J6X0MC7faj9ppWqJMNmfXK10J2z+sDkvzY8TpzG/Mc73poMmBD7/FWdIMlxcoy5iPQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1uzqedl2utqyx7p0slayzp2qss22zu4par53tck","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1886","arcticdestroyx7","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyGjNGlXBqKkHH7/lrvBj9xgP3k9k6KzjfTLdJqrjK9H"},"signature":"IOtSPwRQ/VuyRYUv206vEQ+Nh0KhciVsC/gCGxviStpxzaEanEA7wZtAgJSqZBF0H8fHsqSHje8Twvdbxtb/IQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1uzqedl2utqyx7p0slayzp2qss22zu4par53tck","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1886","1","1","g1uzqedl2utqyx7p0slayzp2qss22zu4par53tck"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyGjNGlXBqKkHH7/lrvBj9xgP3k9k6KzjfTLdJqrjK9H"},"signature":"4usAXAvrsy2z+XtoSl8N60juoB3NemlzBZCsW+VS5UQY7KSzVkhwQPX8Bd1kjaBd318E2NVRB5hDZshgYQwkTQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g14dl2gl2tqklls4kr7vmg59l2ch6zunyys2ravt","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Gi/t/bwa05s+6DzB2aaQTHdMRQuOd1NfEp+vVuz5JGJyCnOA711m46P71cstmqapt3J1yT6fCyIvrBhYELCy8g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14dl2gl2tqklls4kr7vmg59l2ch6zunyys2ravt","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","mammalwoodls",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgKE3btWdq+Gocnoiqzbanbb+y0A//7Yksg+AUiZH5/M"},"signature":"xOPbJ1ns0uQV7xvbdd9N4W7yiCzVXJdEIxTNC38W4OMnvmAWInz3rf9aglNIzS5k5v+fkQtB+Erm65wQ4//PbQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14dl2gl2tqklls4kr7vmg59l2ch6zunyys2ravt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["mammalwoodls"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgKE3btWdq+Gocnoiqzbanbb+y0A//7Yksg+AUiZH5/M"},"signature":"lVLhxi8drHIcdsyzcn0LGtjzsfYgiaxrL4jtN4EReHJoDWV5UR/5YPcqY5VN+3JXZReLn0CLY3mqmeOoS0y+3Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14dl2gl2tqklls4kr7vmg59l2ch6zunyys2ravt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1887","mammalwoodls","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgKE3btWdq+Gocnoiqzbanbb+y0A//7Yksg+AUiZH5/M"},"signature":"qjoS8WmcT/sAjQdbgm5Bgp+ZXSfQi7Qk0JC2TvdN0MFVjvrGAy2VhcbivbtQMmNA+LVTLOD3DZpOit9EHkIJzQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14dl2gl2tqklls4kr7vmg59l2ch6zunyys2ravt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1887","1","1","g14dl2gl2tqklls4kr7vmg59l2ch6zunyys2ravt"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgKE3btWdq+Gocnoiqzbanbb+y0A//7Yksg+AUiZH5/M"},"signature":"WVFcbfk7ScstfHn3lgGTAEoSPZgD3jIoNssOdo2WtPInGcoM/fAL8/U1iLXeXEskf6r/lGDTDw3LDYSTiu2jQA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1hfn2ngzs8pkkg96tps7ahqejrzkjrpp2ygmpl3","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"J+kbY2uLYEje4nsC/5+v/Ly+RvX2koMqoyu2Jfd0fkh2TdPO6iJFRzSbA+l/Q7HUwLq5sYjcavyhg0haemMIkg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hfn2ngzs8pkkg96tps7ahqejrzkjrpp2ygmpl3","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","numberswarmkg",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ak6t29YmAOPlwMXoRViaVfVqVf6Gwaq1asb1yqBohMta"},"signature":"hkHK/L/EpkE6pH+yEbt5OHZVtCTChQST4xv4nKQZ+VFMs4L46YuGL1a0J6gAxyOY1BzFbL6ka2tuI4m6YWPJkQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hfn2ngzs8pkkg96tps7ahqejrzkjrpp2ygmpl3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["numberswarmkg"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ak6t29YmAOPlwMXoRViaVfVqVf6Gwaq1asb1yqBohMta"},"signature":"eJhJ2NF8hw8s35P5BR6VUoA3DGHFTZtK9mcKe3lnZqZMqfkvpGwVzwn/0op6VdfWGGQyCIyrcLdqE/gVsLOV8w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hfn2ngzs8pkkg96tps7ahqejrzkjrpp2ygmpl3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1888","numberswarmkg","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ak6t29YmAOPlwMXoRViaVfVqVf6Gwaq1asb1yqBohMta"},"signature":"aszhBNmVZb1/SVO5L+jUoPeUMP/ypNoPptUvcucfsVI2VuT9M0qun/lo17hYxDsylY07BBxP0MighiNTeQkOjw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hfn2ngzs8pkkg96tps7ahqejrzkjrpp2ygmpl3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1888","1","1","g1hfn2ngzs8pkkg96tps7ahqejrzkjrpp2ygmpl3"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ak6t29YmAOPlwMXoRViaVfVqVf6Gwaq1asb1yqBohMta"},"signature":"h0xmjlLu1qAKCHll3EaZtAl4yWwvAkzodCQjsKcaGKw+BrElRbnGR3zg4F5vTky0RyBhuahb/1N9wcuoQbL+KQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1nwf8ptycsca9y9hlef8ltzr0y6q3yev3xp7lz5","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"I9HYpAUd4P0nwtA+2EloK/SJhzEUJMEN4821NMEPVeIWo3MHjylTIpbn42X8XMB1G0WDq03OvFZBjeGe+cXxgQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nwf8ptycsca9y9hlef8ltzr0y6q3yev3xp7lz5","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","curvewreck9y",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiKV1LvtOobIfWQsp8Y1VKSnloYRwizQ7qfztxsGrgiQ"},"signature":"/OO+tDvPTG23qH+M19F27/NaBeBMXRVkPylIQ7rRmig2mo0wEVdhv4JZxEOsH+2eTjn48RihTLWJ6FEbB2AVCA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nwf8ptycsca9y9hlef8ltzr0y6q3yev3xp7lz5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["curvewreck9y"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiKV1LvtOobIfWQsp8Y1VKSnloYRwizQ7qfztxsGrgiQ"},"signature":"eE6MjTpGagTroXvwgzs5Yv06Zn7ZZdbiYmS5UAd7sPVPi7n4VI+a2YTREOsY63JT9/DV2zmVy6ZHa3C+iKbOtw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nwf8ptycsca9y9hlef8ltzr0y6q3yev3xp7lz5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1889","curvewreck9y","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiKV1LvtOobIfWQsp8Y1VKSnloYRwizQ7qfztxsGrgiQ"},"signature":"by+NfGiicCzMahOc44Un/YXlwpjM94RL4E5p9G3cL8AtB6sgpO/Ih/s9j17V26vM4rx8SVWPkOo7r++iWhWPAA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nwf8ptycsca9y9hlef8ltzr0y6q3yev3xp7lz5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1889","1","1","g1nwf8ptycsca9y9hlef8ltzr0y6q3yev3xp7lz5"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiKV1LvtOobIfWQsp8Y1VKSnloYRwizQ7qfztxsGrgiQ"},"signature":"cjgxOMgHUiWwcp/ZOXIRI5PCj7lwr+esCuKoCb8VrCRb3B6gX/jWg7elarWDbYQzc+w67rarrTOElX6JRlhMqQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g10pm07le3a7zterv6eaneg0fuvdmmh6h9lk5xel","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"lC5YkT0rv6zkD9OjQt6Q1bc/aqIGtNa4QO0IOfZ4aO4gFV49zQXvbuTw4EwNOLu7ioHGqmY2cgdhyHd0zOylDw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10pm07le3a7zterv6eaneg0fuvdmmh6h9lk5xel","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","eyepricete",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtfI9QsQ66XB0jUZvTG2AeWAPS20E1KEWJq8eku5cqXY"},"signature":"rsq0sucy70Jyfs20ZWbpzgtvSX02XbG2LwVg0wFjtFkA1ufwtSqQPqIisTz3CepAFCuNxqU6Ng1Wz8eE/8sbIQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10pm07le3a7zterv6eaneg0fuvdmmh6h9lk5xel","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["eyepricete"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtfI9QsQ66XB0jUZvTG2AeWAPS20E1KEWJq8eku5cqXY"},"signature":"80ibuK0r4TGo9w4A31+CeyVIy48X7U4cigstX3LUKrcYtqmrIgF4LPE+Rh7zHOvudX17CyfHXEOuxcF29hYWoA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10pm07le3a7zterv6eaneg0fuvdmmh6h9lk5xel","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1890","eyepricete","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtfI9QsQ66XB0jUZvTG2AeWAPS20E1KEWJq8eku5cqXY"},"signature":"D7fV/AYIwO+BHBlHTzgO4GDFI8SY/a+bnvztWLhZb8tz6TG+l3HiMualkGxbTJMVV88oE2/vwAjbpEiwalzNHA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10pm07le3a7zterv6eaneg0fuvdmmh6h9lk5xel","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1890","1","1","g10pm07le3a7zterv6eaneg0fuvdmmh6h9lk5xel"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtfI9QsQ66XB0jUZvTG2AeWAPS20E1KEWJq8eku5cqXY"},"signature":"ziGbNBMr+U6YVvNRmq6z4wtAHyBOftVwlEJmD2CeJrhZyZs9kU7RvSO+C+VoM21HXZgONfZortnwh4fupQ37qw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1dd6rpjn4lxay63mmrdcsl3drnkrexect583863","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"+WWarmPfQ0lPwK8n9xY2b54ICFwQvezaycXEZokNLuhud7e/eTFAaqzV80UY7dRNi+oT0bDFbWyBYrTHDOuc5w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dd6rpjn4lxay63mmrdcsl3drnkrexect583863","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","recallfitnessy6",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApdvshNHzzjDHxdryTNVUSEgyM/oyUiOss/spI/yS2rY"},"signature":"huaAW7zS8IXJzE4s7U1rw29d04LZgwKI4Ht0vvOAI6UBy4SnpyuvuBRRNbl+2VRJn6l/gli8yWCPFwoK5laqew=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dd6rpjn4lxay63mmrdcsl3drnkrexect583863","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["recallfitnessy6"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApdvshNHzzjDHxdryTNVUSEgyM/oyUiOss/spI/yS2rY"},"signature":"ZJMNfsS3mypcFBLcLatYDXIJ3FgYJ9dvlcX4StYy5UM683nH/3oo+tybmoqeQ3DiWo4lYuG0KS722MQz6dGd9A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dd6rpjn4lxay63mmrdcsl3drnkrexect583863","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1891","recallfitnessy6","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApdvshNHzzjDHxdryTNVUSEgyM/oyUiOss/spI/yS2rY"},"signature":"l5VMOlpE9Lp55gGvqOo0VABbWltNPlx9J/qw6HG5x7YZ7r1ZJBLiZUZE6s0lsQAQcUpUAN/0R6iNDS/IZjuE3A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dd6rpjn4lxay63mmrdcsl3drnkrexect583863","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1891","1","1","g1dd6rpjn4lxay63mmrdcsl3drnkrexect583863"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApdvshNHzzjDHxdryTNVUSEgyM/oyUiOss/spI/yS2rY"},"signature":"Xhj6kG6+43sMn47RWUlpCu/Hi/yqqMmJ36Qn7RI9fuFISiioIrOkc/hijyFx5M1a6a2kUp1xNcgahIsb7y5scw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1kmpv7zfkx27s3pkts0wyqh69ydwvecxpv5jl5n","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"gkSwUle9/dL2a1hp2cz0Iy77ZuGk0Y2ZsoynybIm7CA3xs5KTsQ+fxaiB3p0/pd+G+jHz4JH7xVnE1rKG7yZKg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kmpv7zfkx27s3pkts0wyqh69ydwvecxpv5jl5n","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","atomsymbols3",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5kVZKNiKaZJxcy5EF9fZGbvdTWMaw2Ub2PJYr9hppMz"},"signature":"mFxRWQnk4Z+x42/5XG+3FXs5LYbioZNeOnLRo6wTlnRkT9IurImVZvlaAM80kLFpHpuEg2+psd8IlO7djCg2pQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kmpv7zfkx27s3pkts0wyqh69ydwvecxpv5jl5n","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["atomsymbols3"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5kVZKNiKaZJxcy5EF9fZGbvdTWMaw2Ub2PJYr9hppMz"},"signature":"ohYoONvhwSmkamAKNQKXI+rVhf1EKbAfCNC0N9nXm78xsQ6YiS580nzJ3EQogLojPecXau0+gQLwyDk26PqtFQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kmpv7zfkx27s3pkts0wyqh69ydwvecxpv5jl5n","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1892","atomsymbols3","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5kVZKNiKaZJxcy5EF9fZGbvdTWMaw2Ub2PJYr9hppMz"},"signature":"eA8W6ga1ZswadJY+JG3KZE7GRb13EzW9IcpkmTNjbFgUUtKFeOXBgy0m+/KEm+dzPNNkTbJVIqGD/rcp5IiVEA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kmpv7zfkx27s3pkts0wyqh69ydwvecxpv5jl5n","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1892","1","1","g1kmpv7zfkx27s3pkts0wyqh69ydwvecxpv5jl5n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5kVZKNiKaZJxcy5EF9fZGbvdTWMaw2Ub2PJYr9hppMz"},"signature":"AwEBcyzUTtuI4OVY17dl61Zg2JDN/J0PEiI6GRoz/bkR2kg8Mbzy6fkb+8sgvh8g22Lg2cv7Z5EYKbYKE45NzA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1h04lyhn94f7sumr9h4slcyh6fu99qa479akel0","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"QGtpouIUW4I+bUq6DOgSgRc4g+w96Fah2l6CauePf3goqenfLyUGP2db4rD7m9Z5j0NtKVG6OURNGF+Ex2nIAQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1h04lyhn94f7sumr9h4slcyh6fu99qa479akel0","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","minorvaultsu",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkZIaVoCPVE3e/Csgce3GaYPuP3Nh301AuxD2fy45l+y"},"signature":"7aII924AYypfUyihs/hYUzq4pS67pBLyWVQ+dUNcMNtzlQ/5Ao1AkRH9Z7aHEg/5pDrGEq0zipcLkRn9ehmhmQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1h04lyhn94f7sumr9h4slcyh6fu99qa479akel0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["minorvaultsu"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkZIaVoCPVE3e/Csgce3GaYPuP3Nh301AuxD2fy45l+y"},"signature":"fRw2pTdj50P6Xk/HJNveu5tI7CoyABSw0Rqleh2AxT8J4Ozb0gM5yzAuRl+op+VaHntO/+XUaaJnVtIq3C3yJg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1h04lyhn94f7sumr9h4slcyh6fu99qa479akel0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1893","minorvaultsu","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkZIaVoCPVE3e/Csgce3GaYPuP3Nh301AuxD2fy45l+y"},"signature":"S8rVzxa40kclb0WHN7LoZmTECKTzOwEG3DrKduy8wewkeVYgTutM2OSfKiPUnYNPaFML90DNk6zSjzyid9C9kg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1h04lyhn94f7sumr9h4slcyh6fu99qa479akel0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1893","1","1","g1h04lyhn94f7sumr9h4slcyh6fu99qa479akel0"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkZIaVoCPVE3e/Csgce3GaYPuP3Nh301AuxD2fy45l+y"},"signature":"LN16Xhpmh/2TqJ+qXYMR2Y9HBcFmJDRVHSOSJmMBpPoR00aMcNrx/u/NYWtO6rY18Bfbyp4mY31Bz+TuiLZUAg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1f5489fkp4dcza7djj9vvedqhz383c77zs0x6fm","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"LSC9DgEvUGITrjOO0Xwcx77LcTe0jB0X0NlHoD+H0uZIdJ9zF0iVj70w7dUkbDepHEepzkYrusc0/HY/iHJQXQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1f5489fkp4dcza7djj9vvedqhz383c77zs0x6fm","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","devotesignza",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6Y7MqQXeozsjsXEjCUd68jHLRH5FsfXg/7JKVaGlVfh"},"signature":"JizKXUDjBsfUfFR77xajxu7RvnDwIj3UMTQ3DC+sPY8EPBoCW4SNmOoqaQdd44yNsTwV9AuRHQzo1VW1UCYHTw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1f5489fkp4dcza7djj9vvedqhz383c77zs0x6fm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["devotesignza"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6Y7MqQXeozsjsXEjCUd68jHLRH5FsfXg/7JKVaGlVfh"},"signature":"zcKGJJjJeoNGGwcfoDMZZ3yYdxOQG6f9G/AtHdfziRgf1gIvpKnxP+0p1zlZJzp7HRbNpzmGii+YExICBi/XTA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1f5489fkp4dcza7djj9vvedqhz383c77zs0x6fm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1894","devotesignza","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6Y7MqQXeozsjsXEjCUd68jHLRH5FsfXg/7JKVaGlVfh"},"signature":"A0Z7FT154BWCkME8WrmO5CMc/6xZlcaQt8NqHeTV600RorU1WnO4LIf+CMvzP/3iQFRYI0ZclHDB45qRZDyKvg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1f5489fkp4dcza7djj9vvedqhz383c77zs0x6fm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1894","1","1","g1f5489fkp4dcza7djj9vvedqhz383c77zs0x6fm"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6Y7MqQXeozsjsXEjCUd68jHLRH5FsfXg/7JKVaGlVfh"},"signature":"R4UGrCaMLlESIPrdUIFQmhY/2rNakNFOgGTOIlExVnxP8gQW3YmTWETCctjgRczKYe0F1IbDL2sYeEG4xN14zA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1k9ggxgem7n054dura8fwr5ksd4lgn4jkvl6lr0","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"hFIHkUhutLHxkROomNkjHZAhv+EZICq3ctWLIkIDlfonP04kvD//0kmQ5m2qLxe1GphEAbP/EEwC++7qgF+g7Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1k9ggxgem7n054dura8fwr5ksd4lgn4jkvl6lr0","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","casualsay54",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkVdJLzXimCNtxrfbnHhJbBUs7Z7l3VqYn6CestQvViJ"},"signature":"uxiI4KMeBy+hpNYLwrVWXgY6Khgve6zxuMJcz8bCq1Egvj2JTP2H5pw20tZFwpuu5OHta6jpRpGABI5y/TVruw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1k9ggxgem7n054dura8fwr5ksd4lgn4jkvl6lr0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["casualsay54"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkVdJLzXimCNtxrfbnHhJbBUs7Z7l3VqYn6CestQvViJ"},"signature":"N+z56AcVCsPAYi29L2oTbl/fI2KZnC6829/pGCqw9+p3ULR+eQaCJ8BqyKYRi1UJXbxVP//0eyFqhrnY0x5jsw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1k9ggxgem7n054dura8fwr5ksd4lgn4jkvl6lr0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1895","casualsay54","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkVdJLzXimCNtxrfbnHhJbBUs7Z7l3VqYn6CestQvViJ"},"signature":"N7+bucvHqbkQRnDULrTv5xI9P2ZWTJ/H6rxmFKnvJA4VCT//xVnuLRuD8hi3EAsWHeGxlHsNGKayOQPAvA+yJw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1k9ggxgem7n054dura8fwr5ksd4lgn4jkvl6lr0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1895","1","1","g1k9ggxgem7n054dura8fwr5ksd4lgn4jkvl6lr0"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkVdJLzXimCNtxrfbnHhJbBUs7Z7l3VqYn6CestQvViJ"},"signature":"dw3sPe2iD0Zh0RSnjLdE0TGzbwj+uiREKQMsZNfrf0xyFEqHRVW7kMgzNB6vSc7Gsekm4REpJf/ibhiPjE3KDQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1mysk6dhpjx749m5qemaxh95dmd8k2hnr6xyjzg","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"G7H2N24nUme4esP5sEiqxUgCBYp2E6R3nfUPn/RBuXA0rnXB4atx2frxIBt30cU5h0QE2NCxV/0nGJubD4GqQA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1mysk6dhpjx749m5qemaxh95dmd8k2hnr6xyjzg","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","pantherabout49",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArVg1GV3DiygvALV+d9jXdpw/qcQUM77FR6tz5XxLGza"},"signature":"9jaGIPz/7UuhpEj5jwRiHSq1hJoH7Y1Nh7JwfYOtXtVVSFyhtc33L9/27MAB6syKbaVMe2qenB4AIF3XHWqkXg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1mysk6dhpjx749m5qemaxh95dmd8k2hnr6xyjzg","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["pantherabout49"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArVg1GV3DiygvALV+d9jXdpw/qcQUM77FR6tz5XxLGza"},"signature":"0Kf5LyirnfgluZKDXg1S7bCaG+u0fnY8HqMD+gvzIdl4zdg+MiX/YMjPyOvxXXCZNsK7t/XTzt2wQK4qiqDLZQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1mysk6dhpjx749m5qemaxh95dmd8k2hnr6xyjzg","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1896","pantherabout49","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArVg1GV3DiygvALV+d9jXdpw/qcQUM77FR6tz5XxLGza"},"signature":"yjqhhLofrjjEq3ddbG3Eup0bLkTA4n1mwDqjjEe586ZhC5l2oqOKPkUhr4YehrrzRCwUP7gfP+heI3pXOtJoUA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1mysk6dhpjx749m5qemaxh95dmd8k2hnr6xyjzg","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1896","1","1","g1mysk6dhpjx749m5qemaxh95dmd8k2hnr6xyjzg"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArVg1GV3DiygvALV+d9jXdpw/qcQUM77FR6tz5XxLGza"},"signature":"yLlhE6OnNjfViOw/k9/lazGcFahX2Oe4HsYFiI0aSWA6X/5wVmW4TAuc4/dYjDHPvTI9Eu+rByFvLeeQFGll5g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1t5hnzv9lym4fvz7k3tesmu7jl8pf8qny2tuukm","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"opaKYFLQ2DVbCa+jsO6RrqF4o5Aq86JSbHNAxwOvoZg1Mq7RK9j8AQXeCC/ETo5nF3t4ZAjL37DB/mal264e6g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t5hnzv9lym4fvz7k3tesmu7jl8pf8qny2tuukm","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","joinstufffv",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1XGrMR2avLrUIaV6ShMJUcixNqcq6pRkLxMEU2N19/g"},"signature":"e9TRXnxjc4mo3cUr5e62hOrzSQfNMyXlNrhdkp24fmFmvg3T4jY1sjpMcoRoxoDLbbCylOQCn8wJXgCgFrGfiQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t5hnzv9lym4fvz7k3tesmu7jl8pf8qny2tuukm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["joinstufffv"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1XGrMR2avLrUIaV6ShMJUcixNqcq6pRkLxMEU2N19/g"},"signature":"wWTwbfzLSr4YciTT2cexZa5S1JvpweY4TAE5yFE/XI4wzQboLKfCjhxO3a/0deT3NwxR26S183gG3wcMMZ02pA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t5hnzv9lym4fvz7k3tesmu7jl8pf8qny2tuukm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1897","joinstufffv","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1XGrMR2avLrUIaV6ShMJUcixNqcq6pRkLxMEU2N19/g"},"signature":"hWOy85f8vru2bOYI9Ux9ZFptIYsc0BDfAVdCLQLPAwJTR6lFZnf1JQYYL1jB4iAli76PgkymZM2eIZJ0Cm7mPA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t5hnzv9lym4fvz7k3tesmu7jl8pf8qny2tuukm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1897","1","1","g1t5hnzv9lym4fvz7k3tesmu7jl8pf8qny2tuukm"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1XGrMR2avLrUIaV6ShMJUcixNqcq6pRkLxMEU2N19/g"},"signature":"1HKYv4T14lGQ/4wqTwQro53Kfi2y+FtdQpBGZfKXgSACwz10LrvvP2Ijdffsfv9WCD/yjW9Haa/ukmnbnowkeA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g199hc856yfzwqcd4p9f8cuz6sh3kynmeenczdky","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"/JSdeDZSXO7GY0H8+DN8j/CZJ6PdChRF6r3/7B16MEBmC7j1PiJLkPEXA25VBYpGYWTFLYyFGBxyJQhYxZbPQQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g199hc856yfzwqcd4p9f8cuz6sh3kynmeenczdky","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","assetloudqc",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0GQz1RRkX3r9hF/TSkDvVxSxwGJjyEMP9uvdH6wK3L0"},"signature":"/qWTgTPMXlRfj6G5rnWMgNwMtpKizfyjXSKuJuMEprx6sjC/WXK3Db921yd9JSMQSYyQSrMWKqneHNW0H6iU8A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g199hc856yfzwqcd4p9f8cuz6sh3kynmeenczdky","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["assetloudqc"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0GQz1RRkX3r9hF/TSkDvVxSxwGJjyEMP9uvdH6wK3L0"},"signature":"W99G1NsNNikZYZ/0KEKykRoTq4id2ftOJ7SGOC3YfrVW9Aciv5J/Vl4nDNqnTB7A04CtfFQvfNAxu1LCmVDCZw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g199hc856yfzwqcd4p9f8cuz6sh3kynmeenczdky","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1898","assetloudqc","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0GQz1RRkX3r9hF/TSkDvVxSxwGJjyEMP9uvdH6wK3L0"},"signature":"h9jn1R36yMDDnlQBdqGYr7QwAz0uCVEc8yo+IeksNyICKeB7Aa6SUQzeO6cOAfTRcRJMlL1UzBeFZdXOE6eerA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g199hc856yfzwqcd4p9f8cuz6sh3kynmeenczdky","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1898","1","1","g199hc856yfzwqcd4p9f8cuz6sh3kynmeenczdky"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0GQz1RRkX3r9hF/TSkDvVxSxwGJjyEMP9uvdH6wK3L0"},"signature":"lZIFGiy4iODJGYcJi1EMBlgVSt9BMwL4H6rBTH+bAGo1j6mSfASLsYGISj1+Mldi7l2DvPJ1AYTVSTECcm2t5Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g16g2hkphswjdy3dyrt3zvv7jmnqlazhfgez8vza","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ICy74MYsJiWa62yZW0A2KRqZYwXADWlQsPvRGYBaE0FuoplarXmej1t9JJUHyIfk2muSiHCanhSgRFEJeoiQYQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16g2hkphswjdy3dyrt3zvv7jmnqlazhfgez8vza","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","magnetbrothery3",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvwVhYiDyFxLFESSCXzHDpTJnpAv1ufNAYCbs7oqvtB0"},"signature":"PQE0nI2ImdeNiZWASZ/AAHqtYrSphymiMj2qRstPl+VnxhS+ZX/Zhj/I69jSEUdULYOGXTBk/iyaP+g2OJRvIw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16g2hkphswjdy3dyrt3zvv7jmnqlazhfgez8vza","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["magnetbrothery3"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvwVhYiDyFxLFESSCXzHDpTJnpAv1ufNAYCbs7oqvtB0"},"signature":"MkPUQgnq8Kp9lIJEFE9taoUmbjElfRsoR5ZavlvpdwZZxoOZARIMCXHz9AL7ehrY8ZldhlyBI+tguz8ZXX/Z4g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16g2hkphswjdy3dyrt3zvv7jmnqlazhfgez8vza","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1899","magnetbrothery3","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvwVhYiDyFxLFESSCXzHDpTJnpAv1ufNAYCbs7oqvtB0"},"signature":"/DvJGOY0CYq+lyjgKmCY4DdRS0t8mRRy5CBAi4bvhSAlLu00thDXqMRWRzdehdEtl7z85345RP1DmxCpahtqYg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16g2hkphswjdy3dyrt3zvv7jmnqlazhfgez8vza","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1899","1","1","g16g2hkphswjdy3dyrt3zvv7jmnqlazhfgez8vza"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvwVhYiDyFxLFESSCXzHDpTJnpAv1ufNAYCbs7oqvtB0"},"signature":"UsyFWNasuQtb/qclxzf3PtjEFNq0XlEVI8qU91o9fh55EYTUGfu3VZWgznYDXlsv4FYeu0O/rtXXc+93DRCmLw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g17ckugyhw50y6xr84nvzny0mh90j0re3g02t94h","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Jm9O6bZfMePpuchOOYNT5cOyXQUeE3p4Es533lmI6ONzfbUCAC+NUiK4S6vNif9fSH44VOL8DG5G+Xa0aMyoYw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17ckugyhw50y6xr84nvzny0mh90j0re3g02t94h","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","promotedesert6x",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Al8wbExvEVoLHO7McI/z7r1sRI6hDSwEZjgyiVDu94U6"},"signature":"C8bc0sifhqXgS+pllj/AXOSQ4jYw5NebsyY4XeIlnw49T9IyBtTemnEO70bEWLpqhg4DnZfQ4E29A7rBl1a8/Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17ckugyhw50y6xr84nvzny0mh90j0re3g02t94h","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["promotedesert6x"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Al8wbExvEVoLHO7McI/z7r1sRI6hDSwEZjgyiVDu94U6"},"signature":"Qs8o/JTBGMCwlahZEjoNz5/TyNmtWk3q2VG2A0HO8dVnPVW2UqK6BMoeElC4rJbceyzZIibi19kc6MLVPNr/3Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17ckugyhw50y6xr84nvzny0mh90j0re3g02t94h","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1900","promotedesert6x","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Al8wbExvEVoLHO7McI/z7r1sRI6hDSwEZjgyiVDu94U6"},"signature":"+lS0gHiMd7vSbPQqE7wSsdVy0/Zl79wFXNbMcrrk10UwBFBgTJPEe3r+ps02ruxAIBvsVp1TtLJkkHdYQXOxKQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17ckugyhw50y6xr84nvzny0mh90j0re3g02t94h","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1900","1","1","g17ckugyhw50y6xr84nvzny0mh90j0re3g02t94h"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Al8wbExvEVoLHO7McI/z7r1sRI6hDSwEZjgyiVDu94U6"},"signature":"USKvJhMBCw09XzHMZXKMd9RhTcf+L/cjPa+ywHX40rtOb9C7AMA8haKBVDBhU+TCez6y97wCLlPSs6t3nlKhHA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1yr3vcr7wf47ecvwjf6d7sy3ks459qve9vlmqpn","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"z22uDTjKcBiEWFOyM9v/DrFTCGaU8n/9Cens+TMC0DJDJzjV23b+CCA/M7IOYBPzfSOPOlLoVMupPoqy4cB5CA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1yr3vcr7wf47ecvwjf6d7sy3ks459qve9vlmqpn","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","pleasefleeec",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiOVQJXTlMRVYhY2mrAgBhUMsoqo2Ei7Ueo2Up8sAs4T"},"signature":"IT/GJQ/VwbvzeKPUzxWb8ytRPLc0icH0SBSWIT4+1MMNnssoky3AoiXvertFjN9DZFxfq+DAOMQuLPUSHDUHJw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1yr3vcr7wf47ecvwjf6d7sy3ks459qve9vlmqpn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["pleasefleeec"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiOVQJXTlMRVYhY2mrAgBhUMsoqo2Ei7Ueo2Up8sAs4T"},"signature":"EgAHRJHlLz53kbo7tLMdV3zVBxUbRsDbSqlMcq0FDcALW+sPlo0Uqe8H2dPn4KKzE9aBMchNEFdnUePIWnYfVQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1yr3vcr7wf47ecvwjf6d7sy3ks459qve9vlmqpn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1901","pleasefleeec","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiOVQJXTlMRVYhY2mrAgBhUMsoqo2Ei7Ueo2Up8sAs4T"},"signature":"JQigcmZJCUHjl6Rv7jSE4DwTy3c7j0jyyxYDyDUwPFxjmY5Zm5p/r8l8IJfUekZAQymHPaqK+zf5nQLY+fkvjA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1yr3vcr7wf47ecvwjf6d7sy3ks459qve9vlmqpn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1901","1","1","g1yr3vcr7wf47ecvwjf6d7sy3ks459qve9vlmqpn"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiOVQJXTlMRVYhY2mrAgBhUMsoqo2Ei7Ueo2Up8sAs4T"},"signature":"c3YJCKB1006Gj+9HPL+JcRx6YjTsdpRrCEWvLFP0sbEoeZlDz6SOJl7Yh1k1or4dX243dti6K2NAb8yvYUfx+w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1s5gddp73m9wtrcw4lwjyx4jxkwhnr5p5eudsux","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"aEtXhqzzXCB5uTXuxubof0XX+1ICYV0hc7+5f9KLsVx9Axz7rt5J3WXM3tr4RrqSyWRUm7NnBT5BnRH/EHljBA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s5gddp73m9wtrcw4lwjyx4jxkwhnr5p5eudsux","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","cropwraptr",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtzPxFA83htHh6y21QNCpgE1HgslLH73yaWUcG6YAe4z"},"signature":"CcydFnit2/s6uvH2/k2ePui5/wSwV7P+yIrRD4Slkt5VMDAIa1ZnKvlNLUKGepY53TuTwZi8rBRFBTZxMybZJg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s5gddp73m9wtrcw4lwjyx4jxkwhnr5p5eudsux","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["cropwraptr"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtzPxFA83htHh6y21QNCpgE1HgslLH73yaWUcG6YAe4z"},"signature":"toVaSihxSQNQQMV2GgMv2VUgaC+nYeRPsYgur8pq1/5cyfDp3A+x1Cfno8COKg7kGz5R52K2aZrFiW25y9eGXg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s5gddp73m9wtrcw4lwjyx4jxkwhnr5p5eudsux","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1902","cropwraptr","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtzPxFA83htHh6y21QNCpgE1HgslLH73yaWUcG6YAe4z"},"signature":"YHIblyaYb34vK7XAK7m2EsMc8DH4w/DJqlbHIHPMbZgjrZEr+0sYu9VyIIXMS27u+TaO+jv059+eHksccjbdBA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s5gddp73m9wtrcw4lwjyx4jxkwhnr5p5eudsux","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1902","1","1","g1s5gddp73m9wtrcw4lwjyx4jxkwhnr5p5eudsux"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtzPxFA83htHh6y21QNCpgE1HgslLH73yaWUcG6YAe4z"},"signature":"2OsDJEjYRmp4GSJk2/5wIvZqNvQyX5ptEvpbqvycMZZs0ztOCf5+ubJbMmMlILQ+YPf3bdkMiWMcE6WoSUoSwg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g122n67es9vzs0rmharsggfr4sdkd45aysnuzf7m","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"1FbzHi8cJ8TdVd6w65I7JSTcfFFveY3VRwi3LXSCHOhHpQf5Yhwip7nGqhZiPiemoRBRPPN4ACz63s7uZykL1w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"zxhPqXZpVsyhsw2c/tPTCv2PNnYfprODTELaAjfgxhJbqtyarG+AgISDGBinEELEiWhnC8AjQDapEjKv6h2EDA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/tong","func":"Transfer","args":["g1l47x640c4petu4chfjge3qg2uplakx78hkxqxd","123456"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"N855+F7jwknry3L9Lg/eucm7zyMJmuo0Y5+GcBbVvUstzRV50B5UldBfE7W/7V/kdi5+T8yIyAgcOaVgvjMKjA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/tong","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","875310"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"PHszXcj6orD3Jhvmd/bIPesES/cY7EbEU0oxY/TzekhkE1rjjKRmouNnY2hcdvfc0kZb4W5T2TD5PhunnHy9cg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"uc2lYsRfHjg7GIoLMBu0+ZKQqroqz9a2ZcUVGxFE1LNm0Ifl8d8h+uppMk/FyDhEfiaeUIamaoYAewKU+9eP9Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"XvWcj4i/p2PyfdhkbRfEr78fRiJupUtLAec9aNaLWcMakAAGxeH2elxuYCoekjFvyYw96dFHi8b8qE614AmGVw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/tong","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"WRJJJ0BxAm7LVtsoYXhzP0ti8JCq8HzvYjmN1j6U0gETBYA8XTQCYLoJMGoFNcgvGMAFm4RyXkgegVDdsXeZSw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"123000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"8peaD4d9Vo3mFKniW07Z+0bmXiLTz3loYHZR19jFegIhvG7YuYwCKuy1VdJbChGyiF2c4+9NKjp6zQMx3DH9uQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1vqmptqyne78uxdaqehux3ur6vs9ny7tllp0qxr","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"TnnALgDgCT1t4D9qiu//fQvr4EssWpTIRDjcZH4lKTkb3UTqO04tktBY9wH5oVIV0+8UCs9/UMZPLaUSitGciA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vqmptqyne78uxdaqehux3ur6vs9ny7tllp0qxr","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","dollpulseux",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlAv2oTAYAPsWzfy8cgXUfo8T9B3NcwKG4OQrwn+nsqo"},"signature":"bjwmSo3Kl2E1EoHsGqJqnG4SwLjOhWztUjUiXPru04Ry22qP+1NNjIT57iXLXou2KidwZJ1KltVVDtTpjwUVIA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vqmptqyne78uxdaqehux3ur6vs9ny7tllp0qxr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["dollpulseux"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlAv2oTAYAPsWzfy8cgXUfo8T9B3NcwKG4OQrwn+nsqo"},"signature":"7MQ7mcC9Tx4v759gmzfJEzOdm3CC2u1kRwK8TdtkRtxRUTg8W1fa8dywkhQA58XImmM1f7k/xK8slWlwM3rTaA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vqmptqyne78uxdaqehux3ur6vs9ny7tllp0qxr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1903","dollpulseux","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlAv2oTAYAPsWzfy8cgXUfo8T9B3NcwKG4OQrwn+nsqo"},"signature":"CUw3KZ+Ye/LCGZlDUwb8bkBE+cvNNDGwlwmQ+pZFHIhsCl3B+QPDG8lGe1ux+HqfRBmFw36dBLLIQhposXG3rw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vqmptqyne78uxdaqehux3ur6vs9ny7tllp0qxr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1903","1","1","g1vqmptqyne78uxdaqehux3ur6vs9ny7tllp0qxr"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlAv2oTAYAPsWzfy8cgXUfo8T9B3NcwKG4OQrwn+nsqo"},"signature":"097liXq8+ND5FFYv1aPv2tXv0Deaz3qKGqoE1aRSeBJf2echjj4T8dehgNWmgEXnwztQ/C4/e8vJG0MXkP9Vng=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1vneqkwuae0kxz8wxem4r7pv42s788j6us63qp9","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"X70Tqzc3tdJMm/OHQlUXqAEBG6a4WXr0pZ9cwHv7CFMqP51/w/jzNT6cdoixZAXWVhMAtwEDG3sjeOha2TOf6A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vneqkwuae0kxz8wxem4r7pv42s788j6us63qp9","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","harshbringxz",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av/3fLP+6jh8IF0jMZ5lYRw+iwlJ1gIkmGY1MTmHLObr"},"signature":"RBvABVRWgqryzYmF5bPwXb8LW3GV81zqMZnoqMjKUQYI5FiBh5ZYOiUdQt4og0VUyNh8Z+4aqlTd2hDSmrw6rA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vneqkwuae0kxz8wxem4r7pv42s788j6us63qp9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["harshbringxz"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av/3fLP+6jh8IF0jMZ5lYRw+iwlJ1gIkmGY1MTmHLObr"},"signature":"ZqrF/FmuVkn5tVQxrNKVs9eBgCBGeD1keYqipfW4jiNNuJjtmNTsv9z9cvuO/Ul7pbT2NIC4n42+vIAJ539eUw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vneqkwuae0kxz8wxem4r7pv42s788j6us63qp9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1904","harshbringxz","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av/3fLP+6jh8IF0jMZ5lYRw+iwlJ1gIkmGY1MTmHLObr"},"signature":"WcHWyzeidx/LxqmvgwxxkyuEBXDVG5ma+ruViDo5c3ENsRlJJypZykab9jFQmBV+yY1+09ZUxbjen8XoOU2v0w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vneqkwuae0kxz8wxem4r7pv42s788j6us63qp9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1904","1","1","g1vneqkwuae0kxz8wxem4r7pv42s788j6us63qp9"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av/3fLP+6jh8IF0jMZ5lYRw+iwlJ1gIkmGY1MTmHLObr"},"signature":"0zjGhHaAUAntXkPV7w4gDoQyWf7IialUAB5VJIg+q58BIFiYHTPUwL3X+vcm+kFKHPZZPIOAbAoFTiM7YxmHpw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"Name":"dummy","Path":"gno.land/r/demo/printtransfer","Files":[{"Name":"dummy.gno","Body":"package dummy\n\nfunc Transfer() string {\n\tprintln(\"JUST PRINT ME\")\n\treturn \"FAKE_TRANSFER\"\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"9000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"+sXdls8JtueFsy5aJ8M20H264UHFQkdlR2TdSP35c8hcwQyNkII+hri6kDfkz4N3g8PQ2riyBdhCAbNDxbyz5w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/demo/printtransfer","func":"Transfer","args":null}],"fee":{"gas_wanted":"9000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"eHtZCdh/o3JNYbW1NATdcn9BcEX1SOU6rLSOrf4UETJTftjSbXrSGIbZr/+YXVv0q2Fs+O5/OEg/7k1OIsPluA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1n7wtvu88tsg763aj6lnptfgu8dfwghefaysw2q","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"BmWxYld/ZDngZK+7z0n7Mm0RmnjA+aPtt2fLhjlGrf1p/kRZ2JWO0MG85Twl5NE2v+KRrm89oY96HMLuGVYXqQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1n7wtvu88tsg763aj6lnptfgu8dfwghefaysw2q","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","midnightsquirrel76",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7csAOV9TqBxAJIUe+zIsXA36uExThMdyDXuyC1ed2MA"},"signature":"cmV9MShWiY7pgDEucB7BYaQPLR11K5bpNAF7y2EWsopuNg+PesArm7T9O7hRsUrLFL23aBQIPOcPubfSZ4PDkA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1n7wtvu88tsg763aj6lnptfgu8dfwghefaysw2q","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["midnightsquirrel76"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7csAOV9TqBxAJIUe+zIsXA36uExThMdyDXuyC1ed2MA"},"signature":"MlyVFyc4pdOZdN4gHKx6BRjaKA/IjOWuAUbNXluiiR9TrHw4w6QsP4a63LlpEwmN7t5mgLHi7oz1zg3U54CSLw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1n7wtvu88tsg763aj6lnptfgu8dfwghefaysw2q","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1905","midnightsquirrel76","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7csAOV9TqBxAJIUe+zIsXA36uExThMdyDXuyC1ed2MA"},"signature":"xIAE2R66I7SNaN/r/8uuKQDzs975G9ytQQwJE8yTZsRbyXsj8xf1TfrkpDKTwEXftveJRuNvpYXA5UCkuhyUEA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1n7wtvu88tsg763aj6lnptfgu8dfwghefaysw2q","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1905","1","1","g1n7wtvu88tsg763aj6lnptfgu8dfwghefaysw2q"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7csAOV9TqBxAJIUe+zIsXA36uExThMdyDXuyC1ed2MA"},"signature":"UY7FXRThhFte98S/bvSn3XbvtxyPvbiJXImxZFmoEhFcbz+xYCAUErhiNv+cZjVg36v6fuHDNkiwmavfxmec8A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","397"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"c1NzkaC+vYkdMsuWHekW3UJqIUgqPtAqo3y1T/maGm5F4uljWjh32lTkNjnK8UiOqUv63zFwR23gN2XS1Ci7Ow=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1ah06taugvdnw0tgdg0u39q4zxh5kcw2wvsj9u7","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"A7Uv7snI0aCHf5T99GDixWxweY/vvQ5FxffNZNZNu4pbugZlrQQo739SSK2YLbyJ8PzKtP/dJJBAgW6gtBjxuQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ah06taugvdnw0tgdg0u39q4zxh5kcw2wvsj9u7","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","couplecodew0",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ahsm3zW1owwzowUSOU1fPm40n3jnxU0EsJ7bh40aA1/X"},"signature":"vfUrGVhm+tF/jSMy5yfE5ihyrgU/Tt9CgnOEjQZocUE24ZIxr8JULq+sIbCfdIKcK5GKCxbe89dZrMxrgLCscw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ah06taugvdnw0tgdg0u39q4zxh5kcw2wvsj9u7","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["couplecodew0"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ahsm3zW1owwzowUSOU1fPm40n3jnxU0EsJ7bh40aA1/X"},"signature":"ezKDnWXGDVpA4hnpL5L3G6eb2YlAYMhg/SeiglbygjFPjiSruZCdp0fk19EqoeaEl1T5Pn+hHrI04c+zd2Tysw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ah06taugvdnw0tgdg0u39q4zxh5kcw2wvsj9u7","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1906","couplecodew0","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ahsm3zW1owwzowUSOU1fPm40n3jnxU0EsJ7bh40aA1/X"},"signature":"5jR3dwFL/RFEkP6vvN9IdkXHmHRVCEH+jy9GnNXGWTc0tSFG3IiantsIOM19ZPRqghCEYQQ4CSav1QLvaGxJCw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ah06taugvdnw0tgdg0u39q4zxh5kcw2wvsj9u7","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1906","1","1","g1ah06taugvdnw0tgdg0u39q4zxh5kcw2wvsj9u7"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ahsm3zW1owwzowUSOU1fPm40n3jnxU0EsJ7bh40aA1/X"},"signature":"LV0Y0K0Vr289oF/iyaKEKDUVW0MYqxQ+8l7InuAVx24jHW3TtximxzDCMSOKt1TcvUaTvM9COzcykX9cmAJdzQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1490wwph9zk3j0m9yk0mc3laj9s3qpcf8q3ynnp","amount":"25000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"19LR0hG8EWv5vll4C+BY2vFJAkujmOusVB/8fUW1lyEIn9CXFUERXx7/G56HzbSNkmCyIc9bcCGgj7iQOwwsqg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1490wwph9zk3j0m9yk0mc3laj9s3qpcf8q3ynnp","7000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"UJU6G4osvnzifp5/wi40wFHTR33gDnAI1zx0f0Obx8Qrk3xSgHiBYelJeDawziHi+tTEPArST7HTJQIGCSargA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/tong","func":"Transfer","args":["g1490wwph9zk3j0m9yk0mc3laj9s3qpcf8q3ynnp","1999877"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"6VtatX5H2v45EyVqwZD+jNs8pAa3IWy7QnCGQd4xWt9clyLkeZ9kYX8gN8KYtEt4W62AN3WyE2cZl0thlqxavw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1490wwph9zk3j0m9yk0mc3laj9s3qpcf8q3ynnp","to_address":"g1nwurn3dr5evmtugvm80epk3ttusmtymmprfrdv","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0SRWFKJ5cYHZzwofJIXF2m2IIbRjWE3Lyk+HSynaZLW"},"signature":"pAHPEMWcUnBWF2iF4Wi0hBK8sG0N0tigLdsJs4NXcUtAlbx1zXAEupn/ib8JOCYjTeOXEoJIONeXGuuJ3e6m+A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1490wwph9zk3j0m9yk0mc3laj9s3qpcf8q3ynnp","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1nwurn3dr5evmtugvm80epk3ttusmtymmprfrdv","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0SRWFKJ5cYHZzwofJIXF2m2IIbRjWE3Lyk+HSynaZLW"},"signature":"6hsbt4RB43GsHcW+Eqlp/oIRptNnv0SUJBNF7KkZI20ZihcaNyM8W39Krj1amGKYgbZVGMVeBlauX6yFryNGaw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1490wwph9zk3j0m9yk0mc3laj9s3qpcf8q3ynnp","send":"","pkg_path":"gno.land/r/demo/tong","func":"Transfer","args":["g1nwurn3dr5evmtugvm80epk3ttusmtymmprfrdv","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0SRWFKJ5cYHZzwofJIXF2m2IIbRjWE3Lyk+HSynaZLW"},"signature":"bVO6wUz2aSWqVg8xI1udZAbL2CKwG4me7rrSfbOKFK8NkBOFZZNk48fqWLg1tE94AyxDtt1A2Y9Kgo3isQODLw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1490wwph9zk3j0m9yk0mc3laj9s3qpcf8q3ynnp","send":"","pkg_path":"123","func":"123","args":["123"]}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0SRWFKJ5cYHZzwofJIXF2m2IIbRjWE3Lyk+HSynaZLW"},"signature":"Xq4kGiohojZ4aqlgcKsRQf1NQ+PT3klmYjfzIJ9gFUtN9ar1XqVN8qW7mQtg864ictTKInDuYREjGIQWtA2iMg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1490wwph9zk3j0m9yk0mc3laj9s3qpcf8q3ynnp","to_address":"g1490wwph9zk3j0m9yk0mc3laj9s3qpcf8q3ynnp","amount":"50000ugnot"}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0SRWFKJ5cYHZzwofJIXF2m2IIbRjWE3Lyk+HSynaZLW"},"signature":"s4TPuZzjrw1E8cW10GicXK+6ga5eG0L2REb9EWVCv3xaj4qeUJpHFspwgfspWRhJm08msa5RWS6UU4TPgjOnbA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1490wwph9zk3j0m9yk0mc3laj9s3qpcf8q3ynnp","package":{"Name":"hello123ag","Path":"gno.land/r/demo/hello123ag","Files":[{"Name":"hello123ag.gno","Body":"package hello123ag\n\nfunc Hello() string {\n\treturn \"Hello() called\"\n}\n\nfunc Render() string {\n\treturn \"Render() called\"\n}"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0SRWFKJ5cYHZzwofJIXF2m2IIbRjWE3Lyk+HSynaZLW"},"signature":"izTr0Q5n3nHH3nIVV19c2MEAqGizkhPNZMq4NNGHxSBugFV1yiwfGgmLLjZFVpNiaqYXgRe11I3ulbVQSX/mjA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1j9pcqnyjkfptdfuz34vytgj8artpyg4r0z9rgw","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"1VpYeSKpWEk6xPBxEGnaUqKvgou5PXWOPUFvh9EPrbNdb5lxjO96z+nvNUiUd9YEGlr6uwAfyK/AdUIvpbk8Ew=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1j9pcqnyjkfptdfuz34vytgj8artpyg4r0z9rgw","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","stumblepotterytd",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9UcrosR92BXIPnA0y3PuQl3aAk6BnJV3daQuONyOfOI"},"signature":"VV34eOkLHKyMXHP9+FfWvz32gouV+RqO0hbqy3tCKYBMZ8F/D5PonaYtGw8D5kS/oNPpqtGh3m/8M+aKo7ZMOQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1j9pcqnyjkfptdfuz34vytgj8artpyg4r0z9rgw","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["stumblepotterytd"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9UcrosR92BXIPnA0y3PuQl3aAk6BnJV3daQuONyOfOI"},"signature":"9D3Z7WgJWrrEyQZZgyZ+60PRU18rkoe7BYF2RIdzBBpKqCJX+pXuZRXsMzmGROpIPR4EjYEUZZ3GGWCK6WU2Vw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1j9pcqnyjkfptdfuz34vytgj8artpyg4r0z9rgw","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1907","stumblepotterytd","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9UcrosR92BXIPnA0y3PuQl3aAk6BnJV3daQuONyOfOI"},"signature":"wRkKb7tubEX7DXU0kwjLKWoY/iVNArIVqQY98Y2+F1o7uGHNwruEfxZVZfofe3mPfPhvhOXRtNSop4DiJhDuEA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1j9pcqnyjkfptdfuz34vytgj8artpyg4r0z9rgw","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1907","1","1","g1j9pcqnyjkfptdfuz34vytgj8artpyg4r0z9rgw"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9UcrosR92BXIPnA0y3PuQl3aAk6BnJV3daQuONyOfOI"},"signature":"OhDQ70kdRXMzpcxz6hbjL8rAYOgmLdFnSanfRUXXjt0t6GbKhvr+1+tEHj6+Mf5isLZkc9eyyKlR+UDdUOm4+A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g17aflxadf45hq3ssm3lvnxmdgl7rmwm4005x3c4","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"zsbKLEmWVy/bItQOO3Ith6EJqy6nK3r04q41XeB3KyYFlvn1j90ibf5qZuvVp68C1jj2TYTHw1ztFkxxWXDCsg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17aflxadf45hq3ssm3lvnxmdgl7rmwm4005x3c4","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","stepcrazyq3",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxLv3nZ+fnTltTqdxPCh+x9R1o9VPW9oq+OiUo9FF0mH"},"signature":"L3LNs++7mnwk99RFmKozIRknYpEleF/5mhUGcp8e0bAw/zBIOUUiOylqB2L8UrGzxiVElUnu8rjb3mbxCgNn3w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17aflxadf45hq3ssm3lvnxmdgl7rmwm4005x3c4","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["stepcrazyq3"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxLv3nZ+fnTltTqdxPCh+x9R1o9VPW9oq+OiUo9FF0mH"},"signature":"43GNOG9O1ez58UHBKw+LqEWVUfYOk9mkuo1wivtwcupBt1cL0cWeiJg/TnFmLl9NaNsEBwO/rSapainavRptPw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17aflxadf45hq3ssm3lvnxmdgl7rmwm4005x3c4","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1908","stepcrazyq3","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxLv3nZ+fnTltTqdxPCh+x9R1o9VPW9oq+OiUo9FF0mH"},"signature":"bqEYJ3uItPfJUSkuENkqIpyN2lxrtMJ0hx4fb6sHeYA3iIrgq6YzG9b9lyjCXJFpCfDSWx03vMu9DzalgYC37A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17aflxadf45hq3ssm3lvnxmdgl7rmwm4005x3c4","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1908","1","1","g17aflxadf45hq3ssm3lvnxmdgl7rmwm4005x3c4"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxLv3nZ+fnTltTqdxPCh+x9R1o9VPW9oq+OiUo9FF0mH"},"signature":"ddHAC3DJSPo3hBCsdesMHxf5VDel9j7Ub8LLiLD2R3gDifJe6qIBH99rW9xZ1lpK9kYvbPa5/0UrGdtLk4Ru0A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1shynl6ue7qfqgntwmsdpdg4s2038zkwly8fzkt","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"cvjTAca16WxUKMSHvzu3CvNgjlZegBG3f54bOPqHAj46pl/QqkMwPjQPcLEgLMFS70YSrTAuoAS0PDTLvTGlmg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1shynl6ue7qfqgntwmsdpdg4s2038zkwly8fzkt","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","horsegownqg",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlELRnt1za1R8hTiW11jveAHXEFzxAcC0jGqo+H8qman"},"signature":"IwaHuo3064pYZ5ZC2cwSqWRfnX/1bPSfmG1J3hYzH9Z9B2h1hxog8LEWsgI40xAaeqMkzAH3qTPWhEYtSL5tHg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1shynl6ue7qfqgntwmsdpdg4s2038zkwly8fzkt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["horsegownqg"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlELRnt1za1R8hTiW11jveAHXEFzxAcC0jGqo+H8qman"},"signature":"gfyKNT2ZC886Py+4o9p91QP1O1I7qstLabXR3CkRLNQy/F/LqdVuGiPD8rAtJBj0VJsaW1jGtcaErZX2/0kAeg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1shynl6ue7qfqgntwmsdpdg4s2038zkwly8fzkt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1909","horsegownqg","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlELRnt1za1R8hTiW11jveAHXEFzxAcC0jGqo+H8qman"},"signature":"q2pY/Gm7r6Cz9MjR5maoegrGZe+wCRvHrMFZdajo3Tp6H4XRjwMT+p/nE5Ap6a1yCIdPLPWglus5FgcE9QvlQA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1shynl6ue7qfqgntwmsdpdg4s2038zkwly8fzkt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1909","1","1","g1shynl6ue7qfqgntwmsdpdg4s2038zkwly8fzkt"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlELRnt1za1R8hTiW11jveAHXEFzxAcC0jGqo+H8qman"},"signature":"vjSguW98RZM9iQvSwWXME00/JMhpB2TJ/Qf8z+WlTtUsm8r38+/X56l2dgbwGhY+nI6Ig9ML6IW+Wg8r3z7eeQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1mfd379apndukzm2s7at64gxs6f0qvfdw5awmgz","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"QPrPpG774eYlKTDadcrmTM2dHTnlLZYmh4b3dAy2HGMWZx2HyUAiJbo4bsJsEI4GCB1yJB3XJfGY9GpzX8W4Rg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1mfd379apndukzm2s7at64gxs6f0qvfdw5awmgz","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","slidenaivekz",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0VcLT4FsowXcDBmpRzGVceL/dLzUd3g313P06hXGyLC"},"signature":"qnnJ8GqFojHMp+ilF45R6A97CVf/feDcOf2JeJrkmMw9SokgLEXS0LOx2v0Q5xZLioB/mQOliA9xNeAEiPe2Pg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1mfd379apndukzm2s7at64gxs6f0qvfdw5awmgz","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["slidenaivekz"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0VcLT4FsowXcDBmpRzGVceL/dLzUd3g313P06hXGyLC"},"signature":"vVC9hkYd6rOoKbq7aZXghaaPksRgjCSmKGty6zy4uC5MBmhQ9ifWv8pdMEYpe66qZAdeSNnyz/KkvTyum8wl9A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1mfd379apndukzm2s7at64gxs6f0qvfdw5awmgz","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1910","slidenaivekz","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0VcLT4FsowXcDBmpRzGVceL/dLzUd3g313P06hXGyLC"},"signature":"6/P9l0QJ/jnbT14AOttMjI/toHf/EjD8wbD9gnyzMipXkNCGLrbgvmY4fS5LpAnIT9BbY4oG2CxSJMWcefELKg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1mfd379apndukzm2s7at64gxs6f0qvfdw5awmgz","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1910","1","1","g1mfd379apndukzm2s7at64gxs6f0qvfdw5awmgz"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0VcLT4FsowXcDBmpRzGVceL/dLzUd3g313P06hXGyLC"},"signature":"83BVAOJgha33dyBdhEuEHZxzOBAmSZPag+oCsbErahh9kpGCs1GUF6WxpamxhyPdA8fI0xMRcTiOEJoDyu5tLg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g18x89ek9szz3vzkq2wg444jgyl38klda0lfrsjh","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"GNWkCE7Z1nvUzlw103fHsjCQB2UpwzK50cdquVVrR2MyIqEy493TqLsFO868c+7QcK2cT48i3WX/PZionlqg6g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18x89ek9szz3vzkq2wg444jgyl38klda0lfrsjh","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","prizegathervz",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Awvro5kgRpfOdo5J6rimpXvtOD4i87a6vnexXL4ObTGk"},"signature":"VbualwNMhpXs5QWxd5ZruM00YL/RALuwz8qGcr+GXWA9u4tEB+U+NLHoAY/PpYf2pCEIrPsK7GZUzHbGK9s3RQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18x89ek9szz3vzkq2wg444jgyl38klda0lfrsjh","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["prizegathervz"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Awvro5kgRpfOdo5J6rimpXvtOD4i87a6vnexXL4ObTGk"},"signature":"z95ggVnQ5iEibQouEQPjvNDmqS2cqncC6ZuMIhX2vEB4JVTq37ROKhnk69HjqPabpP3ZufyyOYA6Q0Cv06BhKg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18x89ek9szz3vzkq2wg444jgyl38klda0lfrsjh","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1911","prizegathervz","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Awvro5kgRpfOdo5J6rimpXvtOD4i87a6vnexXL4ObTGk"},"signature":"Wsg7cyai4tJB9fSRSLJvRXejGPZhVXZk3syUvHQ/9L13N1W6ep4bn3qzhAg4ZSQy13tm+9SDalCXggA09Aslrw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18x89ek9szz3vzkq2wg444jgyl38klda0lfrsjh","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1911","1","1","g18x89ek9szz3vzkq2wg444jgyl38klda0lfrsjh"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Awvro5kgRpfOdo5J6rimpXvtOD4i87a6vnexXL4ObTGk"},"signature":"gKL5DZRdRhzqaP/XoeL5fvBtx0eflQ3zGb2BZgr7+qsut86KV+SwpVZ4BbigWZfXcC5DTnbV5WVJysq3m3WT7A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1en3wdk7ulxjlsl824emze8a7r5e33gz792k2ex","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"83f2+Fer3QIiVofhgezylKonNUkcRYbnaj3qxCeJRTo5IB5QaYNXY1MrYf7N1y1lngk0P1d5GU1Eb4JuZ9qT/A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1en3wdk7ulxjlsl824emze8a7r5e33gz792k2ex","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","burstinsanels",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ap87CbXzTB9kpwwgkRQH6vaeXJXqY4MCnMldRfJIpH/H"},"signature":"EoIAEDjv/TPbgLMUkIQxDpBrSXsK3b7Vxbw4nShdHx9BFJ65EjROUbyPzs1Pl7gPH6dh4R94iFR6vpLZsf6N+Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1en3wdk7ulxjlsl824emze8a7r5e33gz792k2ex","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["burstinsanels"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ap87CbXzTB9kpwwgkRQH6vaeXJXqY4MCnMldRfJIpH/H"},"signature":"rrMFZ4aEX6bvKRmjss4y1YtC/wIljQTMCJY9oSakCxMQw7IFpvp6Aye47oe0juR5xs/BwkiCGePce2rQyp+8CQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1en3wdk7ulxjlsl824emze8a7r5e33gz792k2ex","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1912","burstinsanels","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ap87CbXzTB9kpwwgkRQH6vaeXJXqY4MCnMldRfJIpH/H"},"signature":"o9WKFe+IdAF9Dewltc/hlyQLTmsp8XfFGmAB4hCU5cAuzGeLz8XbtHGXXxacr+MtEqzgmGB1sf308WHqKto6rw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1en3wdk7ulxjlsl824emze8a7r5e33gz792k2ex","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1912","1","1","g1en3wdk7ulxjlsl824emze8a7r5e33gz792k2ex"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ap87CbXzTB9kpwwgkRQH6vaeXJXqY4MCnMldRfJIpH/H"},"signature":"D9iG9YdUnkyy6sggPsYH2p6oqnd4CZJBcJ30bViIN6lrsZE+iGWY5vY+iYQZPvvlRFIvgKoF795bshB5P8BqPQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1c74x262swlu5pquzktw06q6vea9h4gsxkd3fe0","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"EcPvBhOC0gHlDd2d50MIQ0VTkJguMqChNjzgTGomBkU0txP84WpItm+6UYpCHLNOiFtXSh6+st2FBhps+evrWA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c74x262swlu5pquzktw06q6vea9h4gsxkd3fe0","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","toerunway5p",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvnU7gAWMvIExbM6yA2x+er67hs+mjHb4nS5o5qKDDxd"},"signature":"3FSvCUM8Y7F8B7LJGyL/EtGj1VyytJ9elAcRCTQpI6AfWl0Z4qPa2O94XhvEhi7tch54uK5t9ftuXUrooT8HNg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c74x262swlu5pquzktw06q6vea9h4gsxkd3fe0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["toerunway5p"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvnU7gAWMvIExbM6yA2x+er67hs+mjHb4nS5o5qKDDxd"},"signature":"S+rKh58y8lJc0R+B98mt8hPZZiW3JZJVS136i/j/MDdR32eQ21jv3riAnm9e/qq2GiOTSvjJvMWEMPqVbzuDjQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c74x262swlu5pquzktw06q6vea9h4gsxkd3fe0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1913","toerunway5p","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvnU7gAWMvIExbM6yA2x+er67hs+mjHb4nS5o5qKDDxd"},"signature":"AivR6yKnyMz7QqQ9eQ8bI5qjGmwNtCQFrPx96pn280YxS0VovEEhW8g/DIueb0YQPqfe/z4F1u1RLwgSTB/IpQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c74x262swlu5pquzktw06q6vea9h4gsxkd3fe0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1913","1","1","g1c74x262swlu5pquzktw06q6vea9h4gsxkd3fe0"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvnU7gAWMvIExbM6yA2x+er67hs+mjHb4nS5o5qKDDxd"},"signature":"ONUFd9QV94mgsSMY28INc9Q76tRlJeISpm/4xqriMUsnPZKkAiTa2Rn7fWOEmciv9zg1Z8PLjJiTKK/kkznp1A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1aptfkfz6yzk27kp3tnxt8pf3wpf5wv2ngee0lp","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"/mOuUDHkVyOWOieSFzlFxPdsOY7cbLlET7RQPIh6wb0xmZJbzA0ZZcfyq1w4mCcaPE4vVqQiHYUJIL4cB5PmHg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1aptfkfz6yzk27kp3tnxt8pf3wpf5wv2ngee0lp","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","nastytribe27",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5uKoUwajg1PHK/KRF9Tl4evBikXpOv4R4f3L6uS/fmk"},"signature":"1R5q06/eQvMbs59thZyMhG0qdxzC+Qce6Ja1NDOkgwIf5gS+6WC486W2vjdSS15zk9a0iq5HSX0h4yZ0hrwysA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1aptfkfz6yzk27kp3tnxt8pf3wpf5wv2ngee0lp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["nastytribe27"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5uKoUwajg1PHK/KRF9Tl4evBikXpOv4R4f3L6uS/fmk"},"signature":"brff4Bsz7JXPN2XSJbib7h6pMe19jbamkXrv9Fqe27ZiQYVwzhO+QTbW4Nm2bVJGxXuibsrZDBWhq4ievU9jNA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1aptfkfz6yzk27kp3tnxt8pf3wpf5wv2ngee0lp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1914","nastytribe27","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5uKoUwajg1PHK/KRF9Tl4evBikXpOv4R4f3L6uS/fmk"},"signature":"IEOWy6rVyC/ivgy36XwbwEOyttNOhPxPQPccYUM4nHktVBMU142cMPPWBsiIf71UeKmIxTcTCQLlVYbUxgbKMg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1aptfkfz6yzk27kp3tnxt8pf3wpf5wv2ngee0lp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1914","1","1","g1aptfkfz6yzk27kp3tnxt8pf3wpf5wv2ngee0lp"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5uKoUwajg1PHK/KRF9Tl4evBikXpOv4R4f3L6uS/fmk"},"signature":"FHEYJrjhaBpwwiRuRwdTVS2F7SFqyMq8H95K+F5E7KEBhblgjS83yJFCsq4Yd+7+xwlmfIuUYJzIySdEaglFlw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1q3472gaumhpu8hgesrlm4wncza7tt0s5yw0qsa","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Fw20u0kkcD4V2JVRiihur3ETLAjhRPiB1PH8P7VU2g0rirtO4gkZ2jFURUIblc9XyFnXKnduKUjUP6OgadfegQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1q3472gaumhpu8hgesrlm4wncza7tt0s5yw0qsa","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","controlmentionu8",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoTV9y9nQ/5FlZ7f1yxFe4lD6PVyw5hDsrE8mBX2M57L"},"signature":"y1KsCPsKJiZh8D7ZkJ9b4BOcuX0SA+ZzTlMPjfz46IB0caSU50UPPHxOD4rMCfUx07PcKR4MoSCUBrD3PVyu2g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1q3472gaumhpu8hgesrlm4wncza7tt0s5yw0qsa","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["controlmentionu8"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoTV9y9nQ/5FlZ7f1yxFe4lD6PVyw5hDsrE8mBX2M57L"},"signature":"aAfci5HH00lx6wNiviWzWXODiWwQZWFFrXeGXeKZHvwQeeAYswjjXaW0h+2rdU5C5uY7o8Pjb8fG2VB/nMwKFw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1q3472gaumhpu8hgesrlm4wncza7tt0s5yw0qsa","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1915","controlmentionu8","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoTV9y9nQ/5FlZ7f1yxFe4lD6PVyw5hDsrE8mBX2M57L"},"signature":"eKkEePOPYmuHEpTxufzzfGPHSFpICCu3Yq/3IYfzlxp1jjMi7NTCJdtkDKDZ5mte6odNGortCKu5Ln79kpUbMg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1q3472gaumhpu8hgesrlm4wncza7tt0s5yw0qsa","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1915","1","1","g1q3472gaumhpu8hgesrlm4wncza7tt0s5yw0qsa"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoTV9y9nQ/5FlZ7f1yxFe4lD6PVyw5hDsrE8mBX2M57L"},"signature":"O1jZjA8S5CBUEW7x3wQ71nN8SnD2UqgGPZzfUqE0U8lNPqVBhxwwLy2VXS5tP7VNzATvdxJx3zpkPBTdYdhR3w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1kr3xysademajhq8g8rk9hmp72s4hp5ze6c4vs5","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"zv03eeqhMcviH9W9oI1qPfBqKdmEPEUKxJeYmKqKHmw1+idTYTlnrbAT2Wm++p84BWDQ2PCHQ17kgn2p2tnhNA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kr3xysademajhq8g8rk9hmp72s4hp5ze6c4vs5","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","parentwavejh",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxxecsnbqVDL12M0JdGB75k4xab9v+ztLG0jqZEu0EZE"},"signature":"LNbtC13lLKbRBgE7tEUXLLBMuIF0YPtReFhR06xKbSt+A7VdquX1OPv60wzuEyQBoNYIUEe6Isu+b36wC0OSzw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kr3xysademajhq8g8rk9hmp72s4hp5ze6c4vs5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["parentwavejh"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxxecsnbqVDL12M0JdGB75k4xab9v+ztLG0jqZEu0EZE"},"signature":"fjZ6HNyPO+7UTCiVoaZEWISKuzOCzlJvCg9Hji5X/z0Kmk+y9NzgF+jGgP/wvQy7hgOi077rx7BkZOZ+x1y/PA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kr3xysademajhq8g8rk9hmp72s4hp5ze6c4vs5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1916","parentwavejh","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxxecsnbqVDL12M0JdGB75k4xab9v+ztLG0jqZEu0EZE"},"signature":"vED+3tyAR1jQj82ZfWxp+itZ7CJker0puoveOngauVABbVwkH6CI5/B42fTkfeqQ7xKOiMqpnq3WoqfoqaA4aw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kr3xysademajhq8g8rk9hmp72s4hp5ze6c4vs5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1916","1","1","g1kr3xysademajhq8g8rk9hmp72s4hp5ze6c4vs5"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxxecsnbqVDL12M0JdGB75k4xab9v+ztLG0jqZEu0EZE"},"signature":"Bj3shb2zXmR6twVUZE/gxHjycrzNZ7v+13zjzRmHq/U4b9JEki/tArrRc1Zwh8zUtiQS4ABwdd7qr51FmXiW+w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1jkddyhxx4qn6m56c4p6j9wcn3a6dcxz2svq2q2","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Y3svP0WNe48zLS/JYrOAmOVambKGqPfz5eQs2zQXuItxDm8ynAgpB3D6TMnKNaYcLz7Qpq6UhJViiGLhd/I1FQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jkddyhxx4qn6m56c4p6j9wcn3a6dcxz2svq2q2","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","catjunk6m",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5J6d7zHoppXtk7qjwDeOzZcnZWD1n02lWwf+nMIFpvV"},"signature":"/wcojrpN/BPhW5rJ16U7XuPQILPpwfX9ykIUB90jO0lVRutg8B/8JRjRF1Zda5mL30nnNeX6hUkQW0thSC2DVg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jkddyhxx4qn6m56c4p6j9wcn3a6dcxz2svq2q2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["catjunk6m"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5J6d7zHoppXtk7qjwDeOzZcnZWD1n02lWwf+nMIFpvV"},"signature":"dNUyL/RAqo2DQHpkqIRE3FtUQqCUamzP71tNZkF5LZw+NRpyUTNpf4NjazJ6+61sZB1jpmfIYGGKdU5yGcfalA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jkddyhxx4qn6m56c4p6j9wcn3a6dcxz2svq2q2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1917","catjunk6m","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5J6d7zHoppXtk7qjwDeOzZcnZWD1n02lWwf+nMIFpvV"},"signature":"Fsvv/h1rzjb4dvcYbcT5NrM7bTRNAG8HA0OsEPpS9tw7mbkceb3eDY1XdYtfmjx6N58tgK4X1D6P30IMI3H2+Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jkddyhxx4qn6m56c4p6j9wcn3a6dcxz2svq2q2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1917","1","1","g1jkddyhxx4qn6m56c4p6j9wcn3a6dcxz2svq2q2"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5J6d7zHoppXtk7qjwDeOzZcnZWD1n02lWwf+nMIFpvV"},"signature":"ORN08xyTZFxftSIxZv+XLG3l9NfQeTHhMLIQ3WQlQe5fLEH+E7+yl3e693arj3FwYmc6jBU0nxAiQWai74rNHQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1tg7705xl59tw7069q5dw32a8pvfkrs3z4dasq8","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"nvCIC8MICph8zzfgvoigcKkVltDQsR7ridb5G3eAAUk1ylGqzy0INvpvDkn2nj0JI3eOpYtLclB5YKjHCDWMxA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1tg7705xl59tw7069q5dw32a8pvfkrs3z4dasq8","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","oventowardw7",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1cb+o7c2I7u7nKI5KcFoCF/dYJU5t9LBD3KVciqOy66"},"signature":"K3Ht6Gt5efy9bxF2PuCfCHAKSY93ecdAuMgTar2cG/8tLwi/R5FX1T3+KagbjI+4DqrLqhfPpYWVlVCgFj5hkQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1tg7705xl59tw7069q5dw32a8pvfkrs3z4dasq8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["oventowardw7"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1cb+o7c2I7u7nKI5KcFoCF/dYJU5t9LBD3KVciqOy66"},"signature":"w3XAsoq8KcQP72Hddq1Kbm6B4faSpuJnorJPpAmaWlUXSV1tREZYBUFd39VGYcPnn4zGuuGQh/9JpSUYwdXn6A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1tg7705xl59tw7069q5dw32a8pvfkrs3z4dasq8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1918","oventowardw7","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1cb+o7c2I7u7nKI5KcFoCF/dYJU5t9LBD3KVciqOy66"},"signature":"hEHRTi0RTSZeF54MLNsatVQDWBzYESzkN3YeeHBXwJ0UQOQg9BJQxjKT+LKqVIW2JTDX4Q23JoiuFQmpAqq29A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1tg7705xl59tw7069q5dw32a8pvfkrs3z4dasq8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1918","1","1","g1tg7705xl59tw7069q5dw32a8pvfkrs3z4dasq8"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1cb+o7c2I7u7nKI5KcFoCF/dYJU5t9LBD3KVciqOy66"},"signature":"jalXJqU8zJ19yw6o1yttCF4/Cbe8GxPeuqQHE0WD5uRZjgXy5HyQBFnp30W5c5ZMaZ9YFdBWzKSnXZBFycpM/A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1qylch4k9xg7nm8f40we5dk599cd9mcakwgu4aq","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"2er1onIRT6lbk6gmYAGgt6CDZpP7VISaEGswAUhz+eJhznaiKDjfvGVX6cUB61gACDpi+21Vl9xLay8g9OlERg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qylch4k9xg7nm8f40we5dk599cd9mcakwgu4aq","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","logictowardnm",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuKi4SZTzopvkaRvMiL0xGqd8ZBB/5YlgZ3Px5nDqjI0"},"signature":"cDZM2PXRe+Qqq7VOVziPB/eGNYoQLTFe99fbmd2kJM5yPvmrfKei3o55mLegKFic6/9zZHSUvlyGip3FB19GFA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qylch4k9xg7nm8f40we5dk599cd9mcakwgu4aq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["logictowardnm"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuKi4SZTzopvkaRvMiL0xGqd8ZBB/5YlgZ3Px5nDqjI0"},"signature":"3qz7H3UEDLw5f4hyR6sjV7PU97Koy3LhoBJ5bD0LNBMvm7/NBO35N2ad5fqRnqFYY0esv9dUXdrZSO7NipZ4aw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qylch4k9xg7nm8f40we5dk599cd9mcakwgu4aq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1919","logictowardnm","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuKi4SZTzopvkaRvMiL0xGqd8ZBB/5YlgZ3Px5nDqjI0"},"signature":"xRAXwnPCQxBh3VqUGlQIzm0Y28qYUxDvKBj/SATPHPkC6bdpf4o2uVCWl00DcAG8pOstl3u56/htjf/UiROlHA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qylch4k9xg7nm8f40we5dk599cd9mcakwgu4aq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1919","1","1","g1qylch4k9xg7nm8f40we5dk599cd9mcakwgu4aq"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuKi4SZTzopvkaRvMiL0xGqd8ZBB/5YlgZ3Px5nDqjI0"},"signature":"eSRxdY3Ywwmk1EIRQHO7DzbuWeRkdSuHXtKk/DRGrUdX2inYBayFUg/ooGBqFS/WBV/7Pb7xqgp+zf/qcnhRHA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1str9pa7cckvhcpfzpclwy4nz6q9jqnekw59dkc","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"05u/w10PdlOpeWbItQ8PcseRtQvhcSdHtWowwilryjl1kgzHU9Gvelbsi5N1KKbLvtSChtG+LUS7PpccDxOK1Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1str9pa7cckvhcpfzpclwy4nz6q9jqnekw59dkc","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","blousecuphc",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyJ6fVYNA2ADkB5tCNriYPBjS4lgTP/4bglhTkR/ztqS"},"signature":"k/dhqxcEqpFSvujEt7eV1XcuZ0mlQTxOfveXIvQpQpwEzsaeAtuhJhDNddA0dLj8uz1xl30jZRqV7ccpyFPfFw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1str9pa7cckvhcpfzpclwy4nz6q9jqnekw59dkc","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["blousecuphc"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyJ6fVYNA2ADkB5tCNriYPBjS4lgTP/4bglhTkR/ztqS"},"signature":"TmWOZzKBDZqwa1PhyS2cjGxgZiiCDEBzIDGn9TXWmDcc7Z6Xy/3yccQZE5PMEZknCOdqWePjoPdE1yh56/luuA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1str9pa7cckvhcpfzpclwy4nz6q9jqnekw59dkc","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1920","blousecuphc","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyJ6fVYNA2ADkB5tCNriYPBjS4lgTP/4bglhTkR/ztqS"},"signature":"5It49p8C8POuJ8+C4H9T6L/9XK9gXt65Ti3MDwhHGx1A37asSvstPyiODcBNpfrNA1TUuko+9xp0RGLcVmNNTw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1str9pa7cckvhcpfzpclwy4nz6q9jqnekw59dkc","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1920","1","1","g1str9pa7cckvhcpfzpclwy4nz6q9jqnekw59dkc"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyJ6fVYNA2ADkB5tCNriYPBjS4lgTP/4bglhTkR/ztqS"},"signature":"IjtLLIHkenV5c+SdUN4n7xAxvMl1jvY/ygE+CYlnagJLmxrJKyRYT6D7uaP4vx3bfLigwtKQ4cSIgQp6bFx4GQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1dqe62qvcx5wucapq9y788z7yf6vnvj7wg9qsrs","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"2Rqk//mXUpXGy5m9LJKweVv1nkgB//01SDWwbUMhQe4Z3eeYfgW3TQMlVKvITMJWmkQdJ1pM7t4Gz4CvvO/OTw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dqe62qvcx5wucapq9y788z7yf6vnvj7wg9qsrs","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","miraclepaperuc",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1cCsn956skbiaG1x34miTD5WMETZjqWMQdtvfyeCzy7"},"signature":"7Q7cGS8rlqdarJ7Vh+DaBV49TYxWFjtpm1z6RcVs+gFO3Gp14vu2mZgeUlRMqZlZtMn4qm73g+VAJ4tdZMk8jA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dqe62qvcx5wucapq9y788z7yf6vnvj7wg9qsrs","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["miraclepaperuc"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1cCsn956skbiaG1x34miTD5WMETZjqWMQdtvfyeCzy7"},"signature":"FjswzU/6gfBbh8fijXYtiR0fxc5hUFdNuE19HHlW3AgMb7H1QcMrobRTguVPpT08qIZg+1GTh6Ux8QRf04Lqhw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dqe62qvcx5wucapq9y788z7yf6vnvj7wg9qsrs","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1921","miraclepaperuc","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1cCsn956skbiaG1x34miTD5WMETZjqWMQdtvfyeCzy7"},"signature":"m7sKtxsmTk+nQGY11z16ww6LhuUyB+MXv/WE6zSuJ3lUrgIfLIVaWTVO5tLgn5XdJ6MmxsxATPqJcodbfzzRpA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dqe62qvcx5wucapq9y788z7yf6vnvj7wg9qsrs","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1921","1","1","g1dqe62qvcx5wucapq9y788z7yf6vnvj7wg9qsrs"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1cCsn956skbiaG1x34miTD5WMETZjqWMQdtvfyeCzy7"},"signature":"yN8UoKG90oOT3SSwdrLiWe9CWJ7eievrnUaqbsnOWlAhPU+00bGzcNb7LwZhLk/jQ24YScyxs1kx31iYnJlE/A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1n2y6gkple4dlevcdju6jc47tnpl2rx9qg7fcmh","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"jjuurCZnwuQrqH3Vc2Py3wbdKQUHNKNQJ+n0ob2FC8ouD9Qy7zzVxveMLDIFtHxiknOGAQMv8otpo9qTiKYgPA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1n2y6gkple4dlevcdju6jc47tnpl2rx9qg7fcmh","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","grocerydignityle",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Api3W9hTQPCq7IxOxUfL1rr/OU3f4EagC77Za/pV964/"},"signature":"3Doq9cMsm2Q+FcTdoFpeNPKYExH+uoE10fYjAqkGx4g0aMrrwBtx7S4NKDgvtIvhVBHSCSbW1OShxvcLsd6vdQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1n2y6gkple4dlevcdju6jc47tnpl2rx9qg7fcmh","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["grocerydignityle"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Api3W9hTQPCq7IxOxUfL1rr/OU3f4EagC77Za/pV964/"},"signature":"EEp10lZDA7wS8X2ntuoxFDNoth+HS8cJjlpLREwj5uksu4xJqUVci1Yw/7p2WEVrtoCjB2fDsq7tqqWHsDUn+A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1n2y6gkple4dlevcdju6jc47tnpl2rx9qg7fcmh","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1922","grocerydignityle","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Api3W9hTQPCq7IxOxUfL1rr/OU3f4EagC77Za/pV964/"},"signature":"xXEbCkawM0oLnARCAAu7icRq4JMTrTaRoI2DQ3A/7Js9rz5nGhx5037+KCgZgdOseoiJuQ5UWuhg7J64msNHWw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1n2y6gkple4dlevcdju6jc47tnpl2rx9qg7fcmh","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1922","1","1","g1n2y6gkple4dlevcdju6jc47tnpl2rx9qg7fcmh"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Api3W9hTQPCq7IxOxUfL1rr/OU3f4EagC77Za/pV964/"},"signature":"+TP9Os+ChMaHhVcg3UvzLIr0BPVMjeaqI3PneVF5bfAH5dOpazg5qcC67qRBwRUNr5nw1Z0svlL6wmLwzB1gqQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1lk4fz8azy29a8d3d40wktr8xzkv5lytr07d5sy","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"J2EfsO0C25GcFm8GMVdZ0mFjTVNBAoS1fpd0nzq4KFcq8xu/zIhccnwnJ/oNMSdjmg4+ZiRdQE0V0s+vy5ExRg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lk4fz8azy29a8d3d40wktr8xzkv5lytr07d5sy","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","leisurepagea8",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8KuVjbw9fzbkXlvMqP/h/47i8i4S5ZJ9t68f1+hBzdw"},"signature":"5EbmRuYCa8D39QAeMhzaBbMwZHdjSBRCgy+Ftp25IM4rRSh8uKMRsTkAI3eodVsKerJYkSC4AXVk+5Ht6Es3fQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lk4fz8azy29a8d3d40wktr8xzkv5lytr07d5sy","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["leisurepagea8"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8KuVjbw9fzbkXlvMqP/h/47i8i4S5ZJ9t68f1+hBzdw"},"signature":"rVX+Phe01r7KNd5pzcnanIzEudWeeNrFBFuGx6cZVcgbs0vdRWQSXcv3tZbXEz8BzuQBP48qPHSRAqUbcaGbag=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lk4fz8azy29a8d3d40wktr8xzkv5lytr07d5sy","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1923","leisurepagea8","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8KuVjbw9fzbkXlvMqP/h/47i8i4S5ZJ9t68f1+hBzdw"},"signature":"iBHM+2VUAtgJcDSpipg0JXvbDbIa9YU2K5cph5xNtBZ+FEOB24IYFn0pmJp7B5sfRVJ9gg2gdDuNI5sXTLPi2g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lk4fz8azy29a8d3d40wktr8xzkv5lytr07d5sy","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1923","1","1","g1lk4fz8azy29a8d3d40wktr8xzkv5lytr07d5sy"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8KuVjbw9fzbkXlvMqP/h/47i8i4S5ZJ9t68f1+hBzdw"},"signature":"74spNUOk5ec5HH8s1OW2F+5nxhd8i+156QXPS/JYWo9qY5pOu5W1MSRrJ3A9Pf3CC2AA9JBDHda3ieFnyEeTwQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1zytsfy9nz099vx0n730ery7y88zsjmrt3t4xwp","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"gZMVHn/Q8x8ZaTlTLIhuPoE+K8ypliRvg8cIb9aAIvkewW7F8G4NPyYTHavs9+a7SSIFtOGhMvqwaauHXHli6w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1zytsfy9nz099vx0n730ery7y88zsjmrt3t4xwp","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","echocore9v",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9HzxJE/AXEskMSYlQ/FN2/aV+pnaKWQCHEcrRlDG8BN"},"signature":"D8TaHIYAUt2wXp426d00NeZFvgrdT9pvqZg3a2DJlxtmZPBvTQYDYKt+fAm8wuzUHh2oZJ6SRWuK05OEZPAhEw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1zytsfy9nz099vx0n730ery7y88zsjmrt3t4xwp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["echocore9v"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9HzxJE/AXEskMSYlQ/FN2/aV+pnaKWQCHEcrRlDG8BN"},"signature":"UoUBVCFSdhtlP5Q586TvIKgQB0myHfU9D54sCGzI6WpHI2ejd0Cgg1swpphys2csOc8LE2+9FpaiRX+he6bJTg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1zytsfy9nz099vx0n730ery7y88zsjmrt3t4xwp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1924","echocore9v","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9HzxJE/AXEskMSYlQ/FN2/aV+pnaKWQCHEcrRlDG8BN"},"signature":"80/1UEVpqHQzkY/NN1Oz7RLRnmxBAOk1+2RqmAzIqfEY0LnkjCjdHCM11MihhQyg6lZekmScolRh47rHkgo39Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1zytsfy9nz099vx0n730ery7y88zsjmrt3t4xwp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1924","1","1","g1zytsfy9nz099vx0n730ery7y88zsjmrt3t4xwp"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9HzxJE/AXEskMSYlQ/FN2/aV+pnaKWQCHEcrRlDG8BN"},"signature":"waxOTr9QcTlMq1z8yFo+tESkEtAX8e7QS6qdvN6aTyUT1KipPdwI0KIvL74AZi+HJPU7WpvKeaA9f8MLP01OWQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g16u6up5264wvp2ljhgvv00hn3azyp5xzrhpnhmr","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"6LavfdVtW8E8l5YsengJJcjPcfgkvjxbG0FKqqMUZY5U0jTpgZBeP97wFf7+ra1wXwVdl9Fk8NCjv6XI8aK+0w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16u6up5264wvp2ljhgvv00hn3azyp5xzrhpnhmr","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","buyerwearp2",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2dZLmWSDsgSzBMUIM99DG7B3LFYS69rhqdATKj3e/Ad"},"signature":"kQWCONL0iUj4kXzUFjR6W/NhmizmR64AO9IyqM59v3V2dzhp0Bd2tczXlLwo9o2RlqFUwK0IAQFuIvubZdVJrA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16u6up5264wvp2ljhgvv00hn3azyp5xzrhpnhmr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["buyerwearp2"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2dZLmWSDsgSzBMUIM99DG7B3LFYS69rhqdATKj3e/Ad"},"signature":"WVC5N9jdX7jLe/7KLBzkaZNYVHo4tn+yUKrUz4udmvFj/8z3/qHo0CjqosoNnft+/nmg8Am4qPXZ9WHnaa4Hgg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16u6up5264wvp2ljhgvv00hn3azyp5xzrhpnhmr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1925","buyerwearp2","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2dZLmWSDsgSzBMUIM99DG7B3LFYS69rhqdATKj3e/Ad"},"signature":"/PJk/gywF4C9h94RSl4NU0V17KHZVwq5DsEW7mw/Okx/2kVSHik9xG2vD6uL1rs4PdNPdYvtB8khXR1PhhcyfQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16u6up5264wvp2ljhgvv00hn3azyp5xzrhpnhmr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1925","1","1","g16u6up5264wvp2ljhgvv00hn3azyp5xzrhpnhmr"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2dZLmWSDsgSzBMUIM99DG7B3LFYS69rhqdATKj3e/Ad"},"signature":"XEzoPljitrvSRtwpPNqAHHIsxN7MtK3WNlPBE0LMqA8Xwj9s4bfoLx1NuDva5krAPyiaDZJYd5F5brR6zeW+zw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g186ynkdg3czqj2v2z8jpmnujdygx44xhl2s2u8p","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"vqLQQA8BEaEurjL3B3q71f6U+IEEo/o8V1cG4e1t8xIOslQwtMMrbTCipK93rPygtOc5wlEbaK3Eo640cE52eg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g186ynkdg3czqj2v2z8jpmnujdygx44xhl2s2u8p","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","regionmustj2",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"At91hQthTFvMhI76kD8ErR1B/fqs5NFZ1OmznHxtB8fG"},"signature":"u5eDfQx8blhXGDoXHEC0MFI4PUtSCKtgx8kv8szuNHsHPVglxOplPeWXKuWMihi2n/h4BNYWV5yJXdiZUq6SEw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g186ynkdg3czqj2v2z8jpmnujdygx44xhl2s2u8p","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["regionmustj2"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"At91hQthTFvMhI76kD8ErR1B/fqs5NFZ1OmznHxtB8fG"},"signature":"zSvG44DhOzQtKY6B0uCWuE3qM9gM9JitciZvdV5K99cHaUsA/ftfEueQmznMtQwfOuJLlg5mANc6FJjLh8umrg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g186ynkdg3czqj2v2z8jpmnujdygx44xhl2s2u8p","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1926","regionmustj2","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"At91hQthTFvMhI76kD8ErR1B/fqs5NFZ1OmznHxtB8fG"},"signature":"HKq75U48QubTXc/85hJLYhqn6hlrtQRuQMw7rg+3HQ5Bjn+8BE3Cp+YX5W5Wfmne844pV76BWpjVlExeDbnf2w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g186ynkdg3czqj2v2z8jpmnujdygx44xhl2s2u8p","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1926","1","1","g186ynkdg3czqj2v2z8jpmnujdygx44xhl2s2u8p"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"At91hQthTFvMhI76kD8ErR1B/fqs5NFZ1OmznHxtB8fG"},"signature":"wCXfVFUxa+ADw0YETYE0xwHsOmnXljpeMg3qBKgsqu80IKxjv/ajrf0+CGvxR+cJma/+e3tuqYO7j3ys1AZbIA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1lq0ewg8ptvgesqn2lrc8yv72c93msqzlrhq0kc","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ZaJkkjiPQ+Z266/0mhCEF1TUHxI+YcZmUw7srdWmBn8sYdFvOGZzVpIDvlr4OuLwTAHQGpFJlio+fWY30uejFg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lq0ewg8ptvgesqn2lrc8yv72c93msqzlrhq0kc","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","mazeavoides",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5VUkpy7VUVdSMZbYm8f7/lv4yqRXZPytVb9wfWfaD9Z"},"signature":"fEy72w35C9KQkkICac6XdjOYdJ5tI+htuhG3aJybB6Mvxxj6a1JH0xP+BTAEfl/0su7p4FZpuDzZiipj7u2XHg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lq0ewg8ptvgesqn2lrc8yv72c93msqzlrhq0kc","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["mazeavoides"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5VUkpy7VUVdSMZbYm8f7/lv4yqRXZPytVb9wfWfaD9Z"},"signature":"UQD9LO6m4fNTGczmzC2V0AyNOYkwIQ+MNbZMmQhE2e8ZP3Kh3TIjojnhhhTyG1NUFOn1YxbQNPEv+gav4g2FUQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lq0ewg8ptvgesqn2lrc8yv72c93msqzlrhq0kc","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1927","mazeavoides","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5VUkpy7VUVdSMZbYm8f7/lv4yqRXZPytVb9wfWfaD9Z"},"signature":"rxu8Wi15J5zfXn+MrqqBHz06IMv7f+gs92Ah0Ou9UsJarGnWmwOltU7Wslf57thdDQQ/RwaRfLEOEX5aZ5i/Fg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lq0ewg8ptvgesqn2lrc8yv72c93msqzlrhq0kc","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1927","1","1","g1lq0ewg8ptvgesqn2lrc8yv72c93msqzlrhq0kc"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5VUkpy7VUVdSMZbYm8f7/lv4yqRXZPytVb9wfWfaD9Z"},"signature":"yJ5mGPyOl4F2F8TXD3HcgZPejMEW+B2hI52/n88xd0ZaCehBzLqOgFh/XrQcV5OgSYT0yopOScNDDj6Tn+WRzw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1su6cw4s7z7esyr6vxa0mwjtj8j0dn38wdx7hwv","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"KzQ7JV+fkdR6pROhQjGNjsBtS5bsVIlk/B+UfPIj591f34UwxZDXjvC/6m9GTq1Ofj221fgPGShG7ppA1FG/NQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1su6cw4s7z7esyr6vxa0mwjtj8j0dn38wdx7hwv","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","gloomtiredsy",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7Omltig0zP7Gt4i9hbfFB3nVvfw5rarltlLP93LDL/W"},"signature":"CdEGOC/E2kTeSpGXrMqvAitwAyHgVGOkPYXNz01SF11xDnJ0HthxGGTJYzon0PMIHAYO5OUQowri5fgy0nhpOw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1su6cw4s7z7esyr6vxa0mwjtj8j0dn38wdx7hwv","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["gloomtiredsy"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7Omltig0zP7Gt4i9hbfFB3nVvfw5rarltlLP93LDL/W"},"signature":"EyqadNEW7y0sICKO55CgsbkwPRasNf3+QpGj9+1u5Job8YNGfmhwFXjJL3rJyOZjuMWIeGZu/BY2a1BhErouiA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1su6cw4s7z7esyr6vxa0mwjtj8j0dn38wdx7hwv","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1928","gloomtiredsy","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7Omltig0zP7Gt4i9hbfFB3nVvfw5rarltlLP93LDL/W"},"signature":"FgX8Ika0gRYUjyJXF5HMTaRFSUD2rXOJ3YZhCvGeW5As1PDwWkLT7sE4tFxRExmIllsYOkROEBE2ou6d63njaQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1su6cw4s7z7esyr6vxa0mwjtj8j0dn38wdx7hwv","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1928","1","1","g1su6cw4s7z7esyr6vxa0mwjtj8j0dn38wdx7hwv"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7Omltig0zP7Gt4i9hbfFB3nVvfw5rarltlLP93LDL/W"},"signature":"TeIj94M4MFrUxKnAYpyxf50p95hZKy+7Nqen5+Y8kPgwCmiTeW6en1sVCXTR/s6ic0/o3M25D3ci9ZaD9vwO/Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1hj4rku25h7zemft7aytnmse49u46paw9pj540z","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"+7YD9O54zBP3nc7+vQCTBpI0jJ6youx1YbIPm820TwwMsqL3Z7x5ohhkiOhXzjzlqPQbJ5yAK8rXOoazcoYBHg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hj4rku25h7zemft7aytnmse49u46paw9pj540z","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","sixcurtainem",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2ahLADrkCvMA/cAkIBDtXVp/ZdNsS1BXzGVYjGCTPnX"},"signature":"GJcgw1BpEXGXIDoi8oP+W42Jr1NJOjBKG0UwlWBRvegN2Ntk2G2k+Jw8/LS3iOGd5+bxu4YS+smQMdVzBZTqdA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hj4rku25h7zemft7aytnmse49u46paw9pj540z","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["sixcurtainem"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2ahLADrkCvMA/cAkIBDtXVp/ZdNsS1BXzGVYjGCTPnX"},"signature":"zhrc89/wBqx8XBSJ7nYJwv7EDPkAUjbCYyeC3CPgtCF2Q2Qs4QstLgMqTLaqJDNBF+MCIvYubYpbMWV3dKrMpQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hj4rku25h7zemft7aytnmse49u46paw9pj540z","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1929","sixcurtainem","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2ahLADrkCvMA/cAkIBDtXVp/ZdNsS1BXzGVYjGCTPnX"},"signature":"jox6HfTbdAme6UMYVItE6NAEn+S178gwbYJpu9FFVWYICXt3JO4boEHOLnzwNkiGPB2CQouUN6OicBvPHuMR9w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hj4rku25h7zemft7aytnmse49u46paw9pj540z","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1929","1","1","g1hj4rku25h7zemft7aytnmse49u46paw9pj540z"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2ahLADrkCvMA/cAkIBDtXVp/ZdNsS1BXzGVYjGCTPnX"},"signature":"vbr2W+3oyT8sQ/YnfRdKBfKPJdaNlgGAS2O/Tsq2TZVJMtP0c5mRLwLdnvPVyYUAglJpIkygx575vwmxz1m68A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g17m045pl6hgr2waxvtgahvc0xczd37utvvwfssn","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ViGrZIoN1U1gUsN9CC40YDbSXziIeExwwiBlpvL3Uloyqz7+EDy1y/3/z0bealsTFjkhZfgxhoVdLFGr56OqZA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17m045pl6hgr2waxvtgahvc0xczd37utvvwfssn","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","ruralpepper2w",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0dY6JT6IRLODgL33hIKsZJewkQxAz58UO7Of16SQkEv"},"signature":"Vy2UhEP8AvHjzvovuL92sbKl11ZmQC1CR2UMPvlHQEQhI6csOqCGC6o03KIJKwFTqgQZ2MKiDmeZ2xMDYT9nNg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17m045pl6hgr2waxvtgahvc0xczd37utvvwfssn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["ruralpepper2w"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0dY6JT6IRLODgL33hIKsZJewkQxAz58UO7Of16SQkEv"},"signature":"cQeK+Ih51J+UVz7S6cPTQwLabHxUxUru6kJMSJ86t2AHvG71LOaP/5eFfuLStefNO6G45M4tVqmsIdLlARIRXQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17m045pl6hgr2waxvtgahvc0xczd37utvvwfssn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1930","ruralpepper2w","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0dY6JT6IRLODgL33hIKsZJewkQxAz58UO7Of16SQkEv"},"signature":"gcB/5AlKjjnfI8w0ckDFkq60Q3Hbox7ehxpmJ1pbWig/XCOi0PPUy3XXVquJOdr+vhejhXVPzcafSaSfy3iDyg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17m045pl6hgr2waxvtgahvc0xczd37utvvwfssn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1930","1","1","g17m045pl6hgr2waxvtgahvc0xczd37utvvwfssn"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0dY6JT6IRLODgL33hIKsZJewkQxAz58UO7Of16SQkEv"},"signature":"D9IcX9lgfUvNBIp8ojm1rG9YWemmYA7PwwftRHJY6A5XD/jwZISnFRfni+XOeCPuRAKf/DwKt2A6GVVR9A6KCQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g18kgv7tp68xthp6h2v2snrepkpv23dt7nv3curw","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Sxu1NSj5uf4cTTJKNyTk7ewAF4PEYEL0iUCULZsPSoE5mwWI56zl7K3IloRw99VHg2UIWDOSs0QqvBX76lyNgQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18kgv7tp68xthp6h2v2snrepkpv23dt7nv3curw","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","overmarblehp",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmQ7YmV6HOh3iCZiQ1+3+vyZm1JdMLqV3cfglysad/Jq"},"signature":"2Ntp+Qt14m0BuidEK4qvCb5dM1PdtVuU8PIYf4JojDhqDdNCz8/SwloXYQ7oaSbL61CaJbDnEEjQhh/IIjcYLA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18kgv7tp68xthp6h2v2snrepkpv23dt7nv3curw","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["overmarblehp"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmQ7YmV6HOh3iCZiQ1+3+vyZm1JdMLqV3cfglysad/Jq"},"signature":"RISW7ueY4PF2ao7EwGPaQnUq1aWtBHCnkXmEzFDmzEQdyTc6ogPaNFzlj2tHU3E4XuGk+WyIP6vhPmWD6emRyQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18kgv7tp68xthp6h2v2snrepkpv23dt7nv3curw","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1931","overmarblehp","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmQ7YmV6HOh3iCZiQ1+3+vyZm1JdMLqV3cfglysad/Jq"},"signature":"gRMKH4YnWSUNmID4oM1fccfdofHWy7B1o3ggKV3tbQYHZJG/dtA9qqgmZhDNwz84TYxIY1D5GScFdkKB8H4vqw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18kgv7tp68xthp6h2v2snrepkpv23dt7nv3curw","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1931","1","1","g18kgv7tp68xthp6h2v2snrepkpv23dt7nv3curw"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmQ7YmV6HOh3iCZiQ1+3+vyZm1JdMLqV3cfglysad/Jq"},"signature":"oSHF8UjzODXHYRHByOgZgRMLXjWKfeOc4wI8G2ZcesB/Ft6euZpn94hAN1mfPLDYqhH8eOjETBnU0NdFy2SE5A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1qc30cnamedalkdmhxuz8fpqjtgqr8wrjx2l7j2","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"rycwcUyWERkO4Um+6vg6g73+ba4QkR5nuXDJnq+RRRRZSu4eBDrxqc19RogC4WD6z/TJMXHL9YBYBZX/xfaZzA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qc30cnamedalkdmhxuz8fpqjtgqr8wrjx2l7j2","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","scissorscubelk",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9v6JysPU2klNPX538hYazvZx/f+c0CNIMhX4I5EsgpJ"},"signature":"Dg9iX4EX4AV8ufHS/Uw67iugSxB4N2fvHvIOIC5JgfZhnc/kuNq0vlM2LdsmD8JDrCXUnZDi1eiQf4CFJAkleA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qc30cnamedalkdmhxuz8fpqjtgqr8wrjx2l7j2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["scissorscubelk"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9v6JysPU2klNPX538hYazvZx/f+c0CNIMhX4I5EsgpJ"},"signature":"ftslbzTTN5CwpQfen0GpA7KsV9ngztWW4RNEXMqR0rYU7ubmmlm343vAoH5HdWhMDXIN60okNNtQTuSCxnm3Vw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qc30cnamedalkdmhxuz8fpqjtgqr8wrjx2l7j2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1932","scissorscubelk","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9v6JysPU2klNPX538hYazvZx/f+c0CNIMhX4I5EsgpJ"},"signature":"0szrVebcntsdHRzgVY09kvnTmLQQdnF+S7/yfp+9inN80T8UJqc1OwsuzhydZMFobgzFwWaZxTPRbkm0PV/iJg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qc30cnamedalkdmhxuz8fpqjtgqr8wrjx2l7j2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1932","1","1","g1qc30cnamedalkdmhxuz8fpqjtgqr8wrjx2l7j2"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9v6JysPU2klNPX538hYazvZx/f+c0CNIMhX4I5EsgpJ"},"signature":"HOKsNgvi0IRICmmhY7NI5Ltt15IpDdIhwFBniuIpbnYGbMYRiVj5fx2JmC8ClTKPAIYHTOlh8BkztRLH2YnnBg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1uft6a8c74z63vv3edv70wt9j58d9vexsfjqlgv","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"9ut5uI2YsyQSVNHJklGxKHTfLmYQb4wYHfkPJKEqNhdy4Selb2f9zs2tXSWNPq7p6pf+yAxmnZxwVTkMQMC2Tw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1uft6a8c74z63vv3edv70wt9j58d9vexsfjqlgv","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","keeptank3v",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoSMjCfJzLjuLWsVS+SWY3MaBVA70M1y5aLVGxV6gaUo"},"signature":"umeSAt8Bj5KWIwUcl/IMq71NiUfgiD0Oy6+wlBeqPZQI7lmRZFQuO9+XBA849DpKsQ2hKCddVamcqN5O3OO8Xg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1uft6a8c74z63vv3edv70wt9j58d9vexsfjqlgv","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["keeptank3v"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoSMjCfJzLjuLWsVS+SWY3MaBVA70M1y5aLVGxV6gaUo"},"signature":"PB4Wrc8IdINKO21j2LA7tYBV3BbYxJX42Hdb+RCqz84+/Rbz4sIN0SPmrWTma9Ya5xJXsm5ycZdtFV2WU+cKLw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1uft6a8c74z63vv3edv70wt9j58d9vexsfjqlgv","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1933","keeptank3v","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoSMjCfJzLjuLWsVS+SWY3MaBVA70M1y5aLVGxV6gaUo"},"signature":"l0AtGNiYitijM9dV5btG05kXd2CxWPEw9yNFI4nqeoAJ7H2snYXuofd5G46hJP4Rj8v8Xj3mlyABhaQ7Ux3SoQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1uft6a8c74z63vv3edv70wt9j58d9vexsfjqlgv","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1933","1","1","g1uft6a8c74z63vv3edv70wt9j58d9vexsfjqlgv"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoSMjCfJzLjuLWsVS+SWY3MaBVA70M1y5aLVGxV6gaUo"},"signature":"iEFb3v1QfU9/IcOtMwuOhYRY6hIyStS+JGGQsZ0VUyQSV8e4DM/UGKMnklA9YzNL+JUH8Fhe3vBXNzyufAb6mg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1pwd7q07pfam29h5zchgh49kpvaukpmqhec2lpw","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"iN9mnXpvK7sRMCuP1NPh8ZVjKWTgClUdZuvZDl1aY0lFXEj8YVGBgrCe+EdP61qQGYe1HGQmeo0BqwHUo8anpg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pwd7q07pfam29h5zchgh49kpvaukpmqhec2lpw","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","capitalrose29",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApI72Du+X7Al9VNGBx5UamREsBgH1WNx9l8x8z8WEFn2"},"signature":"mnAljzD85o1TbguSKPpeoG7bzDrbKujF7xa06sWwjRVALR8Hqy7qGI1eCPAbqcoh2k7w5WeNvR1WZJsoYwgvAw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pwd7q07pfam29h5zchgh49kpvaukpmqhec2lpw","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["capitalrose29"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApI72Du+X7Al9VNGBx5UamREsBgH1WNx9l8x8z8WEFn2"},"signature":"JkxcaaSZT89vkVRtpTUxygnkndcEGLdjyGDdTfyR7OMhWCyXkiDyjO5A9cv045LUUed1M1muldQx62KBKceyjQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pwd7q07pfam29h5zchgh49kpvaukpmqhec2lpw","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1934","capitalrose29","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApI72Du+X7Al9VNGBx5UamREsBgH1WNx9l8x8z8WEFn2"},"signature":"5OKuuXqHcLKEHAJ5/x5XCoSxiIqy/clidFNElGD6NTgvt8U1Ul1l2EgHuyoLEBbm+5E5Fn6OYkmJE7Klzqhxkw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pwd7q07pfam29h5zchgh49kpvaukpmqhec2lpw","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1934","1","1","g1pwd7q07pfam29h5zchgh49kpvaukpmqhec2lpw"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApI72Du+X7Al9VNGBx5UamREsBgH1WNx9l8x8z8WEFn2"},"signature":"T8SDO2EfkLsdcpJdTpPha6ABwInKs4SOiZ0HDItJ3wZQLhIaw/Ks6yg6g9PBsoR/WnSYIDX2buPhFMkcyRmoAg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1rtd8d3gayfqhjcfnvhclg7tzgryqt7s0n96fr7","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ACWd988NU0TBV8ap2/9X+PoGpXFb5KazNPQV4DCoj0YBCk7Yx6DRhn0HzEQkYhLd9uDifADKFpfNp8YrFjuKNw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1rtd8d3gayfqhjcfnvhclg7tzgryqt7s0n96fr7","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","situatepeacehj",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9002pIimeAO2KEwdjKDDyZZ1BJcodWBs94oSMFYOhlQ"},"signature":"walFySelJW7msPbGi8HOElAQJXdSCwm9gAUMlHTwUmB4j4hrTZ19MwIGKW/Zuz0RD1DXmFXI1rRLR0X242WE3Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1rtd8d3gayfqhjcfnvhclg7tzgryqt7s0n96fr7","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["situatepeacehj"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9002pIimeAO2KEwdjKDDyZZ1BJcodWBs94oSMFYOhlQ"},"signature":"TNqR/5chlVOa3wv9VxQuqgVkeH6PPQjI1m1Ym8zjygdCbwjjwkVJYu4bqpNexfdZESLN8OMbPd6Yf8xkxai6og=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1rtd8d3gayfqhjcfnvhclg7tzgryqt7s0n96fr7","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1935","situatepeacehj","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9002pIimeAO2KEwdjKDDyZZ1BJcodWBs94oSMFYOhlQ"},"signature":"QoK5qgmgVWBbxbx7Oi5eBs2EpEnhN7zlCcIS/Dnls6ZLOoYXPnzuCAhrYVdQol9sR8eUAxGXdfBgD23iomQw6A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1rtd8d3gayfqhjcfnvhclg7tzgryqt7s0n96fr7","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1935","1","1","g1rtd8d3gayfqhjcfnvhclg7tzgryqt7s0n96fr7"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9002pIimeAO2KEwdjKDDyZZ1BJcodWBs94oSMFYOhlQ"},"signature":"ywk6Md/L7FRa6HBARhNQWIVcQ4AvuVVGgzvP7y9d1Ng7LrIO+FUAq9H0RGjUDTbfAJFg1Oyx73zIncVLvvOTzg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1v5sln0svhh4wv8jf2sgt4jmk7uf33grxt7ajqt","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"7d3JtDbeXtanrhz6xRLNrNkBkDy3ZyMPaQVq2We1/JhNFFcbgRKNxM9k7xWNbBiyhq2hg5NCVa4J8B0A8u8xDg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1v5sln0svhh4wv8jf2sgt4jmk7uf33grxt7ajqt","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","chaossteakwv",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhjzIavvmPQRyWhGvFjkfBCgIg8irFSXHM1sFdVYjydG"},"signature":"AL6pT9rKk2hjFB/NQ+WULWXU7xqR+sM+Y93pj+hUD2pP5bgak/UDIDAacAVMm1nvQZJs3jraxajD7fjvX9JnJw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1v5sln0svhh4wv8jf2sgt4jmk7uf33grxt7ajqt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["chaossteakwv"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhjzIavvmPQRyWhGvFjkfBCgIg8irFSXHM1sFdVYjydG"},"signature":"+UJ6EazZn4BBy88y4LOskDkMLwU5I2bOOFDZEIexFz1hP56k5q7u18bIFoEjg1pl3z4IRFaEgd0IsVuUgoYiAw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1v5sln0svhh4wv8jf2sgt4jmk7uf33grxt7ajqt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1936","chaossteakwv","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhjzIavvmPQRyWhGvFjkfBCgIg8irFSXHM1sFdVYjydG"},"signature":"N/Izkrflye4ghBRiUPTPFL2ZLen6mZhRhHV93jdmL+x+/qH/hilgbPRJoT4+/a8YlwfTv9S3tOz1c94IRiRmkA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1v5sln0svhh4wv8jf2sgt4jmk7uf33grxt7ajqt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1936","1","1","g1v5sln0svhh4wv8jf2sgt4jmk7uf33grxt7ajqt"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhjzIavvmPQRyWhGvFjkfBCgIg8irFSXHM1sFdVYjydG"},"signature":"OCnUEPLJF7NbZ8amfdQrLrzRaxRoYCVH6QLsv1QGfQhnNoKhksUCwCo5CrD64arncd6nkgok0g7lQLKuwEb1bg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g168hcjl3zprqd535lml2knzwfqxsv2avhatjkqn","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"JPoiDtW1LhQNs0o9YlugfsrgLhRPusSU2mktu2D2PYF5MBbkCbOZ2ONxc1pR8ESSd8ODARq77lo8ukDBL2Abqg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g168hcjl3zprqd535lml2knzwfqxsv2avhatjkqn","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","cityabstractd5",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArYVNqwgcaJLqkz6WVH+RcMfEn811KgxDFz3ECVkAxKy"},"signature":"VQGTJz4/mqcSsSwn/EbEJ4Zd/0k8RFLc0d//DnxaSJ46elTgddZMZY2VKt5dIRhqAYarO3w3VtaLTd1qs0ewvg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g168hcjl3zprqd535lml2knzwfqxsv2avhatjkqn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["cityabstractd5"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArYVNqwgcaJLqkz6WVH+RcMfEn811KgxDFz3ECVkAxKy"},"signature":"cKziqy0rJr+ScqFnlOjLAjyrUOXMZjCobscbVxlpt9lXcHqOtEMFjBYe8tHSJrVwwaSzvTmVj4d/u9h8qmKPPQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g168hcjl3zprqd535lml2knzwfqxsv2avhatjkqn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1937","cityabstractd5","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArYVNqwgcaJLqkz6WVH+RcMfEn811KgxDFz3ECVkAxKy"},"signature":"VgxFvkDAnluF7M3zSBQB7oTFKIih20U/6MYczvKa3FRSbygi3wkckYPRNHZPlaWHaIWJyYUfrS4v9g9TwYOWCA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g168hcjl3zprqd535lml2knzwfqxsv2avhatjkqn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1937","1","1","g168hcjl3zprqd535lml2knzwfqxsv2avhatjkqn"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArYVNqwgcaJLqkz6WVH+RcMfEn811KgxDFz3ECVkAxKy"},"signature":"hVpY3fvmle9CtSvdZV+50tiKa9sXK9xQMH465y3t+RlbUIuRYYHsJOkmfeBI6BK7fT8Ny/9AWRjotz8jQeRWyg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1ad4yxw5szdgk59v7682fys9vc04ccvrpfhvvl9","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"5NfWRct9lICoQmdC10KzqLKT90teAW9sn45X4Y1xr5pqgqXX1/9F/qsioRsgcP91D7Q9uGItw+/1lfph+gVvaQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ad4yxw5szdgk59v7682fys9vc04ccvrpfhvvl9","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","butterempowerk5",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqgySS54nVIm91kJzBh+KsNl7k++VAIiyuauTUD6nhtp"},"signature":"OeQAeddpJ5WID03lyP1Z2IkTcLCyIOTkT3DFS1VaC2B7qpB6xOqTR4xYAOga//duNJEQuUp1dL732SvDw6kRFw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ad4yxw5szdgk59v7682fys9vc04ccvrpfhvvl9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["butterempowerk5"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqgySS54nVIm91kJzBh+KsNl7k++VAIiyuauTUD6nhtp"},"signature":"IhV5+9Ibg8DRWzY6KuzLlYg8KQQEEejkYwVYGVqSBuJ3SDSgVQXhQJRKLwCRX36nXBe5l6ggcPvOrrA1tEKHyA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ad4yxw5szdgk59v7682fys9vc04ccvrpfhvvl9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1938","butterempowerk5","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqgySS54nVIm91kJzBh+KsNl7k++VAIiyuauTUD6nhtp"},"signature":"KxRw6xwASYqJU+VWyIWA5YYU7O5Tw1HFWhrjW+9KW9JI1yTKp05fi61Y5pTZrlEZmx0hIi677cXFi3J0bscZ1A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ad4yxw5szdgk59v7682fys9vc04ccvrpfhvvl9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1938","1","1","g1ad4yxw5szdgk59v7682fys9vc04ccvrpfhvvl9"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqgySS54nVIm91kJzBh+KsNl7k++VAIiyuauTUD6nhtp"},"signature":"99MrI9NTzrwzv32T12CjQE3yRLdbjgoFsy8ISrSMJfBXFcVeiMnJjVxE906uW7cqJqyWEv5tEcUUAjHF53Jp2g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1cm5dn5z8e9vt95u792wz5mvvxdrtuluszc6kys","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"rAc/UhXVFSEtRx5o/636xwztNtAzWwFjfyUea0S8ZGJgIpXA84AuKzAXHthiHcLp8ankgFYM6eRRrHujxGgxWg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1cm5dn5z8e9vt95u792wz5mvvxdrtuluszc6kys","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","divideaugustt9",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8n8QSV6lGFo9em0Me96hzIyj1AfOoq7noCv4Tv0s1a4"},"signature":"PvUSx50ljnxHY4SL0G5VWXmEjlC2ngQxD9pyO7uitRdM2WbM+8mlsS3GPQYnBODFDoaO/pFN5u7mh1j79c9qAQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1cm5dn5z8e9vt95u792wz5mvvxdrtuluszc6kys","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["divideaugustt9"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8n8QSV6lGFo9em0Me96hzIyj1AfOoq7noCv4Tv0s1a4"},"signature":"ycwmgN5Fc4IGYHtUwakGjcUNML2UwcN5kTBXZe/bS2F+AbbGct3bk62lPVc8RIr0xEoT718JypfSvrdXt/6cIA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1cm5dn5z8e9vt95u792wz5mvvxdrtuluszc6kys","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1939","divideaugustt9","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8n8QSV6lGFo9em0Me96hzIyj1AfOoq7noCv4Tv0s1a4"},"signature":"Hl9cE3iXbKTaIHRuaRQ2rVcfoDMZo8zbfBNyiuLCIxJQ4cy9Hh/cZYOXy7Sb6e6a2KR34xkeXGgP4tb+Bd3/eQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1cm5dn5z8e9vt95u792wz5mvvxdrtuluszc6kys","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1939","1","1","g1cm5dn5z8e9vt95u792wz5mvvxdrtuluszc6kys"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8n8QSV6lGFo9em0Me96hzIyj1AfOoq7noCv4Tv0s1a4"},"signature":"uK7rs/zQrbE/g7z/LV5Q0gqqlVCb2b1GhT3LAZOxwhQX7hjSVFjGCBn1KcNQtvX9FI18pkKcxSsrcp4Gi0Y4IA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g19v8dqj7cntqqljt59y3wurp4sa0hjn2mlejljn","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"9yabs6Y6QZ+g4VOAEbfcpHL0IecBhWaQlAo21psH6xtucCWrj6WQ2M6+k9ADIyzrnnKvk/xTxZ7P1D195NHQ8A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19v8dqj7cntqqljt59y3wurp4sa0hjn2mlejljn","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","foodsatisfyql",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A00r3Ck/bwzSy2HJtRohgTKdS1KEHSYDzeU+JjJQStUb"},"signature":"B9HWZKI0RtoqMcwNP2Z3/eOLT7oKf2WHtrfURY2VEvpjeyTua8fPeWOm5g6c2Lvv3gGz8C1KCcCj3UUzSFzf6w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19v8dqj7cntqqljt59y3wurp4sa0hjn2mlejljn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["foodsatisfyql"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A00r3Ck/bwzSy2HJtRohgTKdS1KEHSYDzeU+JjJQStUb"},"signature":"SrvQBQehXehoZK58Fqj1o8V7vWmHJ1JOSqeHQZEFMftzuEC/tDNXGXuIGRFLedZD/av+4l2kQqvlKpwLI9r9eQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19v8dqj7cntqqljt59y3wurp4sa0hjn2mlejljn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1940","foodsatisfyql","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A00r3Ck/bwzSy2HJtRohgTKdS1KEHSYDzeU+JjJQStUb"},"signature":"oTjzWk+uM8Zg0YwoE6M8R6gMg6U4CPaAwNBD66Zh/uppg1pN0RdV2vFZS8G5kIyJ1FFsQF1/0At92Eri9xAZ9A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19v8dqj7cntqqljt59y3wurp4sa0hjn2mlejljn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1940","1","1","g19v8dqj7cntqqljt59y3wurp4sa0hjn2mlejljn"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A00r3Ck/bwzSy2HJtRohgTKdS1KEHSYDzeU+JjJQStUb"},"signature":"+c+pgnURw4VRleiXbb3DP9A0ZMH2rPHW1a+HfluZJdIuEhylIokb0o8q9+0BSKekyrC7C6JBs/wls/zdKvREfw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1up8xnmprt3agh9w8ynquraq7d048gre4ajp6y9","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"gxxlwLsXnByxTBr2TPX6+Zy/wYR8G8DzVUB9SOr7lA5DZGzyXDTNOcdee32ucshEe3vfDkUJ+T+IjRy9yQLYig=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1up8xnmprt3agh9w8ynquraq7d048gre4ajp6y9","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","splitautumngh",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As12FiV1Po8WRZpv5rd7SOh1qigcBo5G1Ie5+yibeAPU"},"signature":"bg3Qk55lPXtdF9vHasuM1oOuVQbKL2EN5wEtjT0oZAQxQWy0gWSWPvtM2tIGYQrJ2WWRvhN99sq7PQ6K1EwNsg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1up8xnmprt3agh9w8ynquraq7d048gre4ajp6y9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["splitautumngh"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As12FiV1Po8WRZpv5rd7SOh1qigcBo5G1Ie5+yibeAPU"},"signature":"+ydpnpMyA48ikHzxY5hkWcex0X/HKzl5QNNqgb02pENWcMQcByYhETq4yMS0hpwJn7UNO0doay0AsfcwndSEFA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1up8xnmprt3agh9w8ynquraq7d048gre4ajp6y9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1941","splitautumngh","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As12FiV1Po8WRZpv5rd7SOh1qigcBo5G1Ie5+yibeAPU"},"signature":"ZoLz+WQ9zpQbdq3ChQjrHtPSI9IsHuwnVKm8nOdrUV496iFBj9pSsQ5lwqi21RDQRodrMJy82ioLKAeHd24lBQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1up8xnmprt3agh9w8ynquraq7d048gre4ajp6y9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1941","1","1","g1up8xnmprt3agh9w8ynquraq7d048gre4ajp6y9"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As12FiV1Po8WRZpv5rd7SOh1qigcBo5G1Ie5+yibeAPU"},"signature":"H6KOkwppHG4c8eDWjr5iV9i76v118+EaG2c0CcEwwNpNQ5hdvdPDhdQyaFm/BGUtTZw+Hufe9fG/SDSpXMAtvw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g109sfmffrjewcdrf3ftg875a9phk8y8sz2z668h","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Wmq0dFQ28yho6fY8ue8ef2O1vAze+tjAuIiMhe8En3wdzKOgYF8VMMuMHwYELsMDBsxBuWNz9jrcq8QyV+84Sg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g109sfmffrjewcdrf3ftg875a9phk8y8sz2z668h","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","goodauctioncd",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AzvGBTXV7O/63+/nOkJliW4G5fS7veHtNJx5+awGepaS"},"signature":"k4YB1ZBWA4wRJPPmReDwRQ/lHGs+uQ+5zSOe7Vz9P4dUIlYMjsyW/joUL7la6+AU+Lj1MIIyMzABiNJAdWM8lA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g109sfmffrjewcdrf3ftg875a9phk8y8sz2z668h","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["goodauctioncd"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AzvGBTXV7O/63+/nOkJliW4G5fS7veHtNJx5+awGepaS"},"signature":"oIGI9IC7ajQVxTXS0NxYQmjrVunstAmzV6Fb5pv+oE8D21jjS/OCEzkelEa3BH1yx5ab2+GdeQycxWo7xiH3Mw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g109sfmffrjewcdrf3ftg875a9phk8y8sz2z668h","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1942","goodauctioncd","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AzvGBTXV7O/63+/nOkJliW4G5fS7veHtNJx5+awGepaS"},"signature":"uWtGLGZXN72Tw46/SbQm0Ingb8wbRGaGgExhQTgN3TJ15ezrIfOkEZ3VijMZhTWO6vqBRogEk+UrnoMGZsJrMA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g109sfmffrjewcdrf3ftg875a9phk8y8sz2z668h","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1942","1","1","g109sfmffrjewcdrf3ftg875a9phk8y8sz2z668h"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AzvGBTXV7O/63+/nOkJliW4G5fS7veHtNJx5+awGepaS"},"signature":"MpfFrzdOabWYTloJXgwMT7n0rDrWOGbxts3gzdvGKcdjAkkrLoxMCuH8h4iaWw3BqUdihAoCtmGLWrDUzfIPYQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1w36qd9d3rs7jt6x4j32pd4we7c43atpx7lg6ls","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"yrWSvs3pMG5CY1TwYBL4WukRDLMjoe+feP5UFC5UNVRkJqeblMWkWLGLYAFJAaYc0rufugNI4GJFR0s8AGuEiw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1w36qd9d3rs7jt6x4j32pd4we7c43atpx7lg6ls","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","angerattackjt",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A17rxjhjdbrHwDjF21nMXBSt3wQXQ/qVQyQpu9FbXaxG"},"signature":"1hj0dpIqJcgu1L1i0Lg/yBMmYvhjGHeDj20dNUHKGkohSHyTEW0nTTV9hdbzn7yuSG8XtcOnsZlpm83h+t90Yw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1w36qd9d3rs7jt6x4j32pd4we7c43atpx7lg6ls","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["angerattackjt"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A17rxjhjdbrHwDjF21nMXBSt3wQXQ/qVQyQpu9FbXaxG"},"signature":"g0HCcCcszLnWhV3Y2s+Yq0C6/B26aWVGSoAAPTHXT5YO5AuDZldFrXlssOonKIxXCd/rOPg+f6bZ+oHl0CBQlQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1w36qd9d3rs7jt6x4j32pd4we7c43atpx7lg6ls","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1943","angerattackjt","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A17rxjhjdbrHwDjF21nMXBSt3wQXQ/qVQyQpu9FbXaxG"},"signature":"JiXWpRVvu0Mzvz1b2Se1pZ8D1u9H+YkrDNS/AJu6ZpUxe4ehIgwwK4R+75DsuXHCc6Z4YlEppAy7W+Q1j/sMYw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1w36qd9d3rs7jt6x4j32pd4we7c43atpx7lg6ls","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1943","1","1","g1w36qd9d3rs7jt6x4j32pd4we7c43atpx7lg6ls"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A17rxjhjdbrHwDjF21nMXBSt3wQXQ/qVQyQpu9FbXaxG"},"signature":"Jp8BDJSsodYvMyqkMdqo7NSIaCj6sUNtTCO1/gJdhr0z4UtEvenje/esEjptQql7EV/X/oCDrOorEWgkEyGTfg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1ztzflljyaj782xtu64mnmphlk25htu7t8l45k4","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"5pz+f/NAupKuSPmJy6ar6GZWy2VnyZIvNWVNktJTCVYzDHblyiL5H58QlhigLuiUT0vT1/6BkNR2I1mzfBGGTA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ztzflljyaj782xtu64mnmphlk25htu7t8l45k4","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","galaxynetwork82",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtITm6sh9M4mswUCEwjhHeQ+48u4yHOmBy7JgqZb9vkB"},"signature":"4i2gx7uCS8198iTt9NFEz2q2P3YCMx/nHbCZYc6pUPJbjUfYDX77ctPXM5eV3eD57lOUPpfA2V0rq4G97prRTQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ztzflljyaj782xtu64mnmphlk25htu7t8l45k4","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["galaxynetwork82"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtITm6sh9M4mswUCEwjhHeQ+48u4yHOmBy7JgqZb9vkB"},"signature":"RiB6aXN4R5XctAf6Mk8gtfbJlm6zdvb/ilQ8KnsZpyULwIQqI4pfJ3arGfRBKwuNNFAzoBfw9mCntespcKG/0w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ztzflljyaj782xtu64mnmphlk25htu7t8l45k4","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1944","galaxynetwork82","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtITm6sh9M4mswUCEwjhHeQ+48u4yHOmBy7JgqZb9vkB"},"signature":"nlLNwcrGx9u0VYOL92rS5YYD6utMoH6xQOYoRzSlc3Mip7YViPBKX0Y7Qxx/QPKE/Zrb74xYkGF5WXrNF/xKwg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ztzflljyaj782xtu64mnmphlk25htu7t8l45k4","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1944","1","1","g1ztzflljyaj782xtu64mnmphlk25htu7t8l45k4"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtITm6sh9M4mswUCEwjhHeQ+48u4yHOmBy7JgqZb9vkB"},"signature":"Edka/tNoDxY9CUWxpJM0CDj+ywYnmZOu3G3/0mmYt1htpI2QFkl3BOL7m9DFw+z+YAMzld46Z8JeQJ5CbGK3Ww=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1t9a93h69rrgjgvhnqnhfwafacsszflpy5vd5e3","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"MsBA9eq1sm4WKcf+akzZ73n2GIhiOBT8W7PfTQl8O5gX0EKSZbu5HJpHrz4HYoEhYRqFklAfbUP3DhYftp3UCw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t9a93h69rrgjgvhnqnhfwafacsszflpy5vd5e3","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","minoridentifyjg",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgjNGBAuq/hpZiygHCTDs7FhE5lGxS0ctgllsM/Xusjp"},"signature":"XwHjFdX/A2jsn549ul0CTmbMg6qxX+O1Qw80kpwSLWM/P4wJOJNy54ZWhiGFBnMp/Y092nkwkYLv5RkezfsmGw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t9a93h69rrgjgvhnqnhfwafacsszflpy5vd5e3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["minoridentifyjg"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgjNGBAuq/hpZiygHCTDs7FhE5lGxS0ctgllsM/Xusjp"},"signature":"Ay0ItjZdRuvPKjLjux64+GePZCFW18Ez9qKnjgS8mNdbF5bCr4x9svAOzRKx25sKt/CSM4hTtcf3C3ojlvqYTw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t9a93h69rrgjgvhnqnhfwafacsszflpy5vd5e3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1945","minoridentifyjg","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgjNGBAuq/hpZiygHCTDs7FhE5lGxS0ctgllsM/Xusjp"},"signature":"VQmz1nZDJls4G6LAo+sBTnrLtwcAP8F5svKS/ZbB2yB1Qn2fr0KUwsxlVPFDdnCmBfep63DlIfymk7DU+Uwlbw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t9a93h69rrgjgvhnqnhfwafacsszflpy5vd5e3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1945","1","1","g1t9a93h69rrgjgvhnqnhfwafacsszflpy5vd5e3"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgjNGBAuq/hpZiygHCTDs7FhE5lGxS0ctgllsM/Xusjp"},"signature":"RKCyePICjX9To3bkEtlKkgvQhoiETJlWdZzwn95AHz8H4Q+uYZS9STqQHdXYT6zcxpPJ7IW6+2Ft5Q9DC+NE9A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1z750neth6gczfyldss8pxlq6vm2z6fd9kullta","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"zL8xQhjKRLs/5CD9z4KyHEu/3laZmjo/r1SLMpPRAeRKfzwgBLE4sFSbp/gagI7J3cV9mc+ktPHzBgTpQH88gA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1z750neth6gczfyldss8pxlq6vm2z6fd9kullta","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","shipsadzf",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+iMFrtyv7DnzTPSntEk5KqQHv49iB9ysJszSHKBJ5QQ"},"signature":"hZjcusdlR/Xc/uz701I9Mu/1G8VA8wGt7TKA4HxZeuRyIMn2qTs103ZnjrS68ct0C+U12ZO5wKyQLKaB3Ztkeg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1z750neth6gczfyldss8pxlq6vm2z6fd9kullta","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["shipsadzf"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+iMFrtyv7DnzTPSntEk5KqQHv49iB9ysJszSHKBJ5QQ"},"signature":"HvhLiagUGQsA6FyS5UU7PPxyYQd5Y2hmaP4FxL3ngjFMOSxpjhtBefT2tFI3OCUiY2XXdCDsEZJd0sryJvNe+w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1z750neth6gczfyldss8pxlq6vm2z6fd9kullta","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1946","shipsadzf","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+iMFrtyv7DnzTPSntEk5KqQHv49iB9ysJszSHKBJ5QQ"},"signature":"NAJqsx5og0txwTq6yHJUA9RRjeGNab0zZUHikT8Unuoe4tYm+Mbkh53waSjXEuitUjU05Sl+uPeF5dM3w5iMxg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1z750neth6gczfyldss8pxlq6vm2z6fd9kullta","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1946","1","1","g1z750neth6gczfyldss8pxlq6vm2z6fd9kullta"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+iMFrtyv7DnzTPSntEk5KqQHv49iB9ysJszSHKBJ5QQ"},"signature":"J7ADaGIWzefKmIPWlVOaxLitnYeAa8pZ6piah7XmEvUNgox5Si+GDsmll202AEE+nnoZ2g+c8Uj8OOlbDzmZkg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1u6h54dx2yaefrau6hcpees9h7urss9gcwc3u3h","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"N2LPjspziO1YoTX6ShFDvT/Ehr8EHqoGCjCB/OXUZZ59a7JFkeS1PyXYBSJptsDbmJVYZj9l784QKPZwDjCyFA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u6h54dx2yaefrau6hcpees9h7urss9gcwc3u3h","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","pepperspendfr",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A28Se+ekFBWtQv6qrSArvlTJOrvQRy1KdQ9lxU+sRU/I"},"signature":"yXtF4Y7zX7+lDbtfNIHYMhQAeD+OO2IfpWgMk4aNl4I5Mj0zPhT1R0jqt0SmZVdqMcUxMJOtmhxeCKXd+d/ufA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u6h54dx2yaefrau6hcpees9h7urss9gcwc3u3h","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["pepperspendfr"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A28Se+ekFBWtQv6qrSArvlTJOrvQRy1KdQ9lxU+sRU/I"},"signature":"RLFYsRhlrjetJz7kVoLgfdzNGABf5ccTtyfALc+p1ZdWaLONzxYz1Y42y2yPXw/SfmRsaOcls241u8jpqx7Zug=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u6h54dx2yaefrau6hcpees9h7urss9gcwc3u3h","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1947","pepperspendfr","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A28Se+ekFBWtQv6qrSArvlTJOrvQRy1KdQ9lxU+sRU/I"},"signature":"KugoXDX4h8wYnyZ2MbsHqsHQiB39UcaBvtfDssfQ+tpHAIF2tgJt9jvebVATG9lsZ7W5fmkjYk9/8/sQZNXPqA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u6h54dx2yaefrau6hcpees9h7urss9gcwc3u3h","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1947","1","1","g1u6h54dx2yaefrau6hcpees9h7urss9gcwc3u3h"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A28Se+ekFBWtQv6qrSArvlTJOrvQRy1KdQ9lxU+sRU/I"},"signature":"McVq7nSi4Xl6P5GSE42V8QF3YF1NwOt9s4Yx3VgsDJlq9eHQ/882j3SXO9/ty9Tou44XpE+zSboD4X7iglbRTw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1myqe97pxru32pdgr60uzwnadtuzyksn73t420q","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ZYlTxTc/k/3ISd1oaej1z75I3cY7KFnq8rqQrZVqVLdDWDGeAZ+B6AVnxlSBYfE+QMsDHEMCT0SOrCEpGhZP+Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1myqe97pxru32pdgr60uzwnadtuzyksn73t420q","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","flatmaster2p",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2XeYgjIGeysl2Dtuytqrqkqr025+nFCsRvilM+ULPtg"},"signature":"qnaEPn/feDzBEZBPtLAu34P+mEXL630ehK3Navq8AaRzdSCDk0F3WBsqOpmlUSx46caE5jQ/uNSp8+WKMFXsDg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1myqe97pxru32pdgr60uzwnadtuzyksn73t420q","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["flatmaster2p"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2XeYgjIGeysl2Dtuytqrqkqr025+nFCsRvilM+ULPtg"},"signature":"Avm7UR3v/vXAu02HLml3OWI8XXMfLsMusVRMy+kWwLU3etcENp26W1kTmn8Sv9qjHK3onNSNpDtVGkudBidwEg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1myqe97pxru32pdgr60uzwnadtuzyksn73t420q","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1948","flatmaster2p","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2XeYgjIGeysl2Dtuytqrqkqr025+nFCsRvilM+ULPtg"},"signature":"Ia7knkFJCLW37qATM6k8iW0apxdWPxtCwbjCveQa6yh0jsLhuRHa7RQHnvBhMBl9yz19EaxDVtV2Sm2TMcONEg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1myqe97pxru32pdgr60uzwnadtuzyksn73t420q","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1948","1","1","g1myqe97pxru32pdgr60uzwnadtuzyksn73t420q"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2XeYgjIGeysl2Dtuytqrqkqr025+nFCsRvilM+ULPtg"},"signature":"Sr2bMg9K13VCdRfJhKvjHrGEGFRTxhTrxVRtTJ7cK/t0jvjDMxe+LfKqFukNXfs0xIWu+laix5dkuUTN1cRriA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1ulwwkn5zu4a3gmumq55rjktwfyh6yknz98yphl","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"nEt5yrHcKp0bv2tvEp71ABkZgYbrzO5etu5TrHg9b0xDfscdJ4aeT5+/Xz7BqfhSRahEDpBjUJ4MPb4NTNO0Qw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ulwwkn5zu4a3gmumq55rjktwfyh6yknz98yphl","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","birthfiction3g",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+H1FhTMBMj86zmrIiUkMZHhqUMt1WMpLfw7cIU7GLCh"},"signature":"lzF1klDc3IA/Ub/XTdD7g/dBdimHU2scBWlyvW4QDIxcaaZCs7PVPRuHfIqUs1BDpMeORa17WqI73mqAZWXsNg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ulwwkn5zu4a3gmumq55rjktwfyh6yknz98yphl","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["birthfiction3g"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+H1FhTMBMj86zmrIiUkMZHhqUMt1WMpLfw7cIU7GLCh"},"signature":"pVZG4uBkeKc0y9ZQvntsmPVoLjicCvGV91ML+kukBzd3W+53Ejhsub4GwviaUa5pQ1A1t+y1xB47k3msn0CObw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ulwwkn5zu4a3gmumq55rjktwfyh6yknz98yphl","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1949","birthfiction3g","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+H1FhTMBMj86zmrIiUkMZHhqUMt1WMpLfw7cIU7GLCh"},"signature":"YbSxq7rPqn/L9YEWiAgYRZ5fxxj2whEqs4IKIGeccdks2Kvu0ntcsZHEtQLfhP4OlA2CN2ul+jba5YS4t9eoXQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ulwwkn5zu4a3gmumq55rjktwfyh6yknz98yphl","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1949","1","1","g1ulwwkn5zu4a3gmumq55rjktwfyh6yknz98yphl"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+H1FhTMBMj86zmrIiUkMZHhqUMt1WMpLfw7cIU7GLCh"},"signature":"rnBMFucOgWJNfNZTiJe43Aj3QLRVaDemtezuD4x1nlYH4Tw0bhYLeF6+Amnry04szVQD4B3lMqOIpZBWhpz1nw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1xtr7rr2a3ll6d8aehmd9kelupa2ghl652hulv0","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"VKFZp44iiFVSaaJIkOwu9rpDL5nHWTMom0iTXli6HdhKVW49S+Lb7PwKiBwy1OiRuUf6+YINzGeXrSrmVZ4tag=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xtr7rr2a3ll6d8aehmd9kelupa2ghl652hulv0","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","storyphoto6d",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5NC/N5m8iCeC9+w9OzxqAReWoWP2G8sBgys/xEkNRqH"},"signature":"1Qo/aXGR95x4D8lMIRgiPsCvP7pLhhBgvjK9yr92dSxObpbbVBjTh0UMketHcuBfmQclpQnQvJyFg2SCpgAu5g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xtr7rr2a3ll6d8aehmd9kelupa2ghl652hulv0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["storyphoto6d"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5NC/N5m8iCeC9+w9OzxqAReWoWP2G8sBgys/xEkNRqH"},"signature":"qgWmia+qRiW4B9QOOriS3hyMRXYTsV4RmCXduGUES20QC8oH6u/ItQC2Ek1BaqdzBAUDJ2M1ZjXjntWvAW1t2A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xtr7rr2a3ll6d8aehmd9kelupa2ghl652hulv0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1950","storyphoto6d","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5NC/N5m8iCeC9+w9OzxqAReWoWP2G8sBgys/xEkNRqH"},"signature":"jU0ayeFki2YoEkwblWL52o2DxTBL4GsZKDTr3hq6rwUHSHW1DyDlUF2GVDVrLrhOVzFFfmE912zQ8yf5jX+V1g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xtr7rr2a3ll6d8aehmd9kelupa2ghl652hulv0","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1950","1","1","g1xtr7rr2a3ll6d8aehmd9kelupa2ghl652hulv0"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5NC/N5m8iCeC9+w9OzxqAReWoWP2G8sBgys/xEkNRqH"},"signature":"iqaP+fobfqCBi5NvHj0l6HPdJfvBSw6AeJQBb0aTk1V+BJWeGPoUsYDH/mO/l+HN1ZRkuGbdxSfgqTbO0pHUDQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1qsgqmx2uu3h7uj8wh7wmrf5pvzhjkllwfv94el","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Kxbv8/ZTuASgj9r3jpnHR7U79iKqbEVt74Ftjx3ictU9iqz0u06EeW7mFWN2aF08cYzNJVxaNT1oF/2QUShWfA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qsgqmx2uu3h7uj8wh7wmrf5pvzhjkllwfv94el","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","remindreunion7u",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmRIsqC/bgK9aSfbZ0PPwJu6yZ3484tCjfmmdPw3YQHZ"},"signature":"gfZz0p248nrjDMLXAFIxE6BZHEB9Qm7sJyv6I9VmyLAKoDWwualXLg1+zUqw8TRlBOIHQAItnwa7XkGRNoiCoQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qsgqmx2uu3h7uj8wh7wmrf5pvzhjkllwfv94el","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["remindreunion7u"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmRIsqC/bgK9aSfbZ0PPwJu6yZ3484tCjfmmdPw3YQHZ"},"signature":"x3/NoqfDFVC2w7BsSGsmVfhX1HVJ6fqXiEKJnBBJXwo1GXrndAA2IpC/DstBlEg4PCBQDqxbHotCPVeInKF31g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qsgqmx2uu3h7uj8wh7wmrf5pvzhjkllwfv94el","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1951","remindreunion7u","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmRIsqC/bgK9aSfbZ0PPwJu6yZ3484tCjfmmdPw3YQHZ"},"signature":"vEoLwmUxmu4W4e0Io1ukZo21vOQ+orcs6YUYZTvZM0sRi8U4uBZSGjVdJl2maoFhv29kgkwb9q5FE9DxXOPeGg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qsgqmx2uu3h7uj8wh7wmrf5pvzhjkllwfv94el","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1951","1","1","g1qsgqmx2uu3h7uj8wh7wmrf5pvzhjkllwfv94el"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmRIsqC/bgK9aSfbZ0PPwJu6yZ3484tCjfmmdPw3YQHZ"},"signature":"GrHXMjpPVF/9/ib+5fVmnq+AIvlYL1KnkfvA2OX3WH0zsW5vq75rfj0KkyGp0R+x5vXyqqQymd4+PHI4I4C77Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1ejds063g00zaf0lpm28yy4v90ux2mskl7pnde9","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"IVfTnnoPJAprvmichucRBCM3I43fW8oQRfWS5zrmjs1qoUGa1A29LtVAC2rNHyMxWnwLudT6Rb+R6fgMlkZhCw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ejds063g00zaf0lpm28yy4v90ux2mskl7pnde9","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","funnyevolveaf",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A76aHRr12Uac7S3DfJ7vPGAoBdCFjC6xCltbBNQ3Bn+P"},"signature":"XCFcAWjcrza6xoLW54ANlTdHKD2gWPKe2jh+z1b0z8pWdrC+DkIbLMbCkf92zzj3gmt6UPMcM3oi6nIBINWP+g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ejds063g00zaf0lpm28yy4v90ux2mskl7pnde9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["funnyevolveaf"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A76aHRr12Uac7S3DfJ7vPGAoBdCFjC6xCltbBNQ3Bn+P"},"signature":"b3zzAiy318+wPJLzUhMfhZOzeIazamCsFWSzus7VoN4QtsfHPOLSkNPpf9bPCrRZlOENd/VeSxvmS9DTcvpCEw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ejds063g00zaf0lpm28yy4v90ux2mskl7pnde9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1952","funnyevolveaf","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A76aHRr12Uac7S3DfJ7vPGAoBdCFjC6xCltbBNQ3Bn+P"},"signature":"HBmqCL5TAWOD1QGyQ4vFSRyZNXGBEUqDTi/oFzJfB60HK6Lp0Kn3fJInAMBtdbf2raKgI6JsqPmZn4HgN3kXzw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ejds063g00zaf0lpm28yy4v90ux2mskl7pnde9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1952","1","1","g1ejds063g00zaf0lpm28yy4v90ux2mskl7pnde9"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A76aHRr12Uac7S3DfJ7vPGAoBdCFjC6xCltbBNQ3Bn+P"},"signature":"egIRLiLWCu2c9vBRoLx5wZp9FqWHaUiR/mDGfnZWByAb0FhKlg4w4QtI27z9qV3Lw+9tcK9rgY2WFZspBLUIcg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1hdr9euafkyfuqnn92hgynxkrkc2d2qx2g7j4cc","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"oj0hmSxofaOJGOSEafolH35r9xjyPTyiTQJ7dlhKyjlWu4kMjdlszbEsR0LH+QLO7iB0os9mzom7o2YTqIB0cw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hdr9euafkyfuqnn92hgynxkrkc2d2qx2g7j4cc","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","panicpartyuq",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AznRxKwFWc4FaNBFIF6jjPVryATY7Myz/Pyx8Wc3+pns"},"signature":"UNPcba+eeVl56PIXMqZvq/MCpb14eOTIAhijvQsymeIfl9EB+Cu0biIo/r4nzpi1rPR/1h+lcakoZOAUbTvlSA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hdr9euafkyfuqnn92hgynxkrkc2d2qx2g7j4cc","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["panicpartyuq"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AznRxKwFWc4FaNBFIF6jjPVryATY7Myz/Pyx8Wc3+pns"},"signature":"mD49PxyEUMwP3ooLeM9pDj8VSiPe4JjwRkaGHrAAHMAY3nnNET0lwPp51IfJjoUb9i27fEyArBiJam0MUaDoAQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hdr9euafkyfuqnn92hgynxkrkc2d2qx2g7j4cc","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1953","panicpartyuq","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AznRxKwFWc4FaNBFIF6jjPVryATY7Myz/Pyx8Wc3+pns"},"signature":"3eKFMw400qt1w8Fv8pupd5QkFhYBd0mDuKFCMGmwUPw7pu6Dp/NFFhPTpOI55POxqTfJofRKVo9412sv+Dvr9A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hdr9euafkyfuqnn92hgynxkrkc2d2qx2g7j4cc","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1953","1","1","g1hdr9euafkyfuqnn92hgynxkrkc2d2qx2g7j4cc"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AznRxKwFWc4FaNBFIF6jjPVryATY7Myz/Pyx8Wc3+pns"},"signature":"WxTQyO/7kmNQ5Ms39L5QA89V2Zk1zj1cL8kMmTpPKJcawR0IF59IoT8pd0oPosP8j9VIehfQcvVgXhNyxp92sQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1yuytudahhm35l7z7u4e2qs8mlsdng0mfwye6qh","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"LwC35PBMloEGFzZ352DIltLEPKfdl5frf/eOnHflusIMdU9ChqsZ0Oiv6d7BQTsVlTX/aFCgbowDSg/TJpHH8w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1yuytudahhm35l7z7u4e2qs8mlsdng0mfwye6qh","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","ironplastic5l",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxuN7z+4hcszwCwuO9WPpiB5CdQJEmpJWyb4BJMqBjeb"},"signature":"ud/wxNC6hwp/wjdwfQhlnJlsvxw08YTn3bTrzUGmCi57UYtgaVDLvL2caLgctc4QDe4EIVy/SPXGEywR7tkoKQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1yuytudahhm35l7z7u4e2qs8mlsdng0mfwye6qh","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["ironplastic5l"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxuN7z+4hcszwCwuO9WPpiB5CdQJEmpJWyb4BJMqBjeb"},"signature":"Rigw3bVFmX5uGcalK5oJz6Lr/+MuwiQ7mxfLwxhe0vE1Wly7hWrYw9MQEEgc06pJCZY2r+1v1VEsuP88a3mqxA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1yuytudahhm35l7z7u4e2qs8mlsdng0mfwye6qh","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1954","ironplastic5l","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxuN7z+4hcszwCwuO9WPpiB5CdQJEmpJWyb4BJMqBjeb"},"signature":"tz94Oy+8UMqVM5IznhzhDDMTxOlxJGFsXu7kkUtpaDcMjv0iDMQXR5YQGconKPV2/JApzk9TxYMnCf1kOHSmGA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1yuytudahhm35l7z7u4e2qs8mlsdng0mfwye6qh","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1954","1","1","g1yuytudahhm35l7z7u4e2qs8mlsdng0mfwye6qh"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxuN7z+4hcszwCwuO9WPpiB5CdQJEmpJWyb4BJMqBjeb"},"signature":"oA/kf92S/P4wQoJAcoHrPc9EkT4EpfDjseYtQgpG4awFIQZ3JXFDhC7+WvrJas8E4iEEJqB0EcNMxIccOG6XwQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1jyhx29lu6k2522x4d5zmywfmpsxamuh7wcy36x","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"kGDiG6aCHX+3/7loUv7mQ8mrm1QCa7Azzr4MLkTSDTcwtt5QHv5BDt1vLE2OorRe1B/UBpmHjsyOrqW27AVuyQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jyhx29lu6k2522x4d5zmywfmpsxamuh7wcy36x","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","blindslush52",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9uW3C0+TGmpriMcX/R1cYjjhv6p8VIOqmdqkHL/FQHT"},"signature":"gOVjegAJahNuvQjCUUAUL/OlwyPRUSsjRaeqiTINYgcoFrZSidSf3ay1K0VLVbEtA2ApeVrae/Y9QaZ/yI2mQg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jyhx29lu6k2522x4d5zmywfmpsxamuh7wcy36x","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["blindslush52"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9uW3C0+TGmpriMcX/R1cYjjhv6p8VIOqmdqkHL/FQHT"},"signature":"NFjA969BU97HZUlinVsIYyv9sFivz8BnPcoHQj0qPU1FHwtQWiXm+9/HDL5Ynbi7CLSi8acfYK1Y/XabROebaQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jyhx29lu6k2522x4d5zmywfmpsxamuh7wcy36x","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1955","blindslush52","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9uW3C0+TGmpriMcX/R1cYjjhv6p8VIOqmdqkHL/FQHT"},"signature":"/ATrWRvNRVXnm7XC10jq7FfIpkSUKghuS3XJaGMJeT4owhvrKAG1WXda0n5Zt2kNRvBpR5VT87+yJqZWIFvdSw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jyhx29lu6k2522x4d5zmywfmpsxamuh7wcy36x","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1955","1","1","g1jyhx29lu6k2522x4d5zmywfmpsxamuh7wcy36x"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9uW3C0+TGmpriMcX/R1cYjjhv6p8VIOqmdqkHL/FQHT"},"signature":"Vbs8CIPT/ysIFo1ewKaYPH7xhQHsK6Jt5zooiHjzFTAl7EToMc0A8bSKcFffBOqUWIa8jLqvhcbZq5H+JO8sLg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1m8sf9wscc6nl9ddx99jenk2c9kddcs95z27yey","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"VTUXrSQchLMfu2snfn87MztvF2Vfyj8GhHKhak51VdlUUuKEHm6tWGbGC0YJDIvAoyNbr5Z7XB9VVz3+zKCvsA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1m8sf9wscc6nl9ddx99jenk2c9kddcs95z27yey","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","oilthunderl9",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9OBFtKZxbnxLAhn0zXqF6fo+O52R9qHNjFbt3QNm8ME"},"signature":"OZP6lInrsFsHMh56SKPs+p6qzf5KqkSC4TEhWx/AQ+44mBqdEnEl0qv9bTUMnMdlNcUIP46U0OQ1CsR6ul3Q0g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1m8sf9wscc6nl9ddx99jenk2c9kddcs95z27yey","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["oilthunderl9"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9OBFtKZxbnxLAhn0zXqF6fo+O52R9qHNjFbt3QNm8ME"},"signature":"P4vJK+SAgTiT/w781AN7u68mZsdPdufEClbpZuyq7IQyCz8nm/A/6tz4/wxhkY+S4z10ih+bVi7ID3miLBsC4A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1m8sf9wscc6nl9ddx99jenk2c9kddcs95z27yey","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1956","oilthunderl9","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9OBFtKZxbnxLAhn0zXqF6fo+O52R9qHNjFbt3QNm8ME"},"signature":"+ui06jWbXlZUYY2wYhchqma1nhc4HDd1owqbOKdwjc0PQQ1TasR2vYp3MNEHoWxxomtQosfcLrpa4W8C+qIu2A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1m8sf9wscc6nl9ddx99jenk2c9kddcs95z27yey","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1956","1","1","g1m8sf9wscc6nl9ddx99jenk2c9kddcs95z27yey"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9OBFtKZxbnxLAhn0zXqF6fo+O52R9qHNjFbt3QNm8ME"},"signature":"M4U+p3mY6Pubxwm0g6tOXJPXxlGXPV2RjbAVdNSV9sgN6ktMMpFXM02IZHi1UJqZGyVSosVibMi5ySnNd5xirg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1ntzly3ate7pjh4dypdmxccnxpsdkdan7nd2mk6","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"rqp3TFdFgbRmWUwNwPzTz3IXqOeMsBDMW0b6niL4oKwA73jka/SO0Uvxg9Y58+Fm3OyY+FrJaFrWO6IootoAFg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ntzly3ate7pjh4dypdmxccnxpsdkdan7nd2mk6","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","rookieseedjh",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwvbBNeMbM/31W1J+1tYTsy6j4UWfGA7zaj9B5qeq55x"},"signature":"WRQzA3tx+qd1xJBcizNFSWbDX3DucrQya0YWP8iOeaMvT/CrO5/ThVgbc3fNWUryZ2YxMT4B8mrOElOwk+Kqmw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ntzly3ate7pjh4dypdmxccnxpsdkdan7nd2mk6","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["rookieseedjh"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwvbBNeMbM/31W1J+1tYTsy6j4UWfGA7zaj9B5qeq55x"},"signature":"o5tE8ais7ERQ8+1t4J1XiFWS+qlNcthyGMRjNqjwNQQoj5uSsCD1m3sg2jzqyC2nSDnAVyGYZiNy+tZVj671nA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ntzly3ate7pjh4dypdmxccnxpsdkdan7nd2mk6","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1957","rookieseedjh","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwvbBNeMbM/31W1J+1tYTsy6j4UWfGA7zaj9B5qeq55x"},"signature":"yOjmQcC+f30QsXzMM7DipnEBSFRO/hWItDf/cMBdXfR1h10ltArflWtjkIdD+aIFsQyRaKqc+Ya650a7dvl1iQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ntzly3ate7pjh4dypdmxccnxpsdkdan7nd2mk6","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1957","1","1","g1ntzly3ate7pjh4dypdmxccnxpsdkdan7nd2mk6"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwvbBNeMbM/31W1J+1tYTsy6j4UWfGA7zaj9B5qeq55x"},"signature":"PfPt1wvFdR67Cs9f0Wv9RNWEKYFZxQSEVZo4EBMf73syGsl49c1qy9C4R+iIgfBlqteTvvTuGvEb0jZQku1qtA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1w55w634syma6d8vdtnzwtt5lqle22flkue7u0h","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"uYTf157u8bujXiHALytD8vm4MAQ9wdgBGHhwmeNe/9tT0+HkPw3Imk8cJSe16J+8Iz7Rgs2HgH1UDqKYagTC4A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1w55w634syma6d8vdtnzwtt5lqle22flkue7u0h","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","surfacemisery6d",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ar3zG53WAholepb2qnsreiNmbrGkF9dk1L80c2MEveUI"},"signature":"ZNJDy9vw86j2/7/O0gnp3f7ZdD0gzTDjP1u8O/yfbPooddm0G1jUhunQWbcC62Ty2Q1L37h6ixueZMAYRbS4bw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1w55w634syma6d8vdtnzwtt5lqle22flkue7u0h","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["surfacemisery6d"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ar3zG53WAholepb2qnsreiNmbrGkF9dk1L80c2MEveUI"},"signature":"yuZJWVAZ3a6PILcD4a83RmZ7YSZo6BwqLMc3xuHIjw5ZqK7PVDSprERiSnye62j5ucsbe45Fz7JTpqjk1gMK8A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1w55w634syma6d8vdtnzwtt5lqle22flkue7u0h","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1958","surfacemisery6d","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ar3zG53WAholepb2qnsreiNmbrGkF9dk1L80c2MEveUI"},"signature":"OwnAuLygCdos8yKumeAhJ8XboXaVtxx8EnwUnMmTvDV/oOSUk+89DIvb4DvFrOZ4pcYva7OeoFCe0ehxWzsqUg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1w55w634syma6d8vdtnzwtt5lqle22flkue7u0h","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1958","1","1","g1w55w634syma6d8vdtnzwtt5lqle22flkue7u0h"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ar3zG53WAholepb2qnsreiNmbrGkF9dk1L80c2MEveUI"},"signature":"k7aNF2YU5DHs54SONY09w/eoKpCAQPfZ61B67mvS7kkLnmI9RzMYclnQmMHiA9qwBU57wbJpabT1y+/WgyIU2Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g12nrcvtwq9486cm96c0v2qkva82c38twxv536r9","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"yQh9is6CQ4XZqrbZPaVz1im2NzDr8YcXxIpRdGkNTTVEL0nmA/pLz7Kq4dOusD/GOuDRH1Iz27yplUVxyvQ9Lw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12nrcvtwq9486cm96c0v2qkva82c38twxv536r9","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","suggestacoustic6c",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A18DNzYUvWxseCwqvI6vUFZQw6BelqYlOn/URyKvm90d"},"signature":"RdLvdOZkg8K/tK0teyWEocTPDKjBnOEySwvLT4eQROgDT1zZk9lkpnHydWTlksdudogaOV1XAU+hDFbym0EJFg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12nrcvtwq9486cm96c0v2qkva82c38twxv536r9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["suggestacoustic6c"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A18DNzYUvWxseCwqvI6vUFZQw6BelqYlOn/URyKvm90d"},"signature":"J4Nxf5zJAabgynlUXihkhr6P/1DFD3zSTZqNrOQ8acAqLn3QmF1gaHhPHgkDa4cqwsonNw54yZK1SiWbSFzNrw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12nrcvtwq9486cm96c0v2qkva82c38twxv536r9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1959","suggestacoustic6c","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A18DNzYUvWxseCwqvI6vUFZQw6BelqYlOn/URyKvm90d"},"signature":"1EGK137colO8UObj8PrHQzJmC4ZtlNXmrx5qnxTlS4VG38OGS0oFSBGB2Ga4mEENrPWuiDPca/5IjIyTsiQshA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12nrcvtwq9486cm96c0v2qkva82c38twxv536r9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1959","1","1","g12nrcvtwq9486cm96c0v2qkva82c38twxv536r9"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A18DNzYUvWxseCwqvI6vUFZQw6BelqYlOn/URyKvm90d"},"signature":"0cyF9cqP2Kzdy+d5uGG9WMBaJd+8mKZtexkYu3w4Y/8tTTMD536dhfX3O0WzL057wfYkIMO38GPXg9nsEaKXmg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1vm47f63j9nhv8c98myvw6lfygvpwpfpl4wsukv","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"R6Kx5HkZM0p5mz43sTlHZ+nEJLZQR2N1kP8WWUdGuhhIoXpzCMq871xif4Nt0Lc2X178HEnXy8rG4xcZGmRBlg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vm47f63j9nhv8c98myvw6lfygvpwpfpl4wsukv","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","harvestcrushv8",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5DXv5VOE76j/JeUD0KCmNM+i6xZEkTm3d61N8HNleN+"},"signature":"pLvmJ/fszhBTLV5qJaS5FrrO2GmZL15nchIiDzNx9I4P7ZzbfqSrQEnaVPIoTA7PQcEKSU8mbitGg4DZi749bQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vm47f63j9nhv8c98myvw6lfygvpwpfpl4wsukv","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["harvestcrushv8"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5DXv5VOE76j/JeUD0KCmNM+i6xZEkTm3d61N8HNleN+"},"signature":"fvH1h0zPi/CnktDI3FvqgKeoe/Pqcu+ZK1+KPjGZJVtjyhBmlVAauzqKDw6yhJaxPfjU8/ElkUpSzoxoUoLrtg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vm47f63j9nhv8c98myvw6lfygvpwpfpl4wsukv","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1960","harvestcrushv8","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5DXv5VOE76j/JeUD0KCmNM+i6xZEkTm3d61N8HNleN+"},"signature":"0hUbcIXYpEAP91hpBVPkuTcXKtwbS9Co0OUYcNe9KL5Wmk5E7YaOM/s0hgXwWG36v5rdgavLDWFNgjscoroPiQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vm47f63j9nhv8c98myvw6lfygvpwpfpl4wsukv","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1960","1","1","g1vm47f63j9nhv8c98myvw6lfygvpwpfpl4wsukv"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5DXv5VOE76j/JeUD0KCmNM+i6xZEkTm3d61N8HNleN+"},"signature":"PRqUK050IKJ7EiZYmUjKe7qLBmyRTOe78eJP62caTww3M6MK2nonT/TpWbe5Yh/x3vGf3ZLJgxOUEy7Xyg/YDg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g125q78wlnkyevsh89f0uu7zpjwlr200ljlaqt26","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"lNuZ2xo4jXzHnW6hENczzQHHitRWyVxQPjXAPQw8avpyo3eeoq9XKgVq3TYp7qiSiT0YOultp3ZndDLWrqb1lA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g125q78wlnkyevsh89f0uu7zpjwlr200ljlaqt26","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","dwarfoccurvs",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6M/UKYy0wzI65FdyKc1IMdR3wRPIBLMTFRHuhABiqv0"},"signature":"to+TctKsQw8D/5VqL5SeZqbWZwK1QterpafAlw6RiecV54hY6wYJ1YAkYo8cPEADT4MUICnfZU6UGEvMfcEYPQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g125q78wlnkyevsh89f0uu7zpjwlr200ljlaqt26","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["dwarfoccurvs"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6M/UKYy0wzI65FdyKc1IMdR3wRPIBLMTFRHuhABiqv0"},"signature":"95RJJzUSO0/jNx1p8oulmuVYjZmkdqvuaqBWyAQrWz4tgc+H3bj/9sy0iIIp6tn2K/pA/lA2veFxy4+2Afs3tw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g125q78wlnkyevsh89f0uu7zpjwlr200ljlaqt26","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1961","dwarfoccurvs","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6M/UKYy0wzI65FdyKc1IMdR3wRPIBLMTFRHuhABiqv0"},"signature":"8qKJWYu7KhB/YDkv7rK66iS1+icNsyDiXW0HWgg/4khf5FyXdtlniFDaWuCvgezVw7NQMhXOjypFm3N1TTS2YQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g125q78wlnkyevsh89f0uu7zpjwlr200ljlaqt26","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1961","1","1","g125q78wlnkyevsh89f0uu7zpjwlr200ljlaqt26"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6M/UKYy0wzI65FdyKc1IMdR3wRPIBLMTFRHuhABiqv0"},"signature":"DKuuL13c2UWAuwuISYp20grUo55Z/xJEskd22YV1EV5NWYOjneL6YJQkNEHbAqPeGVMBpXkDwd3b438j7MTi/g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g19w7t3kd7td8r0ktvjn5u0hx9n0kag23fwsfxmd","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ztx0RpaZ8GrTa6kvtKPbqFp+nB4O2V96zeCwQh9sLs9VqQAF6dv/XKJTWLTGn5e386tguid7HYjuR6EDJamVqA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19w7t3kd7td8r0ktvjn5u0hx9n0kag23fwsfxmd","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","logicrugr0",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmhJmgu0e3iysyODQgWJ6l4kyyY/48GdM9QUI2tjbie9"},"signature":"rM+sqeIkpw0R8z15bxOx4TnLVI358Lds8pfNr7LC1MgCSD/zPrfzBb17NFGL2/rvrEUsiGCTNaayH2rBddowow=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19w7t3kd7td8r0ktvjn5u0hx9n0kag23fwsfxmd","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["logicrugr0"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmhJmgu0e3iysyODQgWJ6l4kyyY/48GdM9QUI2tjbie9"},"signature":"ypfFDq//T4i7UKfE0TYncl6rKoGi0ki0z72bSiLn9doVAy3ax4VcROKAgcxHNCZ1N6YUnc5xOT163Rya2LReIQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19w7t3kd7td8r0ktvjn5u0hx9n0kag23fwsfxmd","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1962","logicrugr0","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmhJmgu0e3iysyODQgWJ6l4kyyY/48GdM9QUI2tjbie9"},"signature":"jr7NvaTZ3CHT70ypDeBLME4Kl0QUwIeFSf8MhFNRjtEaLqfhLNvBW4c3u8gBEyhVX2TNBdHSFsuEGXopme33kw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19w7t3kd7td8r0ktvjn5u0hx9n0kag23fwsfxmd","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1962","1","1","g19w7t3kd7td8r0ktvjn5u0hx9n0kag23fwsfxmd"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmhJmgu0e3iysyODQgWJ6l4kyyY/48GdM9QUI2tjbie9"},"signature":"64V/OXKaYdixYACezj7N+C3DbkhqWv/ko9pS5NuKxFcMdtdxPpmUohdWcFjgSwmSc6a++WWf1hLhtD9q6MzToA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g12rpmeq563fmujf3a8d2yd66cp9xdcrhlrgnajf","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"fuK7wtmCb1IFDw8TeQJ3mt4p7xUljfHnminisiz7pwJ6yJcACmlmfOfB+Xmlv2yRXTvhOqZ8JGQ5bAl4Zkqf9w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12rpmeq563fmujf3a8d2yd66cp9xdcrhlrgnajf","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","noticewarfareuj",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvO3gU+EIZEVEM5jG6kDfnRwJWaaJ1u5D+QuQqEc5NxX"},"signature":"PZ8PFx9VtetDv26mWnJZRMNd6eGHC42tNKK8caFsifM7d2pvY6Yh1BTU7L3522CW71r32cs5jVWzYg2NBFFEoA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12rpmeq563fmujf3a8d2yd66cp9xdcrhlrgnajf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["noticewarfareuj"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvO3gU+EIZEVEM5jG6kDfnRwJWaaJ1u5D+QuQqEc5NxX"},"signature":"/94AElHyqH4a1HPuEum6asEgxhDwPHHOgC88iLJ2TwR3iZ3jYBKZPrmhyVp4gibC6HiGGnjcOYJUnhOpBzRgKw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12rpmeq563fmujf3a8d2yd66cp9xdcrhlrgnajf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1963","noticewarfareuj","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvO3gU+EIZEVEM5jG6kDfnRwJWaaJ1u5D+QuQqEc5NxX"},"signature":"F0MjnzhtciHlh3HbXMTcQOcoTFun0Qi+WotA/b37Lq170OLM4+7VmFJf7mLqzDCngAkr0epod/XOvuASR3e1dg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12rpmeq563fmujf3a8d2yd66cp9xdcrhlrgnajf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1963","1","1","g12rpmeq563fmujf3a8d2yd66cp9xdcrhlrgnajf"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvO3gU+EIZEVEM5jG6kDfnRwJWaaJ1u5D+QuQqEc5NxX"},"signature":"6SE/4BSjuCQjw/PEmarhZLFEH9D2RzQHGEsd4V5Svct89Qu49bHGLyPuSrgOERgy01G7XFiKbfTJVN7drsf83Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g16nzqsfpnzuktkl7aucc5p726yms98d33jalp8w","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ES7ES2Ma6Mk5i5XvwBj00N96Toxb0e5oZ17Rm9PytHB+slT2iI/x/zFXG7MmaynBj9pVoWrKS7fDeYdT/IB9TQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16nzqsfpnzuktkl7aucc5p726yms98d33jalp8w","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","towngridtk",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A19T6uohAI+v9v+hIUHSHmXA4Qvo7Y+O99OTk/KtL4mO"},"signature":"1xPS75pM68WeRCaXb/3/jsjrLMlNIOBoboLPd5EUrHtnycPD9mglIdqAkgs+13cR3R2LK5GXTQL+nmmsDMIQoQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16nzqsfpnzuktkl7aucc5p726yms98d33jalp8w","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["towngridtk"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A19T6uohAI+v9v+hIUHSHmXA4Qvo7Y+O99OTk/KtL4mO"},"signature":"lM+gcMKS3HFMPnRpUevEeXQy188MflRIibfNKWthR8Z1RseWGN6Rh5RAJE2S03Ny5jqw2ZsDQCeGEAr89ThuXw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16nzqsfpnzuktkl7aucc5p726yms98d33jalp8w","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1964","towngridtk","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A19T6uohAI+v9v+hIUHSHmXA4Qvo7Y+O99OTk/KtL4mO"},"signature":"LM+5yUfmOouO5A8Y3FyK7DrLHVeK7BLY4JcfIGSi/exkiS4pkBG4OHnJ+QgPECplCSXBQI4Cvr23beYyg/Q2Qw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16nzqsfpnzuktkl7aucc5p726yms98d33jalp8w","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1964","1","1","g16nzqsfpnzuktkl7aucc5p726yms98d33jalp8w"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A19T6uohAI+v9v+hIUHSHmXA4Qvo7Y+O99OTk/KtL4mO"},"signature":"Zn56di7zmSWUZzGg8iMC2Rln8PGyV3uX4NysKD1t3xRerJxhQKee5PRWo8ejyykyjsOr7K5LLOtdzoBQAY4jWg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1km08kvffzqqhz2q79szjn7h7e053hnqjh44zjq","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"mO/l9RJ9+fmD88ZJsQKyqTF10xD3aOePymLCob8lk0Vzfy0w1IL3vbtxtTJZ/jzeAz6rCXLrBYDd8IE1ONdpkQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1km08kvffzqqhz2q79szjn7h7e053hnqjh44zjq","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","drinkcarthz",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqBWxU31qHbN3kooNFPYjDfxEno6CCkarQx2W00CaS6E"},"signature":"on7rxcM91TF8+4yoFxuc58mSwo98F5IK9Ut3scLAznsoatKvFrG5VSbEOcqcaT9GOqtUTvCfSMU2kvIaYpcwAA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1km08kvffzqqhz2q79szjn7h7e053hnqjh44zjq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["drinkcarthz"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqBWxU31qHbN3kooNFPYjDfxEno6CCkarQx2W00CaS6E"},"signature":"bG8Zuom20wQqCYJAcGwjYO0k4OhT7ea1TBw9WzwkSqpgm8lAxGFtSIiggGQdoweuBbrXsV1vzMCs/B126CsC/g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1km08kvffzqqhz2q79szjn7h7e053hnqjh44zjq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1965","drinkcarthz","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqBWxU31qHbN3kooNFPYjDfxEno6CCkarQx2W00CaS6E"},"signature":"vPW/jNw/ZwU3hMcEcABUIjItaB98V6hW4jmf1GhCh+cJ8Rl39JfUdlPPvrxlAHTiS4MlAWsaWtopxPlKgkwJbA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1km08kvffzqqhz2q79szjn7h7e053hnqjh44zjq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1965","1","1","g1km08kvffzqqhz2q79szjn7h7e053hnqjh44zjq"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqBWxU31qHbN3kooNFPYjDfxEno6CCkarQx2W00CaS6E"},"signature":"RETOQkr3FHE3BjNwXpx3HorYXFD/aA/aTqJVhjE7bzBZW5tYLIRW8CPJUATx/O/YCCbMNB1yhRoxdU+VuT5qtg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g126gghv50m7mzde6gn0m6dwzhvlthcryhuj5kad","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"N5N/2acm5a2bBS7Swve/E5RGG2BzjBIAnKiKIMBPBvJGA/446XPlJY9B0nNJbqgoPjws5Ghw7T62ewpnhn6UUA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g126gghv50m7mzde6gn0m6dwzhvlthcryhuj5kad","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","accountsunnyzd",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3J7nWcbD+JtoXHCngi20BZSwuhx+ob7u9o0T8p54iLg"},"signature":"njyQboam/1DroxqKKLdkcTedwmFnKWsI8P/zocYiyTFjZrLJNiVlr9uLwZjhgeCwqWp+X/zEsevK+GcZK4uiLA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g126gghv50m7mzde6gn0m6dwzhvlthcryhuj5kad","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["accountsunnyzd"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3J7nWcbD+JtoXHCngi20BZSwuhx+ob7u9o0T8p54iLg"},"signature":"XcaHhbcHlpzFx8NpxC+mqSDh0kWhtrJhtwvfSbceYg4L8tNwmD1SYsO8cloaiGk3vxByFQjbvvgiSFPDkgy+cw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g126gghv50m7mzde6gn0m6dwzhvlthcryhuj5kad","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1966","accountsunnyzd","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3J7nWcbD+JtoXHCngi20BZSwuhx+ob7u9o0T8p54iLg"},"signature":"j7/40TsXA5jlunC52cNceTlbY8BmogCC+3l99/MHuGE8ywZIXOguHLVUVibkjBOiShZFVSKt7dtYBe3DltaFsw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g126gghv50m7mzde6gn0m6dwzhvlthcryhuj5kad","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1966","1","1","g126gghv50m7mzde6gn0m6dwzhvlthcryhuj5kad"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3J7nWcbD+JtoXHCngi20BZSwuhx+ob7u9o0T8p54iLg"},"signature":"iqD0pLBKHgo1tyiXx7dZ8A36LAPhki0rofdFjpPgcQsAxh20vKhj9Dj7FIkHBnnH1M4ZisEiU9uhJi9W9SC97A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g18sguq47ca8s8z7ewh9ng5lfuu4w6jacujgxpl5","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"smAcTFx7x5XDHVJQPpThSsD1IJYXijePVETmVk+AUJYA4LG65wgFn1IHYLJAJvO3s8v12lg5ai/uT0IMHcWN8w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18sguq47ca8s8z7ewh9ng5lfuu4w6jacujgxpl5","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","printbean8z",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6dDi5ex15fFgS4z6Yi/z/41LMlDsx+IPpKV3SKjE0R4"},"signature":"nZ5AU34JojZB4KJQOn5DZWELpOugh1Ax0/l2l6FrLm8dEITJOmkHGIOH7jxWU0Y6oKu0EPybJ1/s67o3alIalg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18sguq47ca8s8z7ewh9ng5lfuu4w6jacujgxpl5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["printbean8z"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6dDi5ex15fFgS4z6Yi/z/41LMlDsx+IPpKV3SKjE0R4"},"signature":"DMuXDbHfPYhq/FwVCcxdTsk4IsaZePLw+vbzkuYxIB9nr473JinBw+T6hAYBwpXgr4vT4hJMRnagGzaaOM+qNQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18sguq47ca8s8z7ewh9ng5lfuu4w6jacujgxpl5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1967","printbean8z","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6dDi5ex15fFgS4z6Yi/z/41LMlDsx+IPpKV3SKjE0R4"},"signature":"cyEl5nmnH3EBsjtvqiY4wqWwLFWJ9nxEBFGyqnOlBPteQlynRjclYidQUGQ0feVFKCivgXUZYq3oahRUvaaXlg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18sguq47ca8s8z7ewh9ng5lfuu4w6jacujgxpl5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1967","1","1","g18sguq47ca8s8z7ewh9ng5lfuu4w6jacujgxpl5"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6dDi5ex15fFgS4z6Yi/z/41LMlDsx+IPpKV3SKjE0R4"},"signature":"Te4gx5jllQl30yi8Nd+wzplsi+vYX666PlXxU8Go6/Nj2MYqUPP/IeWuNw+AyNa8gmBnhCjUrrSoVvDX5H6wJA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1smvqdhep69sdnkeu7wca0kear8ts8yvcd8hele","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"P4XzES2TPIaAo3MMlKKilEvWHg6O2WNHQ5t0BXGSX8p3uMymSbHBojIBaCgK7U//yJlaJNVqleUsEH0SaZj1JQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1smvqdhep69sdnkeu7wca0kear8ts8yvcd8hele","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","stephooddn",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3J/CAm3IU9KKsTZf5K63wfaHE5gQjADWDH/u0aelgz2"},"signature":"O96cTDAcyaloUpV11cJWhADLgTw8L7oMoI3Rwdh92H0SVGVuSREIS6slYNWXurtOHxwsCywliyKquzwPDh9x8Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1smvqdhep69sdnkeu7wca0kear8ts8yvcd8hele","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["stephooddn"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3J/CAm3IU9KKsTZf5K63wfaHE5gQjADWDH/u0aelgz2"},"signature":"iRy7ogffUBSLjeIn1pmz4+LepgYhiLh/e7kV2S5D1zk2JEnvqLeRU7d4lo5EPb54l39f1Ft5L8IXwM5E18X8IQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1smvqdhep69sdnkeu7wca0kear8ts8yvcd8hele","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1968","stephooddn","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3J/CAm3IU9KKsTZf5K63wfaHE5gQjADWDH/u0aelgz2"},"signature":"yxT4EShqVvBcBIO2Kp9V/uSYsdk3+O0l1NhV5v2NsJgIlGT9+B7whAJzmsBokOEWXfvuJWWIC8HPZI7O5Md7bg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1smvqdhep69sdnkeu7wca0kear8ts8yvcd8hele","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1968","1","1","g1smvqdhep69sdnkeu7wca0kear8ts8yvcd8hele"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3J/CAm3IU9KKsTZf5K63wfaHE5gQjADWDH/u0aelgz2"},"signature":"P9PIp1v/ppVnrvKyAKy3M7NOrVZ3amCS/PUY/aVkp+RYDEkf/2EJqj9M80j+Wk3zrKVZD8fwr6mOFR1do1LRog=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g10a9h56ew0hs48e0dazvw5wa60vaue0kfam2a4x","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Crmha8EoHeFfuVOcfUFbEVm8SuOkETP7T9KBY/ZuuHxkCXGqY2edfwOTz9Xa6g41EB1gxPKEGVHj2hOvsugmTA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10a9h56ew0hs48e0dazvw5wa60vaue0kfam2a4x","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","maidcover48",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqC4r72YgbRexRR3Rj6RYqDA2y4LI1MMlP1Gy3EPigvQ"},"signature":"895TTaqEj7PsYNUFbVG4OuXW6PX2aHCECkmyu03N0O4Ba8ucpqiCUrKFfe8gaX66nTSnkk/uMhM/2OfAjJrquw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10a9h56ew0hs48e0dazvw5wa60vaue0kfam2a4x","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["maidcover48"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqC4r72YgbRexRR3Rj6RYqDA2y4LI1MMlP1Gy3EPigvQ"},"signature":"dPy3HoVhiNsQrfO7/5OcH+5S7P7jq822okK6bSlfVpBFjeBQ6AMPr09GOqFX4JXQXHISEq+Vh5ged4RJChFBcA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10a9h56ew0hs48e0dazvw5wa60vaue0kfam2a4x","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1969","maidcover48","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqC4r72YgbRexRR3Rj6RYqDA2y4LI1MMlP1Gy3EPigvQ"},"signature":"690NLwSfbp79XRDCLehAqfjbZyVq2WhpIWN2TYTiDxkkMtqL2EfDM2OCIoTHMbaLvqOO8SpbBttHhNi4Ciu9Dw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10a9h56ew0hs48e0dazvw5wa60vaue0kfam2a4x","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1969","1","1","g10a9h56ew0hs48e0dazvw5wa60vaue0kfam2a4x"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqC4r72YgbRexRR3Rj6RYqDA2y4LI1MMlP1Gy3EPigvQ"},"signature":"9dYlDN7drvV5zVamIrWkoWdPIJQxMnj3v6oJTmT+zOgYDe+jxMZxi8NRh0JmIxE+Ebx9ZD3CZ9Qs4rTIeATf3g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1gfsm2klg0z2nkntmmxqys08d8mqteqrlgzs0w5","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"QMlP8qFJODpG1gvTIa22DpIheyFCUnyAm1e2EAvdK+o+mBer6LFrC83svE3IO5ShWbS0IwZF8nB/QJsnu2X4cQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gfsm2klg0z2nkntmmxqys08d8mqteqrlgzs0w5","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","ruralplacenk",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Arzca+TAhTK2/CBw6UGLAAKovrg7dTCtMrlsBNvOb1ib"},"signature":"NKdwoOX+SB66v2ffzYXQ7T6bp6wqBINigg0H4oLecFgvKb6PVj0ylSWX6XEp1waaaQZUbX9pBG2KeZ4JjgvM9Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gfsm2klg0z2nkntmmxqys08d8mqteqrlgzs0w5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["ruralplacenk"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Arzca+TAhTK2/CBw6UGLAAKovrg7dTCtMrlsBNvOb1ib"},"signature":"Hw01+NqspQZpfrnIzrm5R42zQQpfDc95oufykqQ8wG9Uet/crjUI6/zaxfxl5juViD26TbuZ7z227mCYJ1d51A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gfsm2klg0z2nkntmmxqys08d8mqteqrlgzs0w5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1970","ruralplacenk","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Arzca+TAhTK2/CBw6UGLAAKovrg7dTCtMrlsBNvOb1ib"},"signature":"8Q7JaTjJ/EramZgl63QJay3/vuUKZROX0YTG89zYHCdMZ3tiif0qZ2rPbUJ6qKAIPCLiSWihrmz0p8iJvCWydg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gfsm2klg0z2nkntmmxqys08d8mqteqrlgzs0w5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1970","1","1","g1gfsm2klg0z2nkntmmxqys08d8mqteqrlgzs0w5"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Arzca+TAhTK2/CBw6UGLAAKovrg7dTCtMrlsBNvOb1ib"},"signature":"VCKxLEEjvJzXG8XI8nWviBkE4I8iZENCTNIGsPbhTMIZuarh+atTzapOKyvy0+72PpdwB5BdJAXoVVo0zfjHrg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1gt4nlcqjkfsxkhzlnwvr8tnj49ltyj32ueamyv","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Bv4EPdBWSla+Bpf7rCo6/lagAHGHnV0sIVf7R6nk/ExRfAfVgbDrPHncsplq5EGFkHfoDmZ2QK5Gf0rLwJT5ZA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gt4nlcqjkfsxkhzlnwvr8tnj49ltyj32ueamyv","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","misscramxk",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As+cPoAXkBj87NKxM66ML67ZAPvGmg5GeCY1cntcfeIG"},"signature":"zqva6DRxcW9DCpkphpLNP3cMJs3bF43xMVxJ1No2d7hzqWBIgOyxwe1F/V1Z/ckoCIsMsnes3kt/57J63HKIPA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gt4nlcqjkfsxkhzlnwvr8tnj49ltyj32ueamyv","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["misscramxk"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As+cPoAXkBj87NKxM66ML67ZAPvGmg5GeCY1cntcfeIG"},"signature":"e3bLeQgN+FEDYtaARpmfuMvlfzPkkfv7B1bvqpZ/VoY1k+Pu1COBrfQxOnHnddZL/fsr8vaWXXf/8Dchr/kD+Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gt4nlcqjkfsxkhzlnwvr8tnj49ltyj32ueamyv","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1971","misscramxk","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As+cPoAXkBj87NKxM66ML67ZAPvGmg5GeCY1cntcfeIG"},"signature":"5ol/GsUmsP3jE4oSNJuRkolWFEey0+U6k59JLmPaJpZFXY/Asu0xlS4k9GR2hLXRcRpGjOCvMdgOCfUk7YwkNg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gt4nlcqjkfsxkhzlnwvr8tnj49ltyj32ueamyv","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1971","1","1","g1gt4nlcqjkfsxkhzlnwvr8tnj49ltyj32ueamyv"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"As+cPoAXkBj87NKxM66ML67ZAPvGmg5GeCY1cntcfeIG"},"signature":"TzvodJVfEoMkn6fAD8MCXezO1j9+kldHaTTqz54/SAMF8F5/IFoR/DzYR9813b1iLvf2AGW90+D2h9dFkHUcOQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1w2dypzjqs8cgc724sndhm2ss2uqqul783zcl9r","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"CwOcx6rRMmXoq8W2qbLcgC8kMFk3US14ilH7NJf/pZdY8dvhD9GwSAOu0O5ZLnv37jWo1f/Wb0zYx8shp3hQfw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1w2dypzjqs8cgc724sndhm2ss2uqqul783zcl9r","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","pricegingergc",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Au086hMEZWCa0oXJt61saRKGaj4C0otfFMacXreFBTGt"},"signature":"q0CBAeXdwa6brGYfB0oGw1XChGzIPGoBhY/McALJgzdvylD5ozuhFkFk0rReM7Om1KAbieeXGgkro8iQccocSg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1w2dypzjqs8cgc724sndhm2ss2uqqul783zcl9r","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["pricegingergc"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Au086hMEZWCa0oXJt61saRKGaj4C0otfFMacXreFBTGt"},"signature":"aD8KjLPyOgOiPTQ7w9LH4aym3C3RhowvfnF+WV0++Gs4ps+QwE/guYUC1aJ9J9GIRjX1/27d94vdtYieNBwnMA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1w2dypzjqs8cgc724sndhm2ss2uqqul783zcl9r","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1972","pricegingergc","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Au086hMEZWCa0oXJt61saRKGaj4C0otfFMacXreFBTGt"},"signature":"94xLb11NVKvPWwg61z5G8dw0J75xhs0JjRodA2yIswJ0mGY1Ij7viMU0rR4c468NDJhD5bquVq2OCL8/k8hmBQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1w2dypzjqs8cgc724sndhm2ss2uqqul783zcl9r","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1972","1","1","g1w2dypzjqs8cgc724sndhm2ss2uqqul783zcl9r"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Au086hMEZWCa0oXJt61saRKGaj4C0otfFMacXreFBTGt"},"signature":"Oya85mK/yxm/qsrBTM6Fjys4ELZ/pNKSonAOlreI1px+QybNOyPwRaz3tO0b1v8q4P8dIzvSJtbYO3TxgktOTQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1vas4d0285m385nulzu5tx8zw20ttnnyqauhpvt","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"tBdyTEsjCuv5k1CJOSPNTf2/3gbISi31TWyw5GnaF+12JGMF7QrauGsyo1zMNVA8n2CL81ulXWtVyWdj43IxSA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vas4d0285m385nulzu5tx8zw20ttnnyqauhpvt","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","riflerally85",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A00+SM7TaJ0NWiHELZNt9RbyCDH7ijGFLJiJmFI1CvTT"},"signature":"9ZhUi7zLBcLZrgbrR1IB7iMs9esMosrTMrd6V19ILaQVwAunNuFoGc/PolxSfnBkRGajaMhQNrtYxDcMrc3rUw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vas4d0285m385nulzu5tx8zw20ttnnyqauhpvt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["riflerally85"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A00+SM7TaJ0NWiHELZNt9RbyCDH7ijGFLJiJmFI1CvTT"},"signature":"HdEGW9m1BCsSSzJ9WP5Qgjo2DyZL54X+9KIl8d/7Wc0MC2uQ3VwXBwOeXSMSS46SNotFKQT9QOQ1loFYSzMD4w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vas4d0285m385nulzu5tx8zw20ttnnyqauhpvt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1973","riflerally85","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A00+SM7TaJ0NWiHELZNt9RbyCDH7ijGFLJiJmFI1CvTT"},"signature":"4Dax9jKZ9TcBhWyCGbjElGp1TFsVsm5cICet6XcAmaYtY6XRT5fZZmZt+EiqJZ3qoeC79ZmdosqAu/mD+QVixw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vas4d0285m385nulzu5tx8zw20ttnnyqauhpvt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1973","1","1","g1vas4d0285m385nulzu5tx8zw20ttnnyqauhpvt"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A00+SM7TaJ0NWiHELZNt9RbyCDH7ijGFLJiJmFI1CvTT"},"signature":"EcMHEYNS/5CzfrAkhUwZHR/pVKkHvb+w9Kqdn8sAf8UPS3IFHVP9+pStxo56xT+x/Ga+tXdd2n600OacKdT5Uw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1sdz8zkj6cpjfgpxezw0vyy7xs9z7k3jjctq8mm","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"V09go+w4JjWvIA8Tf6h90Ymuhs2JM5XZE7TQ8m1RingOQLfwwoXI2IcRbU2SYSUHU8easeJ2G1j/TXVXdEm0ig=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1sdz8zkj6cpjfgpxezw0vyy7xs9z7k3jjctq8mm","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","bringpathfg",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxJfIFvW5QIMD3MuAzWU67VSsfXY7g1rUVjwCt3jCWlC"},"signature":"7XTKb1O8eGo1KGmfIySbmAy1rEb5wMOIkoDAm6WE7lFY8CmUiYIVNGIpP9VGoYVxTypR4aRGGrC7H5dRHC3KFg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1sdz8zkj6cpjfgpxezw0vyy7xs9z7k3jjctq8mm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["bringpathfg"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxJfIFvW5QIMD3MuAzWU67VSsfXY7g1rUVjwCt3jCWlC"},"signature":"16eNTitlO/gze7rOh/C/JkVQqmY5ezi2fFTmoE8Q/skjhidCGHdgiLRCerkLoW64CwqB6n92h+sHdOABbZ7bLg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1sdz8zkj6cpjfgpxezw0vyy7xs9z7k3jjctq8mm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1974","bringpathfg","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxJfIFvW5QIMD3MuAzWU67VSsfXY7g1rUVjwCt3jCWlC"},"signature":"P8SsnoVm2A2z9OgCrEbrwO/XEDaMOZlO1bsGXR4F/v9iPyZEieS8fs4bVaUaw68t1+55IdahchOoU1vh+BfAHw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1sdz8zkj6cpjfgpxezw0vyy7xs9z7k3jjctq8mm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1974","1","1","g1sdz8zkj6cpjfgpxezw0vyy7xs9z7k3jjctq8mm"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxJfIFvW5QIMD3MuAzWU67VSsfXY7g1rUVjwCt3jCWlC"},"signature":"K6XOidtgDVmpix3/vSJSDdehw6Zjm66KnTxRSWxqkiIzciS2i7G3bSmAAqfgQed6U4Tt+/Zz8tKeNCaHKfIlZg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g13tkwrh06hnqv93aneq9fy048yd8kc3gnumw5pc","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"+T6GSPPOWhiBpIu8lrXn+R26NirdqlY00kb1OIrQHS9mAALdUaxdsVZMu0+hYjc1zveSaEoFosYLsZi1kUPHuw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g13tkwrh06hnqv93aneq9fy048yd8kc3gnumw5pc","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","beforecoursev9",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhMQDezgQJFcuyQf9EmvxRWzPMU6/sSNIFwGH38bvUho"},"signature":"9Mev4qxmMhTrGmLNlaaJoAR9fdb4Pvkpz0e+mf2E30xyrkYsI8LEdBpu12hURuUgpCiDy2CHBSMlAWrd32gi9A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g13tkwrh06hnqv93aneq9fy048yd8kc3gnumw5pc","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["beforecoursev9"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhMQDezgQJFcuyQf9EmvxRWzPMU6/sSNIFwGH38bvUho"},"signature":"v30Y+NS+nL4eiFIRNtTR/xrI+KctVTYijAPaoVVq9h4kaSdtDubwr0yTbOId/hcCIC5wuQbFceOpWYhlPXaJgw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g13tkwrh06hnqv93aneq9fy048yd8kc3gnumw5pc","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1975","beforecoursev9","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhMQDezgQJFcuyQf9EmvxRWzPMU6/sSNIFwGH38bvUho"},"signature":"EJTQA/7hJ4P3rSwHJW6DyL0A89fwVeIKaTa6O3f6x+kqyzCIW1DAH7+VBibiKOYJtce7PYX0upF8fC4lXTaBFg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g13tkwrh06hnqv93aneq9fy048yd8kc3gnumw5pc","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1975","1","1","g13tkwrh06hnqv93aneq9fy048yd8kc3gnumw5pc"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhMQDezgQJFcuyQf9EmvxRWzPMU6/sSNIFwGH38bvUho"},"signature":"rQUGEN9ApOmzjevVshfSuodFlAhLQduoVLUTG91M4RILd8pcNvUPWNTuFKSjTjQZR9f6QbaUKqPN4YF7cRXQyA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g16j6myy5a8y2n3jdgeg2mavvrllakq5kguj2t8x","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"mkWFA9NLcqhyOloZ/jEnBsMXjVYNWQe7+vmqY5XaAAQM3FtNdlInKAdC/uP4CCg+lll0504j/J8xK39/huTrbA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16j6myy5a8y2n3jdgeg2mavvrllakq5kguj2t8x","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","bestmann3",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ay40HXrhPAGG662QA4lrWeyQnv4pzTfVhzvKCq0wwYZ/"},"signature":"LNSuwTual/jbb/joS5ARztMJcOx7g0uzES9hvH9dCVR9N9PWJX6LVpJDdGRTBJIzi50XShrmqOEOk3oUdD3agA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16j6myy5a8y2n3jdgeg2mavvrllakq5kguj2t8x","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["bestmann3"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ay40HXrhPAGG662QA4lrWeyQnv4pzTfVhzvKCq0wwYZ/"},"signature":"YUFGUtBq72Az9jCta4lCnJxwDVGTJCnkE2IQpEEc1NIXuF2Z7tGf1zdoKrNoenctLaMutYxxMz8DFUmDQ2WF3A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16j6myy5a8y2n3jdgeg2mavvrllakq5kguj2t8x","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1976","bestmann3","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ay40HXrhPAGG662QA4lrWeyQnv4pzTfVhzvKCq0wwYZ/"},"signature":"KwgOLMC+G6HjRRpUfyfhMh/dBnEueSHP08uGmdB9SzddXy/lkl+mHf9PR91FbZcejAZESfECQa/PKTrwpjMYOQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16j6myy5a8y2n3jdgeg2mavvrllakq5kguj2t8x","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1976","1","1","g16j6myy5a8y2n3jdgeg2mavvrllakq5kguj2t8x"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ay40HXrhPAGG662QA4lrWeyQnv4pzTfVhzvKCq0wwYZ/"},"signature":"7/B2hh/nioxkBGK+iLhhFo+5Qbyl/xofJuramSuIdnArTcqKaXIjtFUzzGFHpRytWjTB1C1IkNWf9/DuVCvkyQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1khty8g7qxhx3256ddptst2cwp2c9vj70gtxuv8","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Dbb/ZqDNzzYWBwDyDTcDdldv8ziuO+crbHAADLMtx5dg8hdN+3k5DMj0f0LXtgE6q9hcrpgvxuATVPgyuHxTPQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1khty8g7qxhx3256ddptst2cwp2c9vj70gtxuv8","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","smartelse32",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxyY2suqXm+jBmwcuCEbt1q2vmfXgBANs9Hclui64blX"},"signature":"ZiTyVUYUBEZ2/QGRautf78ngpUiJhZS+6/I077pU/R4uNZCbrkyWRp3i0cgPjIWEvVF129o1m/7/rbxg8cM18A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1khty8g7qxhx3256ddptst2cwp2c9vj70gtxuv8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["smartelse32"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxyY2suqXm+jBmwcuCEbt1q2vmfXgBANs9Hclui64blX"},"signature":"aWTw9xJJsG3KFx6IrU9eCLqMXPjnQnnQ73vkcXOxPmN/KkvAea8USWbOdYVFIwSYDOFDf7DhxHpUpuKmESQgCw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1khty8g7qxhx3256ddptst2cwp2c9vj70gtxuv8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1977","smartelse32","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxyY2suqXm+jBmwcuCEbt1q2vmfXgBANs9Hclui64blX"},"signature":"Ax2GC+N9xLqHs1FmdgchvncoOc2G3A0wPRZO0kwnLFNGofAZGgSGGQgeuWXFw6lXka6zWsWzkCjbAdY3e3TVrQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1khty8g7qxhx3256ddptst2cwp2c9vj70gtxuv8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1977","1","1","g1khty8g7qxhx3256ddptst2cwp2c9vj70gtxuv8"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxyY2suqXm+jBmwcuCEbt1q2vmfXgBANs9Hclui64blX"},"signature":"5mrlWPUbAW56iEGqFIgpz08dXDdCoJi7s+yVpD4oxD5gPXgO7GfL3eywSg8rn7vv9mGvFa5iSP6KMx1Bh+SBQA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1vyvw56trm6sgpu96hwxadn8zr0gf04ad7wq4ke","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"d9+Jx7agvfkfZfCgsGJsaVPAia3s336NgXK3/VG/SnIh0p62cIcRh5EjR5U2YMjhM3H8WCQFQWcKMfQdS6bC7g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vyvw56trm6sgpu96hwxadn8zr0gf04ad7wq4ke","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","divorcewarfaregp",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwMIOGVLnEbZCjeHgeNQT6QGpUJXuwYVLv0jq1z5hsOA"},"signature":"cTR8t+Ri5IVqHTnPtzWR2I5TcoifWaljIIJ7uV7Nl+RmselgcdY0oYSg1OrUnxYohYnGUEiarAo1s4hGctw0zA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vyvw56trm6sgpu96hwxadn8zr0gf04ad7wq4ke","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["divorcewarfaregp"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwMIOGVLnEbZCjeHgeNQT6QGpUJXuwYVLv0jq1z5hsOA"},"signature":"zDu01Nx1OxjsfzffzkG/TGZAAoAmBjAA+Z0eD8GHptsh+UWxukJpu9Hb3XGZJYqkeuvwpVWfY0fJLDNteswK8w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vyvw56trm6sgpu96hwxadn8zr0gf04ad7wq4ke","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1978","divorcewarfaregp","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwMIOGVLnEbZCjeHgeNQT6QGpUJXuwYVLv0jq1z5hsOA"},"signature":"dNCNqN4LI7RpCxypKrNBSV/91XPC5mIMwx2QpxPTWKhYq8L3Odg6LYRdy58V8P6THFKGcSKSGkmRb9SSOrneSg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vyvw56trm6sgpu96hwxadn8zr0gf04ad7wq4ke","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1978","1","1","g1vyvw56trm6sgpu96hwxadn8zr0gf04ad7wq4ke"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwMIOGVLnEbZCjeHgeNQT6QGpUJXuwYVLv0jq1z5hsOA"},"signature":"YzRhj155NuQ23sIV3ZFd7rlMkbchmfcroIEYFKBfODx4TpD6XeQMTH2VSOIFfsx4k3qhmDYfXBk3Pm+pjee+fg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1ng9y55j0x3wgef66fhwuzncg5rfpyqazex2hlm","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"cRBDxFVrvgin1X1/Y2JoE35TrrSmlDB70C2YDOYTOOw9jJQyk/aJITQOxNpeYcik5L24pC6e4Bt3CuHxdF90Tw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ng9y55j0x3wgef66fhwuzncg5rfpyqazex2hlm","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","stumblereceivege",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuNLFLgWkGBWlGHQx8mSVZvT8n6lK6x351L47okiqGLt"},"signature":"XLKLFY2Rau8j6Y/jDUG8dA9ULmJFRG6egKLL/526l+gV4S8vJPFGlcNlCZAiNiAehTHDAC2X0/yJxf/O9vVbBA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ng9y55j0x3wgef66fhwuzncg5rfpyqazex2hlm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["stumblereceivege"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuNLFLgWkGBWlGHQx8mSVZvT8n6lK6x351L47okiqGLt"},"signature":"pokhoFm/KcUz+es0TA3QGwEoriTQhN8Ej6LGDg8sitpy5xucEcS8rHGih0VuN6iRJYffcCO72l4ZC9WLDFk39w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ng9y55j0x3wgef66fhwuzncg5rfpyqazex2hlm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1979","stumblereceivege","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuNLFLgWkGBWlGHQx8mSVZvT8n6lK6x351L47okiqGLt"},"signature":"1B7bEqsF+WHUPk/kWyxFVwdOSW/QC6uORir6PmfFUIBgiQDF/I7oFtLogFOM/wqvIVsS8lb7i4Jm6hQbDZDUOA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ng9y55j0x3wgef66fhwuzncg5rfpyqazex2hlm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1979","1","1","g1ng9y55j0x3wgef66fhwuzncg5rfpyqazex2hlm"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuNLFLgWkGBWlGHQx8mSVZvT8n6lK6x351L47okiqGLt"},"signature":"zRTStJp3IaDDxJoPyuVEzom9tsaWA0L6e9AZqBe5BR8xMQm4VvT2kNw9+kOqxwvCO7HLp1NEIr9Fg8A/PmobxA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g18mrnnvz2sckrf05snhv92qr5fqst8twt90k54m","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"FmTWtEBU/DhUh0PThpm7HO5NA5QmurLkKMoM+hPekNVYTdTkZ/DDwz/wvnnp44fLhwJ4xpJQszO09pgLoYYR0A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18mrnnvz2sckrf05snhv92qr5fqst8twt90k54m","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","oncestuffrf",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0G1VkR4uTaiKiNTjPXAQ4G+pedvHXGXt7UL3pHVfr1G"},"signature":"QEMCpU5p+w/DNDHfwbVZtSJwr2Qidr7HpQErby5JgacyrT3iyo6iJJsUn1mUPlDGgjlhHeEWtegHHAW84uz56Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18mrnnvz2sckrf05snhv92qr5fqst8twt90k54m","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["oncestuffrf"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0G1VkR4uTaiKiNTjPXAQ4G+pedvHXGXt7UL3pHVfr1G"},"signature":"aM2DQSIoUNuUf9IVSnrV0G8BQiPC+Q/5hD6R50sFYtQHySyq2vo8KrKAHQyJV3DW5M/Dkv3dbq8u7OuDTf1rKw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18mrnnvz2sckrf05snhv92qr5fqst8twt90k54m","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1980","oncestuffrf","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0G1VkR4uTaiKiNTjPXAQ4G+pedvHXGXt7UL3pHVfr1G"},"signature":"/uo8HIdKqZokD++OyfI5OeerH4K02uDh5/0gzRerK3pmlmHleLi4tcJsnDPuLMIAjZ+D6m6z6TEUMSRgEgR+rg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18mrnnvz2sckrf05snhv92qr5fqst8twt90k54m","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1980","1","1","g18mrnnvz2sckrf05snhv92qr5fqst8twt90k54m"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0G1VkR4uTaiKiNTjPXAQ4G+pedvHXGXt7UL3pHVfr1G"},"signature":"m0F9faRzZhnX+EKOVv6XHbR/7CQBZwOn1xBm2TWayqk3hwtSQCxd/Pl2rd5pSML7FDkZgKNQoqFR/CpCyWdOHw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1lrswr2j0fk8keqywn5ayatlvjau80pj9zjy3te","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"AaeKo8Ac5UD8FYKNfbanFzsRoj9oS+asY5wh+sTfkoon0utT446AyqaWMK6FdwxzZlQhA8IIuybA61ElPTcWcg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lrswr2j0fk8keqywn5ayatlvjau80pj9zjy3te","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","savesizeke",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyKfj1OsJZHY7NqZ7Iyd1KuAwe9Lf/ZGCjn+l3gAyJHE"},"signature":"TDTZmM0tqGuY2dXjcGZqscz1KioEdlC0gyeZzPTro+o4UyqovLBk/7r/clq1ksHCuVNmfZswfcK1Ae/tEqN8XQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lrswr2j0fk8keqywn5ayatlvjau80pj9zjy3te","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["savesizeke"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyKfj1OsJZHY7NqZ7Iyd1KuAwe9Lf/ZGCjn+l3gAyJHE"},"signature":"IEusbvqlo2fYulX4Ag9BPDzr+Fth0IHoqIc3d37VcmJUWPjKvx8WbBMdj957PjKzYh6uBoCPtI926Zl+ovMJHA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lrswr2j0fk8keqywn5ayatlvjau80pj9zjy3te","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1981","savesizeke","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyKfj1OsJZHY7NqZ7Iyd1KuAwe9Lf/ZGCjn+l3gAyJHE"},"signature":"wvdwcvvcFAOXA7JyzaIoaF8qfAmjZHo9ufDfvdM+OxwFx4lCpg+yPPWjjgBwz61a0xuugA5yLUxqCHutn6gSwA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lrswr2j0fk8keqywn5ayatlvjau80pj9zjy3te","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1981","1","1","g1lrswr2j0fk8keqywn5ayatlvjau80pj9zjy3te"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyKfj1OsJZHY7NqZ7Iyd1KuAwe9Lf/ZGCjn+l3gAyJHE"},"signature":"YZwOMlTDdvSYSoLhcExj5jHBevu8nczQDBkk4/0tR/E59q4SaZ1k5qAzxXr9bvYFyZB8GSWfBwe3RTGdV8whOQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1zpwvpj77src6kpe3aft8ncvg8x6v2np274xdcw","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"xaydNdlA9jCIEeFrn1UV+1LHleTzTX8t1UcJwxLndvV90qHH6zrJfuoMytlH/kAQaPD1dk6zcx82KgQziby3/Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1zpwvpj77src6kpe3aft8ncvg8x6v2np274xdcw","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","shallowshell6k",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+g/+3SwPdlj6hVJ9P6HyDcxqFfagjzDSj9DaN7i5U6E"},"signature":"z4NVyU/QslCno1EGVRJ3KmSDz3QU1c382l9awCqeq1xs6bAybBF0lNsrpXsITZ3sMYGcEDYH0YYpmjJ4R65ptA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1zpwvpj77src6kpe3aft8ncvg8x6v2np274xdcw","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["shallowshell6k"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+g/+3SwPdlj6hVJ9P6HyDcxqFfagjzDSj9DaN7i5U6E"},"signature":"UeVNciQYrHEIF2m5b2oay6ILjbNOTnzfzIjwjQ/rX9QazCzDa1q//D/QNmYf9kjG/QYchsi9ifIdl6CMc7HptQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1zpwvpj77src6kpe3aft8ncvg8x6v2np274xdcw","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1982","shallowshell6k","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+g/+3SwPdlj6hVJ9P6HyDcxqFfagjzDSj9DaN7i5U6E"},"signature":"yjKRhXjtYw1Ub7hQy0sz1tOB01O7/dr3aWNyvgiAE00QSxF/o9sirPwVET9vX3WlPeuV9mvRS6YIoYnKoXDLhw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1zpwvpj77src6kpe3aft8ncvg8x6v2np274xdcw","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1982","1","1","g1zpwvpj77src6kpe3aft8ncvg8x6v2np274xdcw"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+g/+3SwPdlj6hVJ9P6HyDcxqFfagjzDSj9DaN7i5U6E"},"signature":"EbZ6WxKK3QvxO6M20CLzlj7qQrwVzsR/c1z7TNEY+Jtu1KYt5QIDPgjxv7I3UZJE4ht2e0rZU9dTvuEXmSpXAg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1hp0h0sxxayltveapa6k6er558rshulqs2p2r8x","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"7Cv9iCuTCeZNP2KvRuEenH5eYDjtg8/qWunMXmG6VAYSGYmhEQwZElIMAtX497nLPwCzjBFP/csKXFk/0COtxg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hp0h0sxxayltveapa6k6er558rshulqs2p2r8x","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","purposerepeattv",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxLzAm19aYllo3Puu/54rGw/DIBuhzgDh3DaBVEoCTCI"},"signature":"EXfUMBEASPIkOUrDmJMhSKrlt2xb51BEsruJF0kok30kT3h862WE+LS1SUA7M07XotgJNlrgt1+ln0FLqKoVnA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hp0h0sxxayltveapa6k6er558rshulqs2p2r8x","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["purposerepeattv"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxLzAm19aYllo3Puu/54rGw/DIBuhzgDh3DaBVEoCTCI"},"signature":"ejGAEPNhPB5E2wh835tpGDjZzm6J1aKWTLn9Dj0iqS5lOEn362GixKPm1TCWQiiM8k8D92L1YrUp+MeDa396zQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hp0h0sxxayltveapa6k6er558rshulqs2p2r8x","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1983","purposerepeattv","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxLzAm19aYllo3Puu/54rGw/DIBuhzgDh3DaBVEoCTCI"},"signature":"FBi0DSpk1zKW9yXNGK0P8GtCSBU7STZbRLhbu6QXB844x6vesWwlRyAbxdjK93pMWIlj8LM9hWvOqntPwkka3w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hp0h0sxxayltveapa6k6er558rshulqs2p2r8x","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1983","1","1","g1hp0h0sxxayltveapa6k6er558rshulqs2p2r8x"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxLzAm19aYllo3Puu/54rGw/DIBuhzgDh3DaBVEoCTCI"},"signature":"afGb2uXMely6es9OGQuMFDsh78YeXEc61Ek1xboY/eVeaYwskIa6zv1S6j6yz6SOgtY7XS7hNHglHjTsCXAnMA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g14lmeefmf3c65hvksumax5jsvfsnm24yq5e9van","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"61DpKz8v5XJgy/c6/jRMPfhZHlrYSC7fLavXCo9yGWQGYlkL63YRliLhJLwuqckzS2FQGkAqvmfhlfc0GePDaQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14lmeefmf3c65hvksumax5jsvfsnm24yq5e9van","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","licensemonster5h",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A35wmEL6sSM6LTm3rc1Sop8M3wK5yXMhTD7IIP96VoyQ"},"signature":"i4eUGJApXCgC1q8vPiUGRJ3KN3hnN27iV4yS4oTWN6AvQ9ve91/ZKDWAdOxYZyWKRhfHbPxqmndQiMVM/9XSzA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14lmeefmf3c65hvksumax5jsvfsnm24yq5e9van","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["licensemonster5h"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A35wmEL6sSM6LTm3rc1Sop8M3wK5yXMhTD7IIP96VoyQ"},"signature":"5eRrsp9EM+7dyJzC2/gTLJPegXKypbX5/RAyZUdqIZck6PX8/yIb4jfysDr/m8N4jtVOUukpmo22iuW4IXh7VQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14lmeefmf3c65hvksumax5jsvfsnm24yq5e9van","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1984","licensemonster5h","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A35wmEL6sSM6LTm3rc1Sop8M3wK5yXMhTD7IIP96VoyQ"},"signature":"6T2Hf6QVNEn0oc5AnL58zGeZPxcIP6Gp7JJj+NPi8qNf1Nf4potOMGrYMHP0OKWCJWPK2xTb3oxJx1AnYi6TnQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14lmeefmf3c65hvksumax5jsvfsnm24yq5e9van","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1984","1","1","g14lmeefmf3c65hvksumax5jsvfsnm24yq5e9van"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A35wmEL6sSM6LTm3rc1Sop8M3wK5yXMhTD7IIP96VoyQ"},"signature":"5oSuD+AUkczbm19osvTRG2lMD6Ek2ZzZ85c3qZb39mAVdSVmSZQQIIi6NYJETqcvVWwNNgbIm1EmQomecHk6aA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1tnv36mlllkvk2v8x8z5mc4yj2vnnrps56nalzs","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"NafssaRNtXjSx5JrqqrzU9YYm+KbB9koRVoEMCMSfcI0RIBjgwrB+0S68E6f+rTUTuleYcK3DwprcHF9hVoP4w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1tnv36mlllkvk2v8x8z5mc4yj2vnnrps56nalzs","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","circlesailk2",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ak/HqM6W4GqKr50JVZwYM8ZE2LmsU+zrTeSVlu8R/jxS"},"signature":"dFrM9kuXhwEbxIvvrDoflaQ+5WOOpgSlp5egpxW4uAgQK7kdnwME06ia2qqgBqyGO1qwuMjRWwwz2SJQsf71Nw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1tnv36mlllkvk2v8x8z5mc4yj2vnnrps56nalzs","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["circlesailk2"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ak/HqM6W4GqKr50JVZwYM8ZE2LmsU+zrTeSVlu8R/jxS"},"signature":"BkL+QOveN0f9MMhl4ItRa/7e380jNJkTPWFJ6gN1hqoJ1JIIyuRS0d4bEGpVtGRj/sFdT7Ex+NNQF5nA4u6U1g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1tnv36mlllkvk2v8x8z5mc4yj2vnnrps56nalzs","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1985","circlesailk2","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ak/HqM6W4GqKr50JVZwYM8ZE2LmsU+zrTeSVlu8R/jxS"},"signature":"Ws6NP9eeC+2EN27DqLe9JCXY1NpOOBW3+jssKf/IZvwc8nTFcbePSo+m9duHmYvyhJkfGaUgWyU8qOV/LGFvWA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1tnv36mlllkvk2v8x8z5mc4yj2vnnrps56nalzs","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1985","1","1","g1tnv36mlllkvk2v8x8z5mc4yj2vnnrps56nalzs"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ak/HqM6W4GqKr50JVZwYM8ZE2LmsU+zrTeSVlu8R/jxS"},"signature":"b2k4UoWsMw5PxwXxn2g09NYJ0dJhN1zTtpFhLf939XIgg+xFROf7NNxQQHf2z1b4NkxdDdZIZQUlYxA7Aq7oyw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1psl7v29mptg7dt3wry2vq7aj8as4fk558d5zy6","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"KtkdXJzTURxLNdV2nUfUCINBtMc1vNifBMTZilTDegs3eaKY9fTmrtzpZizLB3jisLaW9VDTqmlzBcxtlBmNIA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1psl7v29mptg7dt3wry2vq7aj8as4fk558d5zy6","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","mediathunder7d",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjZhKL9+lnnhlkxhsZo5SN3jI+tEBq2PelZWfKs4LS91"},"signature":"PceeAjUa+YTx5/n3IlcBYX86/rKNP/yyD7urx/5I6R4Vh7ZddwuzQhtVXQnktQiVRRWTtFpV2rs9D0W8oHhoEA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1psl7v29mptg7dt3wry2vq7aj8as4fk558d5zy6","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["mediathunder7d"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjZhKL9+lnnhlkxhsZo5SN3jI+tEBq2PelZWfKs4LS91"},"signature":"lDd3yTnXUhWNhRl+2RHaH13FMtZOPcphgt/ANeCGnj4rYxjj/WT4NFIpKu9qOaayxSDsyrAt6ox714Hw8IRrMQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1psl7v29mptg7dt3wry2vq7aj8as4fk558d5zy6","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1986","mediathunder7d","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjZhKL9+lnnhlkxhsZo5SN3jI+tEBq2PelZWfKs4LS91"},"signature":"OCoxZvIAxi3rRCN+a5JeRcAfyN2r8Hus9LkUirUO3yoqI6Fs/k63fDz6obYR3ww4/HcnKQ8ImlzhRFdRmhx+Fg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1psl7v29mptg7dt3wry2vq7aj8as4fk558d5zy6","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1986","1","1","g1psl7v29mptg7dt3wry2vq7aj8as4fk558d5zy6"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjZhKL9+lnnhlkxhsZo5SN3jI+tEBq2PelZWfKs4LS91"},"signature":"u9Wk761le+M8wqxVFYkXOE7ncGsVkPJic4pzSfSo+r15x0ngvNLUGPo2AQB5upioZIIIsscTKpP0NCafZlawDQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1a2n0nrs3c5ju4m7stw37sftsxn5fwd77n30vh2","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ynXsP8BXD4lK2R7OZwN/pBkLoeOAzvO4j2NF4W72KK967OhmAlmMlFWwrzwL8dhf+yyeI4yl7XIIVTgizuG+tg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1a2n0nrs3c5ju4m7stw37sftsxn5fwd77n30vh2","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","meatabsorbu4",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6IZog3KD/deEfEQyxDlLO1E7LP5PuilGOs/cmTERc7D"},"signature":"i4xiHE3ZZsRep4H4fUbyVaJvMPpYoChdj5faeL3Oi3883ZYHC9zpOuQeeIjCUEkLimkS4FcrlNqwwhJF4JwU/Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1a2n0nrs3c5ju4m7stw37sftsxn5fwd77n30vh2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["meatabsorbu4"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6IZog3KD/deEfEQyxDlLO1E7LP5PuilGOs/cmTERc7D"},"signature":"l+mw4h15+i0kADUaeCwV4LEj+LAe5gUwZoPo+hC8TTMyRr8U2PZQcT4geb4WDCiCaNOfEaqleHreiaRo2OXvkQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1a2n0nrs3c5ju4m7stw37sftsxn5fwd77n30vh2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1987","meatabsorbu4","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6IZog3KD/deEfEQyxDlLO1E7LP5PuilGOs/cmTERc7D"},"signature":"Tlx5V1d1ll9HunfYYazODB9dPgMoC3jmJVlL5T1iVz9fYfBIfD/BZf3xXQN+X2X4mJ3IBNI3YPc5C1sWPniXjw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1a2n0nrs3c5ju4m7stw37sftsxn5fwd77n30vh2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1987","1","1","g1a2n0nrs3c5ju4m7stw37sftsxn5fwd77n30vh2"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6IZog3KD/deEfEQyxDlLO1E7LP5PuilGOs/cmTERc7D"},"signature":"NmLSfbCD9oEW/oxnJ07q8Bk86jdlpwUOfaw7GrJg1nEvpP2IYvznmXpoTMIXJlI0MxDzH51IIqsYwHI0o3kVMA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1a5vxt7xg2atfvqswx6afh5095gtv8c74jjpurs","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"FRJDBH6AQJZBt9+3t9ED8OUMfOFJUZ9hvCXcS2DxblhEEOHaBA2miEH7VT6Fn+OTbCUtUaLBHXbhXAv83sf/5w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1a5vxt7xg2atfvqswx6afh5095gtv8c74jjpurs","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","tenpowerfv",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyyevXpEPhjZ2Z4qTDOzgt1+nG29bssjsRjqHeSmY336"},"signature":"Ca7Jehn9/EpiwSQNm2hGvOHh3gxTkfrWboce7+UjbVxcIhQ/CmYcSUNC86vR+4hJkuBysl0Qd13PUDCo/2+5rw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1a5vxt7xg2atfvqswx6afh5095gtv8c74jjpurs","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["tenpowerfv"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyyevXpEPhjZ2Z4qTDOzgt1+nG29bssjsRjqHeSmY336"},"signature":"BDFYuL3D4OoFJeriG4lec8FuzVeoFtQvYjKV78pb5xB3ydA8MEc/bCVTr++fc/gqm8WUu/E+TPS60MtC0g5f6Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1a5vxt7xg2atfvqswx6afh5095gtv8c74jjpurs","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1988","tenpowerfv","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyyevXpEPhjZ2Z4qTDOzgt1+nG29bssjsRjqHeSmY336"},"signature":"sqUFbAeOCmBBNOwTwEKvHUq1Co+95nRI5hXSTTuSpb8cXeUI+jq2aX/EoJV38Xjcqgl+Ziw7Z08wRQ3IvnR5Ug=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1a5vxt7xg2atfvqswx6afh5095gtv8c74jjpurs","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1988","1","1","g1a5vxt7xg2atfvqswx6afh5095gtv8c74jjpurs"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyyevXpEPhjZ2Z4qTDOzgt1+nG29bssjsRjqHeSmY336"},"signature":"IZKObGGI3KVzat3ufTjrZuzdB/lpu+v4xoZjSLlVSGsKQODtTwMmd4KDMFhzDR/G48JhJWzS10qL3/TKi5Q8tA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1useukq0f89lls8fq6yjhpctcsyt0v3x9mfnsu8","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"HCCDICPhKWVYqSrXtD9lA5DHEBSmBN2b/kcuCt/cbLhWFMWbZMMeaRYrW2J5CKfOk+UM0E+OJi/vPFOe2QMIsw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1useukq0f89lls8fq6yjhpctcsyt0v3x9mfnsu8","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","selectarrivels",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9yeCDYFc6x+AztMFFdeyTmoqKSY+pdadVGNu/okvR+v"},"signature":"4anqI9674UtJDMfjf++E8RlEJ6rrsvbAXS/Lnw0oGekmtjgGIdJ6dVG0cWABcA88oKfcyTdj7smS6wFvJgsU+g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1useukq0f89lls8fq6yjhpctcsyt0v3x9mfnsu8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["selectarrivels"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9yeCDYFc6x+AztMFFdeyTmoqKSY+pdadVGNu/okvR+v"},"signature":"C5EremmZTsKvHstP/l8GmPHM2Tbps/NS1kF3GP7toGoHBlUSDGjpAyRm2phzT2JiX0r00DSWbwvuJTe2fYR2qw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1useukq0f89lls8fq6yjhpctcsyt0v3x9mfnsu8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1989","selectarrivels","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9yeCDYFc6x+AztMFFdeyTmoqKSY+pdadVGNu/okvR+v"},"signature":"Xu0ubK3If8/DUVlBWPtJOpcAYguu/ezIswnBJ/Vp1xVbSe/8k0B1K7XBTqWU0sRF72HE1WPBAiZNZqO93MUV7A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1useukq0f89lls8fq6yjhpctcsyt0v3x9mfnsu8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1989","1","1","g1useukq0f89lls8fq6yjhpctcsyt0v3x9mfnsu8"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9yeCDYFc6x+AztMFFdeyTmoqKSY+pdadVGNu/okvR+v"},"signature":"RYXS7I6z1w1sWz+NQBqifav1XwyloEptH0S1YzcdlhER4VPssrpLdSV1O4PuG5Dhq+zMNoqKo9RYB59yiELyzw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1h3dmjyhh90s6ux0s3t0j2tvt5x74kdl33eyk8g","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"4XYGLJK5wgXYQTiGHldHT2eJKT2Esesq4/MBr80mzxYB28ewY8dl7xKQk2i24WjTzSr9VBkRBdwxHEobl3bsyg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1h3dmjyhh90s6ux0s3t0j2tvt5x74kdl33eyk8g","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","aprilladder6u",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuL9jUqom4VOzOdKwXirOKl7O2dls/fY4mK/j3d8o/0p"},"signature":"QRHWLTH1RJYsYq3APAqronPngXsdzmOOMre4mPk+XSA5pOUH7SJchtewrYmbUX2X49cipyYd9AmhJIP9uU77sw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1h3dmjyhh90s6ux0s3t0j2tvt5x74kdl33eyk8g","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["aprilladder6u"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuL9jUqom4VOzOdKwXirOKl7O2dls/fY4mK/j3d8o/0p"},"signature":"dWgPSdre4/hALhyNh/tz/pRiCsNlzTjZjLZIZ2YX3IxuGPl2br3JC/CpDu/DXDCCWT3BdnYXQVNGZKd2q3ddnA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1h3dmjyhh90s6ux0s3t0j2tvt5x74kdl33eyk8g","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1990","aprilladder6u","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuL9jUqom4VOzOdKwXirOKl7O2dls/fY4mK/j3d8o/0p"},"signature":"uXbFn5lRC4yRI6a4WL2/9IkegwIPrSW5TYIi0te51RF8iav7VvlGFdhDtT5CztSlHLGXYbl7DqzWdPc5+WYrVg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1h3dmjyhh90s6ux0s3t0j2tvt5x74kdl33eyk8g","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1990","1","1","g1h3dmjyhh90s6ux0s3t0j2tvt5x74kdl33eyk8g"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuL9jUqom4VOzOdKwXirOKl7O2dls/fY4mK/j3d8o/0p"},"signature":"I9/QUtNnc1WK7ifadNCpvNRHVIErDfmuVWXkDn7f6WB8jsoWAiiGG0M2mVcEVl/mEeY3PClL1l+9YxZYVNm4+A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1fuhgxfr9l77fn0kf7s8sjpx946rzhqh3splja8","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ojunAzQhMFRHZl4EKohDPddvxcYoZIuG8OFYtaMCZOMQleOaEx26uThjPZGer8MdcafWA7leTFnyrNsIhDC5+w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fuhgxfr9l77fn0kf7s8sjpx946rzhqh3splja8","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","emergecrazyfn",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiBCnHYBCzSL6DTduKpXVTgkN7uEmXPGgZUPq606e7Nf"},"signature":"zGbVgAdFCCPdryeCVeNYU8PJLPjE6af4DuHm6BY9gD4mBLyLbfJtL08yZhd7IyQu6/ABxDt5csN6LRr14BwrUA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fuhgxfr9l77fn0kf7s8sjpx946rzhqh3splja8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["emergecrazyfn"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiBCnHYBCzSL6DTduKpXVTgkN7uEmXPGgZUPq606e7Nf"},"signature":"qprtW1gpBp6x0uxUUyC96lIYegfNxM/Wtw85z/6EliInVGGOvnutjkj7Dt2WF1rfxCabR8a2X01TZAR18Qec/w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fuhgxfr9l77fn0kf7s8sjpx946rzhqh3splja8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1991","emergecrazyfn","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1gnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreatePost\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreatePost\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/avl\" --pkgdir \"examples/gno.land/p/avl\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100gnot --gas-fee 1gnot --gas-wanted 300000000 --broadcast true --chainid testchain --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiBCnHYBCzSL6DTduKpXVTgkN7uEmXPGgZUPq606e7Nf"},"signature":"06QbmiIyHmEIXHhsRplljtFcjYQxBwCT67oEvlwGOeJZbgqr7TvVcnzrd75MRtTrqQzSP87IwOj+j2eFdBOTSw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fuhgxfr9l77fn0kf7s8sjpx946rzhqh3splja8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1991","1","1","g1fuhgxfr9l77fn0kf7s8sjpx946rzhqh3splja8"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiBCnHYBCzSL6DTduKpXVTgkN7uEmXPGgZUPq606e7Nf"},"signature":"ZAC9KzBM3EkH56jVXlkkoCp9bh4ldrb4dNWFIoVl6skN6zuJAi4WTjXz+mO99UuV+WGDlcS6TBdgr6IXXwMUxA=="}],"memo":""}
