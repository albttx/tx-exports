{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g122n67es9vzs0rmharsggfr4sdkd45aysnuzf7m","amount":"1000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"pc1Lp6WWIzS8vQ6v2GU1MsY2sR41EXR5JXnZJJGaf6owL4U+xDWDCK5yf8QlJSCC1xbSrtw5TdWPMgL+wjvUfA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1kvhxmvusrmfj3c7qj5675c5lsvf6vfnetz82af","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"3WE/SFP68fH7vqXhjPtL3S9vcGRDFA5DXgJ9JwZWzYZH17KSwbASnOjP3wFCr9gZZ7eby4deDi2ez8pcuzgPsQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1pv8a4jpkem62n6x8ml8tsf4gr2mk2lcv3jrh6h","to_address":"g1pv8a4jpkem62n6x8ml8tsf4gr2mk2lcv3jrh6h","amount":"1000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Awvj5StPKEF21j9WPA2PmwPmaqFdQVsimNFMT6Amcugj"},"signature":"SDYBnb9TLEKYHeZMTrbX2twWFbKxjwFj0PoaP/40/wUbHzA437lL/Fq12eKx5MQwpRJxlkQBw0UDp0PbfmuCMw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kvhxmvusrmfj3c7qj5675c5lsvf6vfnetz82af","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","danil",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwIlV8TI742FJLkm5xZVpkb2/RtPETmJP9vmgFuY2Qzs"},"signature":"XEJl7ckohk4Kc62OW2lhsRSeRr/BtoewXRrgDi7fhaFcDEl8KBWYuthvje1rQlQeGolyDlTKQDV2ZYjgAE19eg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kvhxmvusrmfj3c7qj5675c5lsvf6vfnetz82af","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","daniil",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwIlV8TI742FJLkm5xZVpkb2/RtPETmJP9vmgFuY2Qzs"},"signature":"mNn+HdqCVhqdV63ytY/rOzdtu/jGcP/4cMk5tx+9iZlP2yBm765lVuAQ/YPWSaiePK6COVQOaO+j5YM6TYSGmA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kvhxmvusrmfj3c7qj5675c5lsvf6vfnetz82af","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","daniil",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwIlV8TI742FJLkm5xZVpkb2/RtPETmJP9vmgFuY2Qzs"},"signature":"aRLBq2i2cXY2kOiaEcCFbV+sDtxD6SffbL3E+4wxC5IvYsN7fV3Pc8o0fPW/yCEkqaez3RkSJ3zlF+SxSqemng=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kvhxmvusrmfj3c7qj5675c5lsvf6vfnetz82af","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","daniil",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwIlV8TI742FJLkm5xZVpkb2/RtPETmJP9vmgFuY2Qzs"},"signature":"rc5HRbdZy1lNi79XhfMBfiIRD8EKcqnyGKPwKEdJuoNeYHkngYzWCpjR/I64/vVgf22jZ5xis/OqmzOV4KCXWg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kvhxmvusrmfj3c7qj5675c5lsvf6vfnetz82af","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","данила228",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwIlV8TI742FJLkm5xZVpkb2/RtPETmJP9vmgFuY2Qzs"},"signature":"ZqIC+s+FNZrK5kWN8QAsEMGbxmEuJB8/IH/fDld+i2cL8H4pUejyJ/g84YzZsdtwH6Du02rPLsGQ2ODE3iyuJg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1279l46947p3y3ccnt6ls32s36tksj84y4e5v7d","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"cx+71JWSsAGQizEPgy6yMQ9zD7OM4mxoUgaTxu7HxSE9yEFpFm2B8FpgkUwJYjwG0dNFL4AS/xjLZIwTmnrEUQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kvhxmvusrmfj3c7qj5675c5lsvf6vfnetz82af","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","данила228",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwIlV8TI742FJLkm5xZVpkb2/RtPETmJP9vmgFuY2Qzs"},"signature":"MmvFSn3LpAHRZIs4zANHqAWW3KHP0Go3aOkngJNwJJcuVz2AKDdHWnCJjPfL/mbSF1U0g0Kdp+T/FOWY6UWRng=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kvhxmvusrmfj3c7qj5675c5lsvf6vfnetz82af","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","данила228",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwIlV8TI742FJLkm5xZVpkb2/RtPETmJP9vmgFuY2Qzs"},"signature":"+KV5tgvLD6BpxtVUQnKTQ5fPVbRwI3Wx7ns8SchJSNcug7Qi/HIna2Ni0C+BpRT1HGwEl5feak3v51hecs0urg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kvhxmvusrmfj3c7qj5675c5lsvf6vfnetz82af","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","daniila228",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwIlV8TI742FJLkm5xZVpkb2/RtPETmJP9vmgFuY2Qzs"},"signature":"WHl14jA1mzzvh3KnzOoCRnJ5bAVpX+UTbcWQLwR9xKMR2v8NHyu3fBTZyFcheu0KeoejQHFJ8qwBDtmYH02/lQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kvhxmvusrmfj3c7qj5675c5lsvf6vfnetz82af","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","daniila",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwIlV8TI742FJLkm5xZVpkb2/RtPETmJP9vmgFuY2Qzs"},"signature":"M+ko2Q0M5wX7s0T0lXIbmDxMeFr7NDmxEh8OJO6e4ktsdIWDSfXXmgoHztOSY031EXY/JGGZU/gQW1oEba8W7A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qh0ah6kzznnt762dr0zskqvz7k99w5mrdsejs3","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","guburi",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6TbUDhFm6efzKwnwPmPyo2dTXr/Q6YqdCAQskppBtiW"},"signature":"bRaySTxvgaN+3pqae2O+uhNmkeZOoVO+9mLm7cd73dgf9ccDKeTlw6lCK0Vnn4FK/W3kRhZ5QGhSGtHq0cXKDw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1jc65pas64ercrl67dfynzapcdqe46gm3y2cq5y","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"MnTBQyUgljwxOW13fGrdH426U8rxsJI8QpLnP7cIJz8b+yliRfKLywA1M61m4KHRYBPetSSBCA/eoKyWo/amHw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jc65pas64ercrl67dfynzapcdqe46gm3y2cq5y","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","tester gno",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwLRfsyxUNXN1yTwXPFjZA5m9GFM8uyrpVKuBLxv8zkd"},"signature":"HE23tbEw8sC4h3lfunifUYQrBxr5dGb6FSD32Atxik99nRczVm57JdRGqRM/OhCG++tp+PA9XljflK71oMMwZQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1qpfgn2gwx30k975un5x67uyklhcf7h8248605s","to_address":"g1czgcgj953gn9csw5xzkh7796gs0ntcugfvfnel","amount":"1000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aj/PFOvI7nLTPlUpmfAqUrVTiwXnz9QFiW2cVHHrIhR+"},"signature":"f3mdcYWxrRz2Pdp7/6LN/pJ38D4ccZa4kI1E3O5hw3ZgPdS0/pimhXtM16qJmfWk4AikhHvBbJFK4dag0HOOYA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g100g62jsndc989t83u3r9w4p9ucy9kps63d8khn","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"eCETf6AHlh4XVm1x4i1fG5A8pClYv9BI5uIrux+aq01f0miTB3TDEkm2NF4ZnB6dwzlXbcr5DxxOdPvWDxBydA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kvhxmvusrmfj3c7qj5675c5lsvf6vfnetz82af","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","daniila",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwIlV8TI742FJLkm5xZVpkb2/RtPETmJP9vmgFuY2Qzs"},"signature":"fMx89CaEkFjHobbXbgOsBhDj8Ckquj6+xjpnrENAGUIa6fku1gpZHDrXtuMmrbeb25KIKr/uyA0xYo9iFwU61Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1sm0ncqzkqamxsgzxd85a6wwpr56lmg04ee8q5z","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"mg3KeRiJ/irCOXBbqQjlizBd/d8yJEeOQv4VbhSL05lJnvBrfixQLjiPO+nHgPzyugun851YPxl+eTAM09Yleg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1gjnhj9tv88fu5jaqlmz0tdx7lepy4e6f3fx6ec","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"haAPno+qKCDL6c3loEa4U/UTvd9CmqiLYVTdZ60+w2EK+kgtnIbs4vDbshJvLeMFM1l1XUOVMeQxQ66hKfAC+Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gjnhj9tv88fu5jaqlmz0tdx7lepy4e6f3fx6ec","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","daniilakey2",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4TFbR4dG8gFLq3kICpeJM/ZVgGuOK07PzVUxtqn6bIV"},"signature":"FvA9d5jHs1HtZBpqNh43eM6CRi28WXLs1b2X+5CYlf0QhsJ3VRbvx/9U0OwfYjZy7eUBrMPIILfTl+a2Db2Ikg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gjnhj9tv88fu5jaqlmz0tdx7lepy4e6f3fx6ec","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["daniilakey2"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4TFbR4dG8gFLq3kICpeJM/ZVgGuOK07PzVUxtqn6bIV"},"signature":"vwRKKYz7/sRNKppNLGovYJ7TiNhUOIrloAVylIHNroZU/cuop8PAg4GHz5NU18/BGg6VKC/N/OZVghBFEH3OlQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gjnhj9tv88fu5jaqlmz0tdx7lepy4e6f3fx6ec","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1259","GNOT","The primary token of Gnoland is the $GNOT (Gno token), often used with the ugnot unit on-chain. The token first use case will be to pay the transaction fees and reward validators."]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4TFbR4dG8gFLq3kICpeJM/ZVgGuOK07PzVUxtqn6bIV"},"signature":"rdaamF3UALADpKQYAllFUzC4jXvAYSdNkjAGlVHZXjkEzHYgGOEzv2JvfLyzhSNLVLcyHld8/nTHUEanm431gw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Faucet","args":["g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5"]}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"v19St1tz7inF/MMIRH815utqavLhExa2Ag6HxzBzv88cG/GZC5QTLC0PbMCIupbcDeGpEs/ufPiIYYB3VGBz9g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Faucet","args":null}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"Q9wXsNrsTAnrwpXbynuNQ2mx5OW6vV4WHvw9sxtz/hl0Z0gxUK7JUnecAKYs7r2u8drlmfEz22n9dAEFTIJ28g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","send":"","pkg_path":"gno.land/r/demo/foo20","func":"BalanceOf","args":["g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae"]}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"9hk/tXawVLqEhH9j9dwy6Vn87bwSO+LMzXeYRmgWe3Rt2Dl43XH9PXP7zEnHXDh97FrE5s28DtuKRqPgc0R1wg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","111"]}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"u1AX/ftaEuVDyEj6f34tzblkLAi8Sm1LFdg+jcm+SntMNF0GjQ2oAul4zeJnwUQru8KhMejOzDtLOyuLPT0u+A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qpfgn2gwx30k975un5x67uyklhcf7h8248605s","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1","2","2","nice to meet you"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aj/PFOvI7nLTPlUpmfAqUrVTiwXnz9QFiW2cVHHrIhR+"},"signature":"r8xd4bCP4u77PaC35DW4Svbr+7ioBFOjLgMg4F8M8jBmmFOODOaPDr5+LgLyFT0NUlUqngz8W5V6AUfZBX6bEA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"2000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"gyshUHeL1FXDjrxxcqjan4HSGr0p66zceziC5zGs0zgH9Rmwe5IHzX0YeiLgG/IbPrBqz0I3Xy3Rqq1zdMh5+A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","package":{"Name":"inject_test4","Path":"gno.land/r/deme/inject_test4","Files":[{"Name":"inject_test.gno","Body":"package main\n\nimport (\n\t\"std\"\n)\n\nfunc main() {\n\tprintln(\"done\")\n}"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"Nnr9g5i/ir6C8foBqjw+JFD4PnsMbiIwJ3WawvP23KhmxaI/LIn6UXzm0pe9wr1yn9ZEhFMktLtD4Hl5SSTpSA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"CHW/mII5FeF/taR8haPVskb0uzbwRx0f4P830aRWS5JdS+uTTIw5rzL40YfWfv3LxM8rUTlmOMzILbBPVKKPEA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","1"]}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"AmWfhcPx0zc+aLJuBmc5OPc6a20iE4fKnvWa2+A6uRoY+BCY+CaoSzMWnQHfWbnR7XhA3Z04w9GtY9DU1cgIhw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","2"]}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"dPMsoo/RTioU+LLo+gsn+NVrNK++s3aFKzfSoNqpq4w3fwf4by3vBubueiO6pgyz0ZuE928FfZx9WHCe2YWYSg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","2"]}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"DN3codg7tiFWTetMi7onE94y7hx9Gz7cYS4vaq3tMO9TJTCu1WDkUgdXHc0HfvDjx0RDIqHVDU7nsZVt/MjoNg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g122n67es9vzs0rmharsggfr4sdkd45aysnuzf7m","2"]}],"fee":{"gas_wanted":"100000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"Q3z0ZhFdxht+kvpQ6iYNaAwA7M8g5zEaemiA+GZ7xSc3sSPUlGfBI3D9YVQ0zw8yrKWvchV7KsYstau/3RM1Iw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g122n67es9vzs0rmharsggfr4sdkd45aysnuzf7m","1"]}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"AdxTJ6Zj6PK1kdXcqhgY9ZNROXyyTwHxXFdfq5yvKwZLUCka4QIrH6+XPGg+1VgIxk1Z02F2N988bifkYRipjg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g122n67es9vzs0rmharsggfr4sdkd45aysnuzf7m","333"]}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"2vtYgZl/ZQPuKeZj+lLvjHFS66vK3MyhxcfeZnYc4IxTL732CEhl47Kr0i2aMJ21kZbNuQr0M9ePGyoEt+dRFg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1qvytrvt4fsukde58atgmcmv8qrns5p2a8fttdt","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"rfdPbYHJNyPoJ1Pp+m7Z/AEInq5TEoXpZZT8Pa45JZwafa2j2G1eI2WdAbcKGFOgzsrXBlLsDNahEysZSt2eJg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","package":{"Name":"src","Path":"gno.land/p/demo/acl_src","Files":[{"Name":"src.gno","Body":"package src\n\n\nvar BigVar int = 1\nvar smallVar int = 9\n"},{"Name":"src_test.gno","Body":"package src"}]},"deposit":""}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"9eZb10MIEbhCgL+7mYell5/lXGd2YEmzi73VcGb/a35uEvO4fviJsc1Or9pHHMPZKOtn/Zexl8oJ0+C9OTNGrA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","package":{"Name":"dst","Path":"gno.land/p/demo/acl_dst","Files":[{"Name":"dst.gno","Body":"package dst\n\n\nimport (\n\tsrc \"gno.land/p/demo/acl_src\"\n)\n\n\nfunc EditSrcBigVal() {\n\tprintln(\"old__src.BigVar:\", src.BigVar)\n\n\tsrc.BigVar += 111\n\tprintln(\"new__src.BigVar #1:\", src.BigVar)\n\n\tsrc.BigVar += 222\n\tprintln(\"new__src.BigVar #2:\", src.BigVar)\n}"},{"Name":"dst_test.gno","Body":"package dst\n\nimport (\n\t\"testing\"\n)\n\n\nfunc TestEditSrcBigVal(t *testing.T) {\n\tEditSrcBigVal()\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"hAo1jDFpmwl0Qlfkyud3N3uVHz96kD/zpNHAzwBNlcFJ3hIO5I2tg0hD9GvXT5ClvSF/4WRXO066RYrCc3uRmg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/p/demo/acl_dst","func":"EditSrcBigVal","args":null}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"1GDD/m9TrsNnTg/Mf1mUIDTVivf1bKFuQmlk+xc/Qwg1jD+A9yuJZB5of6GNRffRDf1/yha5gRC9Z+HYBNA8BA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1hm7f7sjmlmzqzavhcaqmxzh4nah0m4kchc2ue3","to_address":"g1s00kdfz98mjwztfwquk06sag8jdpfslyv47efj","amount":"67000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9gNz/EigAmuvt/50S9KqTWyZKg1OIoZOnEg65xOsqkV"},"signature":"TzvkRpgKlnaVEmSzq6/2nGUv0E7UZ3hOuB/jz684B3IU5hC58Q6vSTTHeyZ1eNFTqNkzBa/yNQIxLGbfH6T9Eg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"990000464ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"UUpEQPE+26o7oSZW6x+izw9iER24eLT4xCeadCmZ6kQBNbw8jLlAKIAcQD7ER8KcaO8WKbJ9mfz0r6hujyWuNQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1t4du52tfdfcnsrhlkfxhulr3r2a8a965zs07tx","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoWl1n0gPDWHmsIdghOux9H5dKTvm5LHh/7c9EXMTS0y"},"signature":"cDenEuMVwjRyGXWo9sb9bHoqX2WgrnsrSxhANvpFbegrnxEwyceJRri/g5P5hE+JUXsKCvfiQUEFP/lP9fNO+g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g18fh8kd3nq4j335dshdv9m20vugptnsun8cn02v","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"MVicLDKS+euSEOKvZBozcrhyZ3TOYVKyp65cR4I3biFQFufl12zeoZoYryLiAzF4bE72XPcGVRV9KjOWk10OQg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g18fh8kd3nq4j335dshdv9m20vugptnsun8cn02v","to_address":"g1ghjt2zplcg67372s0y3nsn3ww9034g6h0tj7er","amount":"100000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApSXmxFF9hhXqeuqfS3u1tkrBqUmtT4iWSrVyAfa9bJS"},"signature":"RypIoj5tj0Dc/rogRbfM598MqBv3dq4u0FSBGkH0sNRVMFbtjedX/dmZ/+LF01NedRClBE5uhZHCUvZ471l9Xw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1h7kpavpayq6sm5s4a5y90kfsvj6ytmtkz2k26j","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"4GQsWnCunZHxK8g58i5OfMx38C9FgyB4Gps4K0/xYrE5rv98nSdSLCpj6fmyLLM0v27xXwKky9cEn9VnDnK1Zg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"gQcSSieP8ZLIEinMWR3nGp6Qtp88IZOzPZ5Tga6aZ+sw0rPREMGjxSzuf00Lz90B607ZBGZYT/URFHckHyfgJQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"86xJuDndt8JTR9499NQUu7eNWr3Q1jyWcnYq04ABU5MtFICwzQseGyycffznF16fI330tMoWJJ2dZQ+xMGc0Ng=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"pDReJAuXeWR/7nhF+m59Pri5j0TVxYBMvsPQktF7b8gRh4IIQlYIbskFknZZJWWB+uIB+/MuAkz/lsu5q8s2hA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"990000462ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"8rLUiFY21zLKC2oK7Nt4XWPqPh/mq8A5mKUw2V0ZptljTD9i5qhLeC6vSQO369VIUf2WzL0/CAKFuAcEbI8s9g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"u4664X8foNT8Bi5X5E1LetzROWlpKv4+YNMVtLvwWiJoWCLTKSlHGag1SdKaSjoTWYHKUQIjO6URBjCBSnt+DQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1maq7y4t97h82v0062rxjq2akqxsm3kck5paswg","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"iVDSZ8+IRUiAIaS++R8dhG71vmrj+AKFFyBf0AiG4+QYchw1moLJSJ0RWunnCdBlLzScxQ5Eyj0hNjgLlQkkjQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","999999"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"sa0r9MRnmdfjN+MvuUodrdLCCm85B5j5AuuGAXXKZ9lSi7OWXVg1XX9Ss+JGyPNc6Otmre1AT5p7wciBpNMn6Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1maq7y4t97h82v0062rxjq2akqxsm3kck5paswg","0.1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"DeB6lniBQOfVZJv6mPP7zyp0jmUzObX3kaTN5sX8br4iHgLNM0k0HJm5z93ck5WO34GnWwWPDEg45BMta2gitw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1maq7y4t97h82v0062rxjq2akqxsm3kck5paswg","0.1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"npiH/tlbbCMaIeLogptUwUJdRIE7syvCqQC3vrzjKx8Txi61xu4Jnr3emh8jBYVI8fQxtxYgFfzCT2Lf/O+NOg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","0.1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"8x0yZL/fCcchnKTfQAHjpe+GqRj3RpH68uAhgyRxDFlpRmMbfw2INCuIWPIr3RbB7SFl9aJJ4ui/s1cc5itkyw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"H5UcPHgTkq0pWmLOgJSN2Txw3x4/eVdiFklK7yNoMKstFva9V8ugUgqmIW/HFik4avKOlUbJVqNest89OOZZWA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"rRrHriVOQ2RgS+L9Vp+bnfcjTX2Zi/BuWpB0Uz799mgO3VNwF5+xzb88juhqAah52ufGc9cYcV8WNC7TJCppww=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","55555"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"rmucYxj28Cw3VE3dN0EaN1AqLVFHpz+TvVUbwO6xFO57bXrQjANJUE/LBs3d2yns8f8aNXD0rSsdWYPXm/Bziw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"251127008ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"8zd9EPFJyR3qV9zwzHz6Ff6xv5Ss3Z3vt9hvBrmD+Zh8ymJQfymltrUjK2YmacsCTZs4ZE2lKo/mPyZWW2Is1g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"Name":"hello","Path":"gno.land/p/std_test1","Files":[{"Name":"hello.gno","Body":"package hello\n\n\nimport \"std\"\n\nvar (\n\thash_str string = \"hello\"\n)\n\nfunc Hello() (string, bigint) {\n\t// println(\"std.AssertOriginCall()\", std.AssertOriginCall())\n\tprintln(\"std.IsOriginCall()\", std.IsOriginCall())\n\tprintln(\"std.Hash([]byte(hash_str))\", std.Hash([]byte(hash_str)))\n\tprintln(\"std.CurrentRealmPath()\", std.CurrentRealmPath())\n\tprintln(\"std.GetChainID()\", std.GetChainID())\n\tprintln(\"std.GetHeight()\", std.GetHeight())\n\tprintln(\"std.GetOrigSend()\", std.GetOrigSend())\n\tprintln(\"std.GetOrigCaller()\", std.GetOrigCaller())\n\tprintln(\"std.GetOrigPkgAddr()\", std.GetOrigPkgAddr())\n\t// println(\"std.GetCallerAt(0)\", std.GetCallerAt(0))\n\tprintln(\"std.GetCallerAt(1)\", std.GetCallerAt(1))\n\tprintln(\"std.GetCallerAt(2)\", std.GetCallerAt(2))\n\t// println(\"std.GetCallerAt(3)\", std.GetCallerAt(3))\n\tprintln(\"std.GetBanker(0)\", std.GetBanker(0))\n\tprintln(\"std.GetBanker(1)\", std.GetBanker(1))\n\tprintln(\"std.GetBanker(2)\", std.GetBanker(2))\n\tprintln(\"std.GetBanker(3)\", std.GetBanker(3))\n\t// println(\"std.GetBanker(4)\", std.GetBanker(4))\n\tprintln(\"std.GetTimestamp()\", std.GetTimestamp())\n\t// println(\"std.FormatTimestamp(1, \\\"\\\\%s\\\")\", std.FormatTimestamp(123456789, \"%m%h%s\"))\n\t// println(\"std.EncodeBech32('g1', '[]byte(12345678901234567890)' )\")\n\t\n\tprintln(\"HELLLLLO\")\n\n\treturn \"res_str\", bigint(123)\n}\n\n\n/*\n\nstd.IsOriginCall() true\nstd.Hash([]byte(hash_str)) array[0x91320DE1A87805C93C8FF5BE268A86406DD851AA]\nstd.CurrentRealmPath()\nstd.GetChainID() dev\nstd.GetHeight() 123\nstd.GetOrigSend()\nstd.GetOrigCaller() g1wymu47drhr0kuq2098m792lytgtj2nyx77yrsm\nstd.GetOrigPkgAddr() g17rgsdnfxzza0sdfsdma37sdwxagsz378833ca4\nstd.GetCallerAt(1) g18p6su7e40fpyudgcgfx65gch6trdzt8nyzetea\nstd.GetCallerAt(2) g18p6su7e40fpyudgcgfx65gch6trdzt8nyzetea\nstd.GetCallerAt(3) g199ugqdxfx3dut209p0q6f078fw96dwhs9cddff\nstd.GetBanker(0) struct{(gonative{{0x14000314388}} gonative{stdlibs.ReadonlyBanker})}\nstd.GetBanker(1) struct{(gonative{{0x14000314388 g17rgsdnfxzza0sdfsdma37sdwxagsz378833ca4 [] 0x14000128b58}} gonative{stdlibs.OrigSendBanker})}\nstd.GetBanker(2) struct{(gonative{{0x14000314388 g17rgsdnfxzza0sdfsdma37sdwxagsz378833ca4}} gonative{stdlibs.RealmSendBanker})}\nstd.GetBanker(3) struct{(gonative{\u0026{map[g17rgsdnfxzza0sdfsdma37sdwxagsz378833ca4:[{ugnot 200000000}]]}} gonative{*tests.testBanker})}\nstd.GetTimestamp() 1234567890\nHELLLLLO\n\n*/"},{"Name":"hello_test.gno","Body":"package hello\n\nimport (\n\t\"std\"\n\t\"testing\"\n)\n\nfunc TestHello(t *testing.T) {\n\tHello()\n}"}]},"deposit":""}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"fUdMiCVhwH0Q6JY2s4JoNqzm7Ot7P09suRAAvL/YSeEaSMUsVUs8LG3zs4C8cGzlN5gxpf5HtsNn2KFmATJ/Gg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1gnot"}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"bnhjzs5SP8cbVdoH8+g2hPGNsZYd7CTXcINHRXoBzUNpqja9CpLjzRNZ9XLedaSEbWUy55uRCjG0eBaWUW7fSw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"1ugnot"}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"xNZ3Jc9Fft2rqoN5Rk7u8uBUFA82WKXrAcuwxabdbLVqboJCRwRGp1QHIpD7hU9J4K4O3w4cOKFE23a/IcfCog=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"djglze2WkCWIEwVqia2+yuAA1KZNHwBdgR+k8ob5ZbkGGsl8jB9hUGrUpiZOcBWUsZgrMaRDlVcekwklnZLDCQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"2000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"RPIq6OW5QeAgNcwG6RZzgKMiMResObfVBViiHBs7XxpvjYcRv90h20M9qRphPlTLm77uJs6E0GGwskda721VAg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1fnakf9vrd6uqn8qdmp88yam4p0ngy572answ9f","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"2500000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3cWVULHSHC1mwK8o1vfJHKfNMvLEvKU/sHPQoFWRoey"},"signature":"b8hPZT4ac7ETIcxDl6yTe+r4Rhk6XRm46QlCv0VmQ+BrNpKCfOVRmNlfotm9nnTsQrpuPBh44SjQSrqJFPCgxQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1wehlwqnsjhlufmztnuy6cn2f9kw7dk6g8xh0uh","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"pirOKsUB6LP9De0BMSNTeKLQuCCV2gDjZn3AH+3HJC4Dqsz6bTJD7KMcCBTLwFTvdztMbmQLKIkEyrRYBV5MHQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1u0as80r52axwt36frcqwaqtdlw07a729mu83f2","12"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"UtCQfBfTXzJhzb13j7CHTMc9dioOaIoMlZ9a8pDraAxJoWDFrd/ELqcXL+4FVkNsez+w7ZI7BfxLqDhOeQnh8g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1u0as80r52axwt36frcqwaqtdlw07a729mu83f2","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"n3DmeUptj6ceCjiEq9z7w+hz/ama1SrH0E+ibt6EolUCVt0mVe099wB6ssCx5VCZDb2OPIwKwGvmfgIf1uj+YA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"14230571ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"mHnBN7JxVS2ZsQcuryIKnwAHnm1C0NPAaU3ZUvjU228Mh0fYAd16BalCtuoTWtoy8xZBStFPKmxESQahTKrogA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","142.025081"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"qFYS2+bMr2TLcEPXG9QNBR/rJ8dtGrVSq96L129M4ORw/3rnKsEJgyKttEqL7lZIurkFbpuVDsYc0k2GIyfHWA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"1021017005ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"p5vxaS4xIbitGaKHqtbuXpJfRfwaW84gTUkTcSN6FoNNzG8nHt45r20quRnTjRXeXEMMUYWWRdVo7RXwmXAI8w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","2"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"P4GRjY+Rq4AgtKrZa+vgJ3QkqMapRxdWf2h1XiR8lwMvzT/V2xm77hTMS21+cXbyPPNA1fvwbtv8hZ+KKzcwHA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","242424"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"kng1F9xQR80zsute0GByCNNI2kD62fbKdVWMDwQudA4BzVuAdPFTFoOpGmnST6L7Yu6IeuJj+rF/7fs1z5U7yg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"993000459ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"2jXjyXxBOK442UvTRq0bFzHA4lbQoPFdxkdr0PaMzItCWVFkOCq/fETU9f/ZCkKJ5Y2ZyCMwWDT6+90usEeH9A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"lRrZGnAxmNyhiCWJ2WrKdJv8oKtTxB6JDrX8gokcpXIrd4Ob/oONUfW+q7aQc0lvgQ4H/ExUgJcHGg9yek4Y7A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"144000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"4urryKeNLP2MayFpKlytczGoiP0zrwOaaNYcMcfypmpoo8EllvEmkVfKtpyPEOCUamOKHAhmXmzhjUhjQK9Rmw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"1111111001ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"r4LCrcOH30TF5U40VJUd5b6AKkWcQHPARJNMtQ9Km3woPaHf4fxLK3oG3ZfpW8d71nArjN0/zpc2DT+kaNQszg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g122n67es9vzs0rmharsggfr4sdkd45aysnuzf7m","122"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"8OHWSGUKczJdIf6nLh3A9NOf0epeJJ4R7vTid7dwED4LlHO18mi6z7Ii5uwkXMuZOjBxOkTsoW+8pI//LxgoMA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g122n67es9vzs0rmharsggfr4sdkd45aysnuzf7m","amount":"10000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"yvyeIKhTxmPvhCIdBysQlbDhdXzE3BPYcgmiNvkbu20l4teThvxXP0trBpGiMyaJ1GSZ+3heW5h7mOiGg5vsmg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"MXhNcJz08oXJUrba6mY15yFiqK0d2eBpilxj5vngoT0dwEGmGJyRkB1kBHYwT/UQar77OusCkLWqtSAHXKISEQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"14000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"RY/HyvcxW2agxHmPd6pGjr5CM0Tj1F6GVkTFKJZW/PkrJjGPeeXMo/ttZfOPtmk7S8xfcPcJu8UTuKiWPMNyKA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1t4du52tfdfcnsrhlkfxhulr3r2a8a965zs07tx","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoWl1n0gPDWHmsIdghOux9H5dKTvm5LHh/7c9EXMTS0y"},"signature":"TrL7DGHJcjKYRzO/OI4YsDXnS9r38naHAg9Avy9Q1ZpopEGcnAJJwrblz68qEQbffmSnPla1LU16oV9esu9wFw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1n7eukpp2nshzgdtcs452l5c4as749c8cappe8u","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"tBjXWSCxCje7o3mzxbdmAVIBxwCBGp4Bdknl+P7ev4ce3ds8EYXxz3gAcJo/t0SgXTL/AX5mFB1X161EGXcz6g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1n7eukpp2nshzgdtcs452l5c4as749c8cappe8u","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","preadamic",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6QNQ9iFLoLRR5kYgW0+w55O69Pz8HA6UTbrKpbzjH1v"},"signature":"r8S3ahdSjfXXQ+btHpHsqYobcqZMTc5O8LkKRNipkhInB0Ek6O9aBjb5cnjnul9OtOCho9+Nzugla3sB0V40Tg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1n7eukpp2nshzgdtcs452l5c4as749c8cappe8u","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["preadamic"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6QNQ9iFLoLRR5kYgW0+w55O69Pz8HA6UTbrKpbzjH1v"},"signature":"Jq0s1N5PW6EFV5HEx+PlM4ws8RtlzEdo3yBOt9HtVdF6TXrcuqRrESU7uMbqq28BwxKZoKkDYIaP8t7zDyNxPA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1n7eukpp2nshzgdtcs452l5c4as749c8cappe8u","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1260","The evolution of blockchain technology","https://medium.com/@alex.buushko/the-evolution-of-blockchain-technology-has-led-to-significant-improvements-in-both-user-experience-16ef826ddc9c?postPublishedType=initial "]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6QNQ9iFLoLRR5kYgW0+w55O69Pz8HA6UTbrKpbzjH1v"},"signature":"KlPqdHem8giedSIgMkfUbZJLyIlhA/5G3WfZlDY4C+9SDWDCYjNmG/O+CD3e/ZmdEnacfEayq5y6Sp4gzj7hsw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1k2g84d9wj0myvzs3ue0j2heecrkaq3kwpen06s","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"NqO/tdoK9atnYqHMssHikbHyaEkUHk6ED2qouq/FVK4q2D06yX/r+AJ1Bw1MHyMz1C5fRfGgOe4PXoSYQ4ECsg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1k2g84d9wj0myvzs3ue0j2heecrkaq3kwpen06s","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","myrmicine",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/XRbOUB96yVAYL7nwPs310UzgMn58ZxwCnzkFq4eTAF"},"signature":"phMa3BJzSrX/eaw9FY2NmK94gYTuAfIFGmLeiTUw8DRXQJ+ZBWaWeLPmAATLnaz/laD4S7uUyD/HpS8JayhzkA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1k2g84d9wj0myvzs3ue0j2heecrkaq3kwpen06s","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["myrmicine"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/XRbOUB96yVAYL7nwPs310UzgMn58ZxwCnzkFq4eTAF"},"signature":"VStrsHlSXWpQnl7+kt0ylB1iLJrq4AGUzISBQyRIv0kzd4fiDGkyUxB1DBJKHjiCROM84dfPPR8d/xWnXLKSWg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1k2g84d9wj0myvzs3ue0j2heecrkaq3kwpen06s","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1261","Smart contract platforms function","https://medium.com/@arprutenko/smart-contract-platforms-function-as-decentralized-virtual-machines-operated-by-untrusted-nodes-5c1abcf2afcc "]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/XRbOUB96yVAYL7nwPs310UzgMn58ZxwCnzkFq4eTAF"},"signature":"GWjoMw121PY+UqwNqnhSZLqi2ZSgg6WVsMXTd62Fu6QnKEHmXfrAf8oAxufJPFKoIXgvxnE7uaY9yzZoCETdIw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1sg2rvnx0gxfcgg9txe4vz2ufzy00ujtdzp59wc","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"yfExMJjmjxFoxTjA4c47s9KCh82c6FeowY5FUnWmtlgVVsX8cyYtGZh3EdrtTieZVviV0YMuiu7N5s0RvKcYSA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1sg2rvnx0gxfcgg9txe4vz2ufzy00ujtdzp59wc","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","madescent",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Asb6Do37lmuX4OEBAb/mAQWgv4nU/vBsMPVHu8Ys9pm/"},"signature":"HggYoPxbxy1QFXymiXr/naWB59RMdFKFEBuKXJUWs5M2zLioQEDezBkniRrNeC6EPOuv+bbTI60Vtm1sfbWwWw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1sg2rvnx0gxfcgg9txe4vz2ufzy00ujtdzp59wc","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["madescent"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Asb6Do37lmuX4OEBAb/mAQWgv4nU/vBsMPVHu8Ys9pm/"},"signature":"rFbaAGVK5cjvMOHUw72wR6Q9+RvdpczLb0dJk4lsYXko3OCX2j6kegZGtbCME93kTwaeT2LTjt10Eoe9QuR4NA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1sg2rvnx0gxfcgg9txe4vz2ufzy00ujtdzp59wc","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1262","Most blockchains currently available","https://medium.com/@sashkafalion/most-blockchains-currently-available-operate-on-a-single-thread-which-can-cause-issues-with-4725420189be?postPublishedType=initial"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Asb6Do37lmuX4OEBAb/mAQWgv4nU/vBsMPVHu8Ys9pm/"},"signature":"Yy4zQbMZBCpX25OMr9VsTwSNCmZmscsgqGlNT75EGDEVeiRdzkuxGq4Gq/5SLfVxJimw2jV2yO9NfgxGvkRsSQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"45000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"9zT6TCr7pUxOFZkvTxSURrULJ76mqzu2L9cmCcFm7e9xArx0vylRtPXRhQrwJj8iA4O2ce2PIVgX1PBZmT4f9w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g19terucph2thrms24gaaz4e7cjrm9n9kl9yfu5j","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"js7XTi4ECiOwJ5r023ltYVeeifJ+tVxfCzFYJsu+0Yp1rtANRomRfarlzpkaUuyO/bImQgQPjXkIBSeen4WSxw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19terucph2thrms24gaaz4e7cjrm9n9kl9yfu5j","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","synaesthesia",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnFN2kgNVxPpBLiNRChxRXsGnIrs44VFVt60/iR+d4NJ"},"signature":"5tlBhoLMu77QzTyS9q9wtIZI6P8Na7ekq1RnpesgbwUbRjV2ANJHLZslUVruvEpVdhoSbSi8mrsnQnLsCsUSMg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19terucph2thrms24gaaz4e7cjrm9n9kl9yfu5j","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["synaesthesia"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnFN2kgNVxPpBLiNRChxRXsGnIrs44VFVt60/iR+d4NJ"},"signature":"M+LzEp6KP7SIULZnygMUg0QC6XBSAVa5GQAmn2D0oiNxxP4l1lb/paKmtFpdI908+WGAqLqqDhKLscJb5kjoIA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1paqd687fgs365pkx5fnaus90zgclgfzejj4jlh","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"amhXmvskyVEJb04EUTkw+oXxSMMudGi+i+gwmbxyVql7pRfeoKDcbLFngQKrfUtjfHWNEZDeZotTtMYYl0e8Zg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1paqd687fgs365pkx5fnaus90zgclgfzejj4jlh","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","amphibolic",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Apyjju3yVoE6VVn+FeuqPrrtdqNRDvP9iPtka3z8/G1U"},"signature":"6JW77IAuopWc7m5pPyADdmaijqHnJM+oM5feBuBUP+dR/m48gQPJ5O0kzTTMYXMhGm0OpaxkOtckmqmMWn/poQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1paqd687fgs365pkx5fnaus90zgclgfzejj4jlh","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["amphibolic"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Apyjju3yVoE6VVn+FeuqPrrtdqNRDvP9iPtka3z8/G1U"},"signature":"CDWPx43gf9qI2QNpik7ANbYZ910+aqX7EMX8dww21gR6PlwCKcs1MqFhx89y2j6YvBFEkiDBNdsyimvgF/GTaw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1qrwpv3p0rxpc02n6kt9mwjr77z0n9ye2dh7gmp","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"CqoqmvuRXSCMhFyEtLXDjP0hEecY53weHsjGb3GXBUJnru+cF2HmMfYh5RsJbuQfQsrQYGwzTVuKiST/DFXQUg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qrwpv3p0rxpc02n6kt9mwjr77z0n9ye2dh7gmp","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","photopia",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AknRF2cbFn2v31fWU255+I33s8Cvk/gSTRuwEi1wUab2"},"signature":"ApjkL24Q72d+4hku3jK+dY3XgNBdL0p4fqi4VkOGq+wesk6BkpOuOuuezFb8Kb540bmSDM4rmLaP6oK5g7f5zA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qrwpv3p0rxpc02n6kt9mwjr77z0n9ye2dh7gmp","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["photopia"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AknRF2cbFn2v31fWU255+I33s8Cvk/gSTRuwEi1wUab2"},"signature":"RrGro6ti/5jc6J+S1CLfCzVdwQYe9Ws85iBmgkL6xu4X2rskAX4eR7fumM6VWowDbF6I0IKX5nPm+4nLbSghqA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1ez74qp42mmrz3ujkdfav6p04jxd08hvuk46pdw","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"VZfKyjb0BkN/yn9GhmvAcJpc70ddETdNohMwxWlZS/Q143XdtIGNd9fXC86BnWs2X+ZDCYkTe5aolXWYw3qIOA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ez74qp42mmrz3ujkdfav6p04jxd08hvuk46pdw","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","sacculiform",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AntEvXnIaHW3JClWA5mx8YMWQaaQIPlV2MoQxfmb5UoI"},"signature":"7x/d5YjG2KYKXlsmlJxYi8zOXTMAsK9i1l/goRP/h5o9TozxPQyaAbixYN0vO6YQS3sd7J5L/wDES5gpmSO74A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ez74qp42mmrz3ujkdfav6p04jxd08hvuk46pdw","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["sacculiform"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AntEvXnIaHW3JClWA5mx8YMWQaaQIPlV2MoQxfmb5UoI"},"signature":"f9fvHAMKrieWQi8H7vsh2bylqu92PGV50ob3yWj1uyoaRAptJpdj138fm4LZqufImiZyXeZ+9vb3b75l06JR5A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1gmxxylnmm6r36mykag5mnexqjyrqg4pnfr6qul","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"GjqVOe5N2ElAlpl344Nvc8s+10Vqannuve8ylPNNRLV+HF0vJRsD9FdpyhNxbT8D4uKkZNX6Ke3xrrLS1pPjLA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gmxxylnmm6r36mykag5mnexqjyrqg4pnfr6qul","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","polemoscope",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3WW225KSRjhDw/EFLviwUxinA8RSQnXxt4zvvhkzIrX"},"signature":"wz4mqPgvElGtz2lnGdj8JO4zUjDAOMhStKWUAVPdKcJSLFNTcBEPbxhmI7JJKwpPpV7DQ+aP8ir0YPgq1h9iRA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gmxxylnmm6r36mykag5mnexqjyrqg4pnfr6qul","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["polemoscope"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3WW225KSRjhDw/EFLviwUxinA8RSQnXxt4zvvhkzIrX"},"signature":"cpFx7Fv8hKLiqLuGFP75m1+ED9TAkfH2lUuuYO/nJdEKWAV5VmANynV3ZD9wMnq/59jATCqRIPb3l/Tmnb0QNg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1dm4r0hh7j363guas3eehq02t5fh2f32d9h5nrt","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"5LCtXQ8385gJAKZc/0u/8HHUXrqzB3KOuQWKoDyJPiYmeN2b1Za6al/tRRMIgYfFN0Mp6o7JwSMrKbmH65zNrA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dm4r0hh7j363guas3eehq02t5fh2f32d9h5nrt","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","mousseline",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4T4TxRrNdRSg8rezPXImKTrbPF/ZiD91DGOrmAqmnPa"},"signature":"+hFnodFWzNE30n1KAZ8aN630Flgx9S9lwZ3raSKYZks8JKnyu5LxBtej3gubIX80wAdz36TNOJ9fKPi4Tg5u3Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dm4r0hh7j363guas3eehq02t5fh2f32d9h5nrt","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["mousseline"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4T4TxRrNdRSg8rezPXImKTrbPF/ZiD91DGOrmAqmnPa"},"signature":"pJMYaDVkvbV0Izzt87J/OwFxgCHWiufOCxxQ/YrBeqhK6Cj/BKrR/rXHSSqtCfIpYcklhc/Bgg6Ohhp4AHsh6Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g12mwajrqmkxr6z07r8l8wkmmxlpsrsqhrheh53n","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"fS9n2pm6sSlmexvaVXLtyHSV7J20eja/jpdWgvYUGYYgdVLu4Pycb0JciP0YhhMNrdQlpC97qrk5vMLaVNwY8Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12mwajrqmkxr6z07r8l8wkmmxlpsrsqhrheh53n","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","babirusa",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwDwqQeRjs83LIG++ttY8hiagQ0UURYknwZJ66issUkJ"},"signature":"O/YH4EfjSnDIi4NGDSNO13UtxCWW7betv5+Wk6elhQQscYnhDBGwzDugDWWBijU3XZSteHa2WQYMCETOfWbXGg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12mwajrqmkxr6z07r8l8wkmmxlpsrsqhrheh53n","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["babirusa"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwDwqQeRjs83LIG++ttY8hiagQ0UURYknwZJ66issUkJ"},"signature":"zyMEVzYhk/M5Dw1wdVzJwDwHHgWEEwbPoQ+WpoHX+Dp16ef6wM2vwnHFVvToBHftMFW29EFWBYSjDxHMlqh2Sw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g16wemwpekhn8e6467t0dynu4dcd2dsfhwarz9l8","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"YKJuS5oGlKFNclTC4dCCXNVTnYD3lDReRNy64XU3WqI2NY/PRSyl/YooDLeMfvmvHpdAOrKtAP1xMH7RaRhI3w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16wemwpekhn8e6467t0dynu4dcd2dsfhwarz9l8","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","parvanimity",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArXh8k4mTmeidT/XF6iNDJvIYElvrCXUaBO3hhPlk6Lo"},"signature":"EcQO5twCaBb9UlInhN/ZJAHxRAusCptoJW0+KUpPMsFyVBP8OYKfeyIup9De+xmdz+xiElQ+ihEUx7VavpMxSA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16wemwpekhn8e6467t0dynu4dcd2dsfhwarz9l8","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["parvanimity"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArXh8k4mTmeidT/XF6iNDJvIYElvrCXUaBO3hhPlk6Lo"},"signature":"k8FVAhcNyZho30XrKBeiTbBeDxDoWvIccfOduqobneNbF67YwLMCr7rrAKBbVCWZQuK2MJoTB/vCnzqkdsAZeQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1pudu5yx0w00fv5j9svgpghlhsqne3kgd9jg4ka","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"W+G2KD6B+6qQPv/MZDH/+47afyRCZBVe0/sAqVpgVI9GaoLuiyPtwk7Xag0lokxp3QuNWWPX4YO+RhEmeR+M4w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pudu5yx0w00fv5j9svgpghlhsqne3kgd9jg4ka","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","outcross",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxbbnCjH2Zf4jf6POFzqRz9HfCMJhcUjItvqPzbfux7a"},"signature":"TY2Mm53CSQgroxWC3cCYBxS+GcRiITtOc2Hd2jstQjduGWmWGMbgX4ZtyMqj9kEMhfOF51g6uq96OAbr28/QMw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pudu5yx0w00fv5j9svgpghlhsqne3kgd9jg4ka","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["outcross"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxbbnCjH2Zf4jf6POFzqRz9HfCMJhcUjItvqPzbfux7a"},"signature":"UcrnBO/OsSpe7fEEIR/4hsQkzpmsehPk3sO0UCOjvZdYJ0uCg37xdIFy7OFU/7BZZv09yC5nldylf2ioXFd+5Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19terucph2thrms24gaaz4e7cjrm9n9kl9yfu5j","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1263","About gnoland","https://medium.com/@prokoopenko.nz/about-gnoland-cc0bc78020eb "]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnFN2kgNVxPpBLiNRChxRXsGnIrs44VFVt60/iR+d4NJ"},"signature":"l9Heap80UWfM4HqFzUvFf1pDc5GOAeUIOafCt8FBc3lWt1QElxHbl6GvlnhR+o9h4mfyAnxV3AvNnKlIO0NZ7g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1paqd687fgs365pkx5fnaus90zgclgfzejj4jlh","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1264","Blockchain is encountering major obstacles","https://medium.com/@akex.korni/blockchain-is-encountering-major-obstacles-that-are-causing-issues-for-users-of-different-platforms-f82d67301434 "]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Apyjju3yVoE6VVn+FeuqPrrtdqNRDvP9iPtka3z8/G1U"},"signature":"ml8kKd4yBzsZ2pNiPeDnaPMkaKu7uKvzx3c949MEQu1Q++krEfEgM/nhthpt/WjMu2mM2Oduto30XHBuaFDU5A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1g7lyw0m57uwxhjvz20jl94arqtl6xkyujhy970","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"1vi50u54hku3uO8vSaJwq2JWZM0I0cASGAMdD4AV0AgaaMCdigNv2Fhu8yLPrJrmNZf1woa+ABfEBXW1ukC0Ng=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1g7lyw0m57uwxhjvz20jl94arqtl6xkyujhy970","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","almandine",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Auvm9qcLSzup2ePelH97TGn+XsGgdQHf5dbCjAeF03tK"},"signature":"Jdg/dRUOgyTjrcVksMHg6+H/UcEyHB3q8Vcprsl6wokfFLNk+0dMLp8qyKTMxYzGuUJmazX9D9DzIEMCeYgGFw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1g7lyw0m57uwxhjvz20jl94arqtl6xkyujhy970","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["almandine"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Auvm9qcLSzup2ePelH97TGn+XsGgdQHf5dbCjAeF03tK"},"signature":"0IhnsaQdT84D5E5a38bcs5CKIKA1+sWy8ywCkcrj+L1P9mTXHzMKNJq/yiPUKOW4Zn5ymtgXXTmD3aLYziYTig=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16wemwpekhn8e6467t0dynu4dcd2dsfhwarz9l8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1270","A litle about gnoland","https://medium.com/@maxik.konok/a-litle-about-gnoland-96087be07125?postPublishedType=initial "]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArXh8k4mTmeidT/XF6iNDJvIYElvrCXUaBO3hhPlk6Lo"},"signature":"MO4yyMsZPD6tx0dO3NMqlealdjYsB7DvTVxex7m56v9cz0P+UTUTUtK39yfYUuWNhfKcOCx5PjmEyOUTIZslng=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qrwpv3p0rxpc02n6kt9mwjr77z0n9ye2dh7gmp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1265","Gnoland","https://medium.com/@goordoleg/gnoland-e503a7443ce9 "]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AknRF2cbFn2v31fWU255+I33s8Cvk/gSTRuwEi1wUab2"},"signature":"Lc+5wXZLh6Bb7AbEMSagUpr9lR1gP5RcAQAkIWqKEpBrPByyvipi8qmqhlOcGMhfs78TSvuHM2qk2zZ5Wd8W0w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ez74qp42mmrz3ujkdfav6p04jxd08hvuk46pdw","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1266","Gnoland wow","https://medium.com/@egorvilskiy/gnoland-wow-2f7ba3987e24 "]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AntEvXnIaHW3JClWA5mx8YMWQaaQIPlV2MoQxfmb5UoI"},"signature":"kyW52FUdhSMqy9xoYbWB7J/iC8SouyxD1pMfwZNnMNpysBWeW2WBlXMiaSY/0jNRBx7VIoJ1lvch/5Ld2BH0fQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pudu5yx0w00fv5j9svgpghlhsqne3kgd9jg4ka","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1271","I love gnoland","https://medium.com/@vasromanch/i-love-gnoland-8aef6d998e12 "]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxbbnCjH2Zf4jf6POFzqRz9HfCMJhcUjItvqPzbfux7a"},"signature":"ytmI3Xx6jEzY160Sf8iY21C4Xdqk04mU6u/HWKr6qRR+8e+JvIM5DilNn2ma+Av4d9cxAl4xp8i2BJqOumEQRw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gmxxylnmm6r36mykag5mnexqjyrqg4pnfr6qul","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1267","Gnoland project","https://medium.com/@ivan.lozoviy77/gnoland-project-dff304c76fe9?postPublishedType=initial "]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3WW225KSRjhDw/EFLviwUxinA8RSQnXxt4zvvhkzIrX"},"signature":"WUx8IMtS5QdmOil8m+DwHHF9ZLlw3JPhZOw5av+BZAZrZdM0VSPUSo9bKOqpu5EqHz5PJjzNIVXZOx6JdC0TLw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1g7lyw0m57uwxhjvz20jl94arqtl6xkyujhy970","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1272","Origin story of gno land","https://medium.com/@ivannprudkiy/gno-land-the-origin-story-of-gno-land-646cd7af4efa "]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Auvm9qcLSzup2ePelH97TGn+XsGgdQHf5dbCjAeF03tK"},"signature":"k0vgMhkYoEpLhkk6zN3aj16bxOJvfezm6JZjwcjQa45qP+hcFkXqAnF6n43Xx2EJZT5OvNyuZMTzfbRjoAkfEA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dm4r0hh7j363guas3eehq02t5fh2f32d9h5nrt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1268","The gno land origin story","https://medium.com/@alex.dugus/the-gno-land-origin-story-as-documented-in-the-gno-repository-illustrates-the-progression-of-a49abc858096?postPublishedType=initial "]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4T4TxRrNdRSg8rezPXImKTrbPF/ZiD91DGOrmAqmnPa"},"signature":"+/Jt9RUKzTlvQjFFDxe6IxeBPaiDAwXc3ScjYj0P+f1L/Jhuo2DiOAv0DH+pjLJ1VqHWOHNCehN30WCETNGisg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12mwajrqmkxr6z07r8l8wkmmxlpsrsqhrheh53n","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1269","Gnoland info","https://medium.com/@leoplasssko/gnoland-info-9459d69408e?postPublishedType=initial "]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwDwqQeRjs83LIG++ttY8hiagQ0UURYknwZJ66issUkJ"},"signature":"7FTxbtt7Wro/qGXJGZgccovxJqS1zci/Ec5Auszm964gi8UkMNVpl63119lFmUKgg6/yGBgT7sBJrX9UKg5MGA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1pr6ukr0d8j6uwjykchuvv7hucl6mlm8d9c4muj","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"VxdjKX23FC28ZxqjUlpjTLRWOvzcs/XHEmh5EoQh9UFjbR09QtUDzo11jqaPfHBcARCI6X9aTevxuNp/Gl5CGw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"KzGHvgwX6+eQRXvr+IOMdVpGP+V9395L0+WvhBTzAakDjBwsAsis4fQ4evy2p9KRoqxQL47F26Ulx/hCy8csow=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"3ayFf/DaC7RsduHvrmAhDIqT4UyDvEuLqMyLTtyMK8wXke6wvha0aQuYT5Pfi0hQLCt7Li3fhotBqmfOMiT8eg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"12000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"x4dS6jsS9siqDfAlIyODUdE+qYMHKVhJFF6cYA+ZMPF0Zv8XJkO8G8X5dQLPjHU82cDpd2XmDzu1YmQ2Qa6WvA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","999986"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"km3yFRzxchdKARDlSaAIYWSoQlcb0jQE+weB3NpmThgipK0RJ6j9uCZzgRl5ji0WCZERyO8zXlGyaOJRjGyHLg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"12000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"v/RWXC2KQJsp5ggqIZm7ARpj5s/CKpG0cHmnnSC4fZ5zpoinPqtFABp8Qkqo3bo1I+34BP0paV5gRf0dllwDDw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","999986"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"QUA4OlF/QOg/OGpdIlClpTZ/cElfu6kRXDEuHOG45tgmMHoWQJkgziuJM+AwoCrCYHUttF62y23FA05X99qqfA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","1234"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"UOD/xo+uQ2EUWMb/+VEmjuL85QqDlwPibgb8lTL/EopwXDHRT/hwmCqJPEp1jiXcKNKapI+Jt7s+UzL7lZHzRA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","144"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"/TL9kY1ZLmLomAEbfA8ShoiHmxfaojEhs1Ll+zGEQf4uNmzbQjwvA8XMlZS6TpzgjHsrKCdEaVFMJHbkU/80MA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1.111"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"rf+7/xD28sxseZyhrnmrzJ0j+bLv5nD12XwigCljB9EP6lalXVGQukbF1z0yx8fqBlepwVw2BzdEhVL54IcAEg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"s47QvMkyx4HibCCJL698Zb/t+sPtYWZA12YW1QXo2LkalawWBKUXctAB8znUURRMR+sbDWbaB79IwzBzkIsoXw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","141414"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"tMnkKBYN2/uy11ZhDXtQo36pVFJg2LrOdVlV1dw8NKkEtnGF3CO4d79/bnlHuvMK3812/i4plBVYeAkwZGW52A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","package":{"Name":"inject_test82","Path":"gno.land/r/deme/inject_test82","Files":[{"Name":"inject_test82.gno","Body":"package main\n\nimport (\n\t\"std\"\n)\n\nfunc main() {\n\tprintln(\"done\")\n}"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"Lo9q/HBEIi4p9VqA2Bd4lC1QWR1DQR6g3tUvqnohzBElYsvVBHKTerLp8JQ+EDwM+Y+ltN5XecT44h4fob7Ogg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","package":{"Name":"inject_test82","Path":"gno.land/r/deme/inject_test82","Files":[{"Name":"inject_test82.gno","Body":"package main\n\nimport (\n\t\"std\"\n)\n\nfunc main() {\n\tprintln(\"done\")\n}"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"FrNmz7Ei42qPL0VHWIznqB3gk+SmXHKyLWjdVTTFbusPMZTdCHUV+HHeY3vLqGx4V7Dba2KU42rdLzd7M5Fvfg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","package":{"Name":"inject_test82","Path":"gno.land/r/deme/inject_test82","Files":[{"Name":"inject_test82","Body":"package main\n\nimport (\n\t\"std\"\n)\n\nfunc main() {\n\tprintln(\"done\")\n}"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"BBFgo+ZADDgvPWOIYFkVdxAhtJc52ZuIIK/DwBUMOoBfPeOzf2O6sj1JTHsghOAox2X7XXdlk8WMcFuahH//Vw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","package":{"Name":"inject_test4","Path":"gno.land/r/deme/inject_test24104","Files":[{"Name":"inject_test.gno","Body":"package main\n\nimport (\n\t\"std\"\n)\n\nfunc main() {\n\tprintln(\"done\")\n}"}]},"deposit":"100ugnot"}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"WyiCxt7rxlXVH3dp40cbmGHPP/g3AdRsCgXpx//DdH9+nVT4h9J+HPkn5IRHIdUD9W3WuMe/KD5hFEtEEOO6BQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","1234"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"B1MOqGRi2/7gxh2oJE7gHZEBpP5p7C5MKGkFDYHSlDcTtssGLs96kMlRNW4pLSJgQcjFv0ub9d2sOSt0HbRlcQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g122n67es9vzs0rmharsggfr4sdkd45aysnuzf7m","10"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"84JVxtX5fTjf1Ahv4GB9ZCnAplRfOHnHQFxqciDJ6lopzXoxfn9h1l5g/h8XeS0HjAN7xh4d6p2rKE+oZPjv7Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"1000000ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"glnXTfCr/xRak2LNXPM23clyjALD/zyEq10vVoHRc905GP6ZiTtTtWskGTFq0dL4UjFBSKTAeJT5UiWg0Ec1QA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"1000000ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"DS0VBspVQ6JPExzL+tw2YF4Z33gpWmzwkLdP5bbeIB9DxHn3DFrFr5GambQJnDV94nT2BE3kmJOSbjB7M4T0vg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"12000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"FAVFD7eZUkeT41G4zRH/tAcpKAZgWSTonxg8bustPhRnQMLxcUldxxilp9ZFCArQKI1sFteZTNG5LOhERnrfuw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","122"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"na42nsPTj+pFiNm3ufmHLhFveqwxCNq4G3BrN5Q8WId7LiGII3trNaArmiJ6gOY7mSLJgtSu/aEFopHCd2ThFg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","122222222222222222222222222222"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"LASJ0BOfsIDHWFe12HRaASY2P7aeW5bIz+fIxbl1tJASTPf/QPoHu/b+7O/9NT7SQjrC4mAYQ2SBqalfuCaLWA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"12121241ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"zB8vXUFntOS6fwbohS1ezs49Y3I9qkRift/76GqIqF96alaNZlR1mwl1FZkkVqYKBUV7NBDmtyz4Pwl/vTj+LQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"aXMAx7b+Btwpauwtkf7FiX8+rYStxMF6uek7aDkzzZ0cF6HFzw4/DNIXd0oO8Am+1IUY3gN0QdKjKuDDJDuXWw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","2"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"+kUjtG2YP55996NZKlzVO3AlGbXgTG1yVN4gtODfUo5BeA1bI2qR+emEt4gMI3aJGOUbnp8DrSVCAaN/LAW7mg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","14"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"IF6wz0SkmRwGIiGVeoprUwNnCW/EURYIBvvwsP73hghLowA12XEUjKgnba+Bj1/t8C+f60A9jqc1csF2vskhIw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g1l47x640c4petu4chfjge3qg2uplakx78hkxqxd","amount":"12000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"k6sDWyImvnoUrbbUfPA3onDfXVimQ87OX29nwpr5xKw5enUAlt5XMkLgH0TfItHKsDqrQYScnw+zEZLzZon1RQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1l47x640c4petu4chfjge3qg2uplakx78hkxqxd","12.121212"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"qWn/2+yuhdxqAEEy+h9de4NQ8FEg1ldsq14628xz54VmSGLB+WvWu4djLwQTAOpPDF16ZuLt+a37i1gZ/1IZkA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1l47x640c4petu4chfjge3qg2uplakx78hkxqxd","12121"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"briI+MxeQeZuVRC1UUBQ30T9fi4ar43dmPI1amuuHmYJWMhytgUjrEDIrC3RMRjW/6IgPllk2Rrz3MhhzXYcnw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"1004100482ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"5SH97VzXb/UdmP6EpZ14/61fpT+FFqqGMcmzgMCybeEDmxeMTcZN98UX4avayUOBAF9kfce4NyDXbQyJUpxSwg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","1201"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"rqIuNSyDBz7QqKPuN8R5SkGcikWP0CFEBC0H8sSpNT0JeoqKVRkkg1Io80nf8a8gNRIUgIAZtCJVuA4o98cuOQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","2401"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"Hnsr1OH1GFA1tZcJYUb6jT66QMxM4wsTd9EZ1e/YjPcDnslqbCGDFRyabhwVPko9IZTKru58RN9Msz+we0wJhg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"EHejYu3ANc9AYFiHZ6+sPb3GDYcJgkDDcfd8Fnn+snJyIxT48x4TeXqcpGsBuDOOo94WNyh4J3Mrzz5GX45X0Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"FBduwUk0bZmoy4ZTwQsLDPCbj0/Hu1QmJxdl3iSyVAQSq2/8HaYaJOawMdzDdQqAXQCqfZe/O4R9zVfuO8uilA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"st71gWdWnZTNMO+QIeMUKhMNJl7BvvKvIxR9GGivJQVfaZ32r02txzMlDdeHIbCRIWOyGP3+tpMMjUVbqJ1TAA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"a6LdzhBaRdQgDqWYX0W4qmg+4GDpHBlOj5aARd4drfAsXFPH01IwuGXhbj2x4dUu7K0ZnPzoISIdBFfWMg/yRw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"jDVWwJenSVeZsmzNb0sZlkk2ght4A8/52YTIALI+Hsh/EeXeUtgjySgySzIRwG/ZIbluw6HMZAyxH4dVfNxt8w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","12121"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"7Df8z4qMETehFDLsXsuQ97o5X4ctnPVbgrSXu/X4kExC/KHsbyuooX+HGnkbIJV8pstyWT3itW8fgUl5m4+SHg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1t4du52tfdfcnsrhlkfxhulr3r2a8a965zs07tx","100"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"F4NAZV6gZarza/b85+hCjolZfvQR2h43UukmhZpcNo8TWUthMUlPQXTdSL14igkxhx8QLoY3tywWcQNueUn06g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","10507"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"95Ow9e0g6SfXJcGc9vZk/R8RSn0SPVAW3izUQttNrJ9LAkB7cGd15K57HiCMKlCdxubPLiDq7qrqevCCtkEhOw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"GC06mlz92BqCqfZuVRFAkvl5ZH4SJ94Xu6NpSys1nE08gIp9SfKrUl1aQ8WCYY1epRZx82NoPlZof+PGeaTd/Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g122n67es9vzs0rmharsggfr4sdkd45aysnuzf7m","amount":"23000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"mByCMUIt05HsfJlV8GP/AFiQQDn/lb5t8b1LoH6r6jAUovQF09m4coJVQ8nhniSV3QIts0JTd2/7oy29CzMKPw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g13enw4ph4jwh2mqv07pxcsesyam5605cydps77n","12345"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"E5Vevzc5glhMX0ke45b0x8+f5qJY3K4gQzQDbaCA4lRGQvYhEcsRwHO86HKY9rkAZ2A/dqY3uL7ZVvwSYZSOTA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g13enw4ph4jwh2mqv07pxcsesyam5605cydps77n","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1qv3dqyw46fut94z9t90jka58saw2e7l99nzqtr","22"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3JoC0+RVv9CQsgf4X359CS2cPelnoPDiVtGW/ppfqfN"},"signature":"fXVqJNuOAs0gkaW9Fy48rRys4u+iffE61pxBecIKmyA8U5dF+LyznPkf+rvtNBdsAmg/O2UaaHFaaP8rGjftTw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","1231"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"aMGFrw+BeMII+5X/n4U2XawD5Dhzgc8R5XkiLldectgyqm+S5YafgSKnukWEi3dXOREEfLPzOppQh5MR+7PXFA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"hijinoosss","func":"hiyo","args":["123"]}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"+5ZKVJrfVoUjXBOwsfEfkOjhpxT8JAFnWr8pDRxR/sQCe6bpPe+E3iNvr8CbtYUQL8t70J/XHOjlht/GnvtXUQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1pdzfz3uru9llhnqlvrhamepl8m4krxs6j72pj6","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ZmKUq0lejb/4JIGoKHOwCU0NOAFuolMzPAis2CA9IOQsF4t3zK6XDLrB5QDzMALni8ImMwVeb064bt2TAMv9UQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1hkgdcua64pcuwy88n548wggv0eefgy3u8k9s00","to_address":"g1758vjtngu4ccpl3vd9lsf4pk8cevpuc8rvkux4","amount":"1000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ax3RxhAfdxKyrn0Sy8DWV8fze5AyY/9v3QLpdpSmNZdq"},"signature":"t7lh4H/JAKjqOH8LOGgsV2IJqRAcOecsxq3F5Inpw3oc9M/NzduWmEt++bo2LUTFg63rfe3VPetT+D0FZVXKjw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1hkgdcua64pcuwy88n548wggv0eefgy3u8k9s00","to_address":"g1758vjtngu4ccpl3vd9lsf4pk8cevpuc8rvkux4","amount":"59000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ax3RxhAfdxKyrn0Sy8DWV8fze5AyY/9v3QLpdpSmNZdq"},"signature":"qy0pxz7s8pNTqGcc2zxfhtk2E/X7IUck0TeX8BR2akl4flb67tdDkc+m5Ew/8ZS+sA7DXogvPCp9wBzWJTobqw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"DfBtnGVz7UYKIm+2Xir9f35gW84TffbudsAxPsmP+twGHkq78d+VOmJ5NJWzaV0SBBfRu1mTZnI46tqjUKNG/w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"ad/BjTwQZq96tC/LOFaGzGlsbG6TNQlCDsZ8rBu/TvFZjBsYUYqpxt0blwD8Ys/v1UZNjNkznrEv0xwk3JLezw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","2"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"m0nV4NEKT5brPUoWpUFb5E2mT8fxKkC6rWXqAW17wkdM/iHTMzMK0v/WAa2zNvxNfTM3H3YoDuczlyRMGMHZxA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"GD29YHwWxErN2lVFT2uisbFZCWhmfHvmTWIfJdH+0dVojxKcLQZ0uC/iaqox2qkSCaU1lsKo5DFrSSLLDecN7w=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"1fdcwssJIccTGztR+20Lj/YOV+/LYG6w2/mJtbbHOd9GsGrn684kZ66ZYlPWskV+qZ9MCunxQViIneS8LXKrHw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"H8t8Ty7lfZucEXJYeBhNhi81xLKzjbav6mlDf6JExB9GrZRajxmKSMCMgAZfJuDu8nFUWI9Jso3aYCk69ECLjA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"1ugnot"}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"4lS20ScfdY/hIwC0cTfKZv72i3Ab+zRt/fyuOqhy9t0Ht8j5L6eghlzgosBnj/bwW4IFYuGQY31Jxx2zBu5lWQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"},{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"10000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"Hqhg+jRUUXXslE5S2979erj+UWWAZyXMPmhEHJME1hVVIz5B7+H/SfUdvsuoqF4fZ4A2JCnlCMGDD8D+XbYPWQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qv3dqyw46fut94z9t90jka58saw2e7l99nzqtr","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1qv3dqyw46fut94z9t90jka58saw2e7l99nzqtr","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3Tw76GV0BAtfeMytcN0YmNQsmhocbe7kMs7sCF8SJVx"},"signature":"KLIIcKte5AmmaC4yecSn/5si1ZpbhhgGVE8+FxdfypMSXIuimyvR82hYVhklZtAAqCupIsjXb6dY5WDSGDtGKA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"Ee3WJeuuEwsZ6ndf1ezlp4sMgMK1t4AMndqO+Cwx4SFctE3mYWE3IawJoariD2+I30ZESJ4oxvff9fYF1oWygQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16gjaj9m7yvrcnwzz5w97yge9k9xja50t0ezsx2","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","123abc",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AsPtg0UqivnO6e8ZPCtZF9IO2vLb4dotZbvmcQX0NJQ5"},"signature":"JzzkALbdnq7P1qKhUFddMJ7Vd9nAfXJu9B8s5tBpk5lQZzl1jPoUXyUrR9ZXpjjBUFeP/Qr+6EcUZzt/5IAcow=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16gjaj9m7yvrcnwzz5w97yge9k9xja50t0ezsx2","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","123abc",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AsPtg0UqivnO6e8ZPCtZF9IO2vLb4dotZbvmcQX0NJQ5"},"signature":"yD+ClsDy0XBPqEEK/+xl6KYDiSxRrSjV9JW1yrKsx8c18qbMXX8CgrG4lssRkwa6nVa2HPAYNFslIDVf6zss9A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1rgrj3tskykzkeffqpllqaz7n83k8zllldgqzyp","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Ng1WOeEbJ099chmPAs4QcPtQ7AC42GZSVJZEByB7jUVoR5SxtXWuZZufa1nrnCOycr++IVhxmbAvEd/FjEmvvA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"123000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"Q7P2XGvPZoqGcBFHhLdJU/e41QAwbPpxhrOWb/y6dAhRaYbWK2s02DEqofSTSi34Ya/TMTgpJhtfP3Q99LCkcg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Faucet","args":null}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"mD0qRh68itmBcKP6AoW5zsQLlXX31QRQzRIJcf8kB8g3ArYd20RWM0/+se/Pwg+xDEvwSl8swnUDVtvtqrh3ow=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1flk9z2qmkgqeyrl654r3639rzgz7xczdfwwqw7","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"SOHpRiY658cTz0GC7/ej5/eANbgNHqkbz2FnNN9PC9Jk4WJ+JU8COCHat9Np9btcW7+uLrhW/g7YSdZ5odd/Sg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1u3t3jlc9a533r8ke2zzqwpereqpx5hv38m98na","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"bMHN/sbrslU+IPElIfOiI9iYyfAhQYKHHD2vCR/pJshad8gBT6x/pKAGUKuk7siniE0Lh41nKcJelL8abU9sxw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1u3t3jlc9a533r8ke2zzqwpereqpx5hv38m98na","to_address":"g12xmr2memn9q3nn7a4exh60sh44l2cnvuvlck4t","amount":"5000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"At8Lv7DzDvdpZp9c2rOMYkL6ZlS2tkdTEE7EprVXkZAu"},"signature":"MRJ4YEGz5phv6kYc7KcG35/DizBqmFd6pC9vmBFlASE8WuJQCDzaHXNj2KE5GMO83eB1VXEvW9dD8nSSj5eqeQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","amount":"123000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"XHrwOfa1TdNfDYrwuJSXM+yakm2dTxP48747rgJHyyZoJBAvLbwjcQ8h4aVB3PQ5ZlVDT85zpvyF0fSE+zKHEQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"4GWtgcCPPIpi9aVtKb8QhbZi7maWBCGfg4yMmoxjM0JfzyAVNLZf4Rf/aDGqiVcBjfyqs/3CogwZhIj1yMWqpg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"12000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"n0AuBgqggMjV/JLm1EgYvqtNKbm7xPJh5q+oqdCpVc5K0YEEv2lLxpthGjzGy8by+Od6f1sw6ddzDUpUt7VaQQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1qe2hz4wcqx9z3s26l90660fwq8gqcqrde3e2ce","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"zbfMiKlLGepdgwVKVnJdb1alPfqfyxnsUT1jEGArINl2bzrnWrtKf+Dqeh2z3NPlXrKRWCOYbvAHBniLeHd6qw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1u4zdvqhe2qpw862pfqcz2vkxj56nnktm9583eg","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"/DcbzBE7JzjYkbbxNgjzIdKOJxlZOuYzUOVeDWBcmpVv3LN6CCM7IlAeS6uAJIZ278Rz5TlJgDU8B28lcWx7Xg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","to_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","amount":"111499964ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"KtiDIh7J3tmFjQ4RdqlTnLmniVSMlN3L0a6tLbjvu4Ip7tFYMGdkH0/JgTnZ+AlXklN904pWJKqkp1F9gDR8fw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","to_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","amount":"111499964ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"N2OHKXEwvqDSumZPMZfaTghiutWGBcdbjIZqvYyJtEwed/mywq69mmANaxJcjeZt2ijLGGr9suGYzBzMU7BcLw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","to_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"jcF+UwFReSyTyjC5yqRSGOiLDIvc77N1gSDWYpCYZWReknItb0trDilPgMV1jw7TRmhJXyIDDUeCZtCApnIyDw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","to_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"eVX4HDPHaHCf0VJLL7uM+xPAZKToc2jrKKbX9wSqblMLqichLTeye/qtAhMV1cwMQ3462IrFV5CvBh13RDxWYg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","to_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"lsy696jkt/4/wO18Bt7tAOiIMLTd0OqspjQEPPuvDc5CBoTZ4LX8rQ+HsrnU7V0mSCfnZl4fkfIn7nwhFgmLhA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","to_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","amount":"2000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"KtvN/TWPkGdDJCoyJPzfW+J32sFjI7Se3pSvrJQufktWO132xhomkuc2fv5yT8YrEdwpU2j3EOuVY051zkKqTw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","to_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"lm2kxJoV103QiYrvmXNuDQyrKabgTTp20Qj5Gu76sS4uXYbfTvJwjJS2I+WiLMW4VGmkN+6T5lz+JYvnrjPRWg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","to_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"jGHcAMLA1Z3qY7D5h1D5a1WkFVDORwu10iNMoq2U7BFc0ITiX9chZPMZYD1YPrcKC8GGckt3c+gxAogz1zaaSw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","to_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"Vo+YgZKLDJwow/i+S1/OU3OXnfX3y/sQRmRIy+5cRwlx4XNxwNiUG21Af/vAELN1cYOiYPipujpaBzcQKjHYkQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"kAEt7DUwS9Q1Gs+3dprOW1hBH8NmLmmzXqNqdUFIxzcy4ACZhmv6FirW49lya2TW1b6/2RfkUEXVeIfFh4x9cw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"zO8pgTp3vpOblzxGNVjvMn/8WmHqXq25dNlkWQ3MnCE0x4CPOddcdFrOSeTLkJkbOpClCwTDhJS0u/X1xnsOUQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"nIuFUIBTQK20eezPqAvMSDc/0JnIwPm0qHawi/GjM0hUf4KxH6tEx5TW4Cv8fr/IUfLcBPB+C8TjWO/oa3a32g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"YK9ZAPFxkA205YG3Eukm/yrxmslMfbSTwI4dDZeGY149V7Lu6Vv543nVsp9d7My90UOh8rPSq/X28hEY+rqnlQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"fYU59DZ4ohx8BprItNFYs7C8/d0ScHcJ448Weyj7Wy05vQ8ndmNNMRCXQkX+tU3BBE6FHrLLnTcwLAHeKvV+kQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"jpuCsTAUuhTtw8jBwCj+rJlYX4DiGQCFwVXZUDLX6xoVeIXs8FiuU/aJlVH/CmT948I/8hzWluvYLSswXQIoGA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1esdpk7sn2k5px08q3zmcpj8qfnsqtl08zznqhh","amount":"12150000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"G1CHocEuR0ZVRw98uP3VZ8AwgiCZUXlz9DQl2CjY9sc5mIrgkcb6mj4U28bwS5aB1nXc6KuB2dXxj70a1ZQwPA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1esdpk7sn2k5px08q3zmcpj8qfnsqtl08zznqhh","500"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"amwJ1tP0cNNu/+GndMgVZvieYi7heeg2eEcikaNJNqkI3xOL7cD8nocH5UOtNjYcqA/4+HfdxoL2+VgXJBvj0g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1esdpk7sn2k5px08q3zmcpj8qfnsqtl08zznqhh","to_address":"g1uvf8cwwtutaefv5730xycqazjqp5w7kdtm0qme","amount":"1gnot"}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ax76olykT7PhhQFyoPUGRvHEiBPzZOD7eJxctbHsf86Y"},"signature":"sgCMQlGosNeTUmSNYyQJql/X74rnFb4uWcpW81wQl/MENXt/l6BCN57fiZdrQaOKLtwm6P3L9BB6JujlaxOlGA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1esdpk7sn2k5px08q3zmcpj8qfnsqtl08zznqhh","to_address":"g1uvf8cwwtutaefv5730xycqazjqp5w7kdtm0qme","amount":"1ugnot"}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ax76olykT7PhhQFyoPUGRvHEiBPzZOD7eJxctbHsf86Y"},"signature":"VFclYszqYYhzGsKl+Dx8dyGXRpYpGB6/ks5ihQJ6yRU1NeZAfHbv4uLcdfilc8rG/gQ/jg8cqBxfXqxg7/vDmA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g13enw4ph4jwh2mqv07pxcsesyam5605cydps77n","to_address":"g13enw4ph4jwh2mqv07pxcsesyam5605cydps77n","amount":"123000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3JoC0+RVv9CQsgf4X359CS2cPelnoPDiVtGW/ppfqfN"},"signature":"6DMJCgkhfwCuv48yuvACsJ1WSGQ2UJASMGXNS1qdhe8gWXYoXsnPBubLM7jaqUCUEYCyrl4GICJpM+K6Ob2nxA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1esdpk7sn2k5px08q3zmcpj8qfnsqtl08zznqhh","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1270"," "," "]}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ax76olykT7PhhQFyoPUGRvHEiBPzZOD7eJxctbHsf86Y"},"signature":"9IDraAQi6ctBBEE62sp1Y4MVe2eU21sWuMAmtpUJldJ9Ry7obRNZ7OHPFpWahxyd62xYhpnc9CbLalf4rh02Mg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1esdpk7sn2k5px08q3zmcpj8qfnsqtl08zznqhh","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["testing123412"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ax76olykT7PhhQFyoPUGRvHEiBPzZOD7eJxctbHsf86Y"},"signature":"yOXAwoXeGR+6VbH+pJk3huWMJOYUwV2Cph/vkAW6kHYfkqEFqWp9o2P393p+3I1dR34d42P0XHcTJvXadwBpeA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1esdpk7sn2k5px08q3zmcpj8qfnsqtl08zznqhh","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["testing123412"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ax76olykT7PhhQFyoPUGRvHEiBPzZOD7eJxctbHsf86Y"},"signature":"u0VLiDh/osR46kWflCezwVdAV2AzHP+zydiOUWps9W0QWS+UFNF4NBKWfqfWPA3TWhH9PLbkZfzRX0xgKVdUUA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"1ugnot"}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"1CRgDFvodxzEkdt4weB4soO1VcrxU3ns71vOO6AOEmN2iu3WoBAT8CN0+2CGCDHEBUWhtaIk7rEcqnoezWAKiQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["testing123412"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"rnBbmrergSXsDQdZpJ9J6v65IJRBuAmjhhKIadMMlyc/72zTAyqCGn5DiN3VEesI9fltMBATAnhlQoKxUsCPMQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","135248"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"BeH10z+6WOECIyt5sMBVKooymXuIZm6p0Nw3CD6rQJoJNJZrriIlDCpVJT+wNEpIqcmcOcgeA3OgEq4mqbjBRg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"1ugnot"}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"3OvKGp2ZpuuihZbRW1LgLhYmoSkhXcuCDh3aeJugHRx8ZLgKUjGV0h28XQy+J0Fv9/MxZnhr9e9lBpGY2qp65g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"1164882725ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"szSZTGYjMzTzpYr1e3xCc+LIPDpO3vQDvISWZXza0GtX/XDGy5DkjyDUdfP1EGG2pVrNkzmzOnnGnPNw63d5UQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","100"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"/t7/3dXnI09sX4X9Aukl/ZxIQ1xxcgHrW6JLJMXgb0hKDg72bsHyuawBnKXPnbdrJWcw4bu9HhqgfAkYDCBdCg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"10ugnot"}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"v42d8CPVLdlD1A9W5Mj4EyA41Sjw/yeMscRjqvPezAgV+MhSjyuagvyGQc4zNNUzQYgM5PkAwgx/mKsd5vphUw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","100"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"7+SBBr1nBVN/y12b3aGfGQv4PYjPGsbp7i2nIOJbGa1zogLAnIVjnpxgy91e1BdQmwWOgTaNdgSZcMOA+l9eMg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","500"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"JRlZPGXYxupMev8L2Gcr4VSphlw3tgiem3ZMIBROouAbyiOAKOhZ+Tktn6SI9HmYzTXCU9QVQ7/IICRlt++lag=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"100ugnot"}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"1Gnsx9MF1ooDkBWPocY6pJEK6B0rQ3nfPhxdrMGhb8VVI+lo7zrD/n8hRKB35UvVGzF75dwlPM6CZM6MAzAiNQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","1000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"VLgpLNI2/eXaLjey7L4rkAnK3VTqj4+azeiwTnb9KLIMz4t8Y85fY0LWLZXSPzWJsd2kfiTrYU7D6knkmg9ILg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"10ugnot"}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"7ufvq8G9aG9uAXd8NChHwlOYQdX4C49eNqvMAqIVmogdfUkTwlq56IlxqbwyXRjL2o+0mO5pyFguP1jiH2kg3g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g13enw4ph4jwh2mqv07pxcsesyam5605cydps77n","to_address":"g1qv3dqyw46fut94z9t90jka58saw2e7l99nzqtr","amount":"100000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3JoC0+RVv9CQsgf4X359CS2cPelnoPDiVtGW/ppfqfN"},"signature":"eBSJhY2WSaePtXTwzcBvdqLrNh8kF2vCpZDNUI3i+j8rIZ8B5kdUej6qV7qYyySD/z4KtS2+vcHgCnPeAMKVOw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","to_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"ZGJxLrlQiyWyO4/wWUsT49Yj7JkjXEWyx+JU9a6bLXgjEvjfYhzAlkCam5Oyzpb7AQfS0cer6XK15a4wDIt+aQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","to_address":"g1929vm8rekhgafscf5a9jqlxparzmfcw7f8h3ef","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"2gpffFloAI5K8ORfUiZf97wlGUoAksSRSbgBAN2p5S9Wditlqe+k+pct2m0k2n2/CZIx4GCSJ/yIt3RDzrIzmQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","to_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"NoUenWnimZbB3ru9jEsepc6cuxtsdPAm8VlsTXHqKJYCSNLOd+NHdb1KV0bsl8zMOHIckP8j0ORL1IgiwXTR0A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","to_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"Jj7YZoEa0NZzs0DAuMzVt2vHHxF+CsIXyXvoxLWQ17teYiMb5VmcLrMpb6rWnlkmwPAf70pIF4SkKN1AEKZoqA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","12345"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"YFL53USbt2H7WzuChQG8LpjCVbxkLWfNhHqJpCexWXdRMqohs69JTx5hKSz5/EdfE6pBgGt6x3T4TVwT7rQW3g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1234"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"d/1iZGs7AXNDLCmWPxz1CbkZazro6/fXs+gAiLI0oxg+nitMctih22buhAftm3h9CHlRTGi/dJAx7eIxSARe1A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1234"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"63IQgcdyV0MZi7XEZc+a+sMeoUyoUDF8HOThhJD8h1ZZLmedLIObDWTUJ2q6zYqyHPCWONVrcB7iANUp8gfg/A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"12000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"AXqJNgYP1sFOvBDDam+hj5Yivz3vLm7F7amtBf/qKVs/Tfet/Z9Kfq0YdM/RkWhUbJpA7YHF+62lbcWbjL7XWg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","package":{"Name":"inner","Path":"gno.land/r/demo/contract_inner","Files":[{"Name":"inner.gno","Body":"package inner\n\n\nfunc InnerFunc() string {\n\tprintln(\"print InnerFunc()\")\n\n\treturn \"return InnerFunc()\"\n}"}]},"deposit":""}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"KW3cCRl6poEF6NLVapMpzsq8pXC6JqeozYlssDQYRedtJ82IsOWNOgVi46WrV1TL/lRv+etsZaveDgUyaMc36A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","package":{"Name":"outer","Path":"gno.land/r/demo/contract_outer","Files":[{"Name":"outer.gno","Body":"package outer\n\nimport (\n\tinner \"gno.land/r/demo/contract_inner\"\n)\n\n\nfunc OuterFunc() string {\n\tprintln(\"print OuterFunc()\")\n\treturn \"return OuterFunc()\"\n}\n\nfunc InnerFunc() string {\n\tprintln(\"println Outer-InnterFunc()\")\n\n\tres := inner.InnferFunc()\n\tprintln(res)\n\n\treturn \"return Outer-InnerFunc()\"\n}"}]},"deposit":""}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"5nzQkKDWblieetnynYHNKDodSGmqn6YPP9JJOn3vrsBkypruhyyBRmX90ymPEMuJox4NJ0JECLAV8eRN2C6F1g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","package":{"Name":"outer","Path":"gno.land/r/demo/contract_outer","Files":[{"Name":"outer.gno","Body":"package outer\n\nimport (\n\tinner \"gno.land/r/demo/contract_inner\"\n)\n\n\nfunc OuterFunc() string {\n\tprintln(\"print OuterFunc()\")\n\treturn \"return OuterFunc()\"\n}\n\nfunc InnerFunc() string {\n\tprintln(\"println Outer-InnterFunc()\")\n\n\tres := inner.InnerFunc()\n\tprintln(res)\n\n\treturn \"return Outer-InnerFunc()\"\n}"}]},"deposit":""}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"ENbUoHwhqgeH/07ZFy3yEHUTfKBWn6SUneVmhHJ6NNNxMbpvN2vbO96+1XJ4xdcLYu4/ZmpzXsJ195umaE00gw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/contract_outer","func":"OuterFunc","args":null}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"6bPDeSHarfDsGQIK7LlFLwcGHRBAFZYHeN9q/5DmQRsZOOKxp3/9g/RNS7JYMskyoW7lyjz/xP7vhRwkFRFvug=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/contract_outer","func":"InnerFunc","args":null}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"XxgPu2Nlzl9jMf0HXbOOphUJqA+C5HOWcUXMmKP9/x8i0qzKc8xbwQ3Oq2ye7tGcOmXLeGmy3PGbXkTLGBe6vQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"hhTm2XZapW9NgGCWJebacSipqASoqe+qzfPxqf/51+F9o/MTcRyLt6MpwM+ExyFxG9DVlfzP6kAKGRz3/h6cxA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1k8p7x84gjcy0recfkzvfgljxyyxdlgu02y6w50","amount":"800000000ugnot"}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"nlBKnPLE4XdYjLPYkqDJmBP+IuyTP8UYMZo5K277a+cO/JKDs230cC/DfQfgdl/x4qD7+dMHDOH+rjDJ71OlMA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g13enw4ph4jwh2mqv07pxcsesyam5605cydps77n","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g13enw4ph4jwh2mqv07pxcsesyam5605cydps77n","678"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3JoC0+RVv9CQsgf4X359CS2cPelnoPDiVtGW/ppfqfN"},"signature":"7/loo5tO+cGeE9tvXI9dUZz55Di/H+IaOJWcHrm/59sSYN4SBkYU9i6UrFgvJx7xoDZveSlPA3CpNiTZBySEgA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g13enw4ph4jwh2mqv07pxcsesyam5605cydps77n","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1qv3dqyw46fut94z9t90jka58saw2e7l99nzqtr","333"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3JoC0+RVv9CQsgf4X359CS2cPelnoPDiVtGW/ppfqfN"},"signature":"gDFk0qHPchbkqTP23WzUrFRsDxHHiS0Qg+W5JIeX9ZVkBCbywz7IisESIBEfq8p6ez8TIT9DbahT19nC8QsyCQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"pps9fE4f3xraIuqI7OR4Ti+JNGdbuYhLx5PT/bCPxIN93blGN8O+x7b2GvivqRwMrIR4FJ2TBuhTcFnuZzNRsA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"Ha2bF7dy8y6ZohSsHEDbqnF7dk19L+AMAzejFd5s2JE6VWNy+4nmER+ha/nZ8zaXlkWDnsoyfLYYAikNS5paFQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g188sxst5tpvlp2hrheul9r2q87f0ggevu8742x3","to_address":"g188sxst5tpvlp2hrheul9r2q87f0ggevu8742x3","amount":"1000000ugnot"}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1Y42RvJ47zi22nSmc0uKlrkfF/6DHEFC5472UJjSzU+"},"signature":"q9KHk3en+4MzWzQtZAIZARngKbsfS741ZlmQKvfvz7Q36soKCb88Hccgur5xC9z+XangzI1oSwy9z6eS9Tkrlg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g17j9y7xmxsjz57xxvxd4crpnfmsjnut0aqwedx9","to_address":"g12xmr2memn9q3nn7a4exh60sh44l2cnvuvlck4t","amount":"5000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwVrtwdi1lJ6bXwz9+XjAAtoJVMpy1MG6OtAZiuZhcI1"},"signature":"UPbnxqMgSRrLsYKXx9MmVqqNKfvpHPnuxGRJnqQOTdFZ7MKQfcHjrHCF+W388aOO3YKL9GhFiNzcprByUOnmZg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g14guhyq2r7sjquj6v0l03a4t99hrvxxpl5lf0tx","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"rrbLholCleGrmyu4CXI9TSJblSYYkuefEMv1PN8AgexBB879MBU4o0ahIsJfxtDkK7pddQ2w7ZgVuQFd7mZ6Dg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1l7nmtmzptycmt36lrju4ypum2yr5zx244c52r3","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"1WCY5DxYKMYZvECFoTfK+9ydEj5vMJUqFcPIFOdlJwAlrN3WhoifVUXIu2IsiGRhNOkzS0HdrZtA8juE+fe9Ng=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1z6ups0smz4sw6flu0d8zwtlc8cumaskgxsduqz","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"f2FG2gkSXD8m2E8NgkDEqeaYrCLd0lAdqVkF5/iOSXwGxngTNw5LUlDIvvANpB2p5zpeJgcgX8SX/9GvpaykXQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1rejcrwppfqcsfsrgh8tk0eyjqg62c84ff8qg6n","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"iLZahIBWZqGC+ZXRsc3rQf88YC5Gwfbp1dzY412/IEkoeES0UP0/jXet1QXpe/9ry8M4YMAEZcVDy2jZrC37gw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1pgwh67d3ghrmhcz9t07jxhdklmpxwsnal0l87v","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ZwlOcRTpwajGlBA53NMwbfkhncDCXkzuLmH8+1jg9lsUjK29QO/CrFyFi5qDKByrR7T7pBjIFmLBvaO6Lt7ALg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g15j83gtqs6e6rh5yh7hlhd6g26vq0k8mgucqddx","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ZiktQ1GJcN+7toIGZdcJGAg0GPn5C574Kv5WQ+hPhYFOtJJWNr2H010laJJeMQl+15jlNQDQnvHbfe7XhzY7XA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1pu7txjfe8yt8exkput4sj59v27stjz986a9rdg","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Sdr1c7h+LHYC+3PcrHAkxvDMyOI/R9pv2+mt+YJpi5oSuSiMGx38QoVeksX7HdURHYN+adEn5WwEtIxFFbdGGw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pu7txjfe8yt8exkput4sj59v27stjz986a9rdg","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","crumdek",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ap15Z66LhFVad4vz+gOlgxIUqakkZrrQ/v8I1zpLCyEx"},"signature":"IIebMQIN/dczaQIF9mm2SGXrOehJYrKuqYakB7E6lOFVCJdJS0mZqpAXg4POTabC18hWBAkCCQPRmXK30XThmg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pu7txjfe8yt8exkput4sj59v27stjz986a9rdg","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["crumdek"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ap15Z66LhFVad4vz+gOlgxIUqakkZrrQ/v8I1zpLCyEx"},"signature":"kG1YU0RVaTpKbvTmGvBs7LLQBF3O5Qyf9ajXkyssuPJlHmLm4n56aohYu7kW4wRc2uec7pE2zfCwP8MUV3uqQg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1pu7txjfe8yt8exkput4sj59v27stjz986a9rdg","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1274","gno-land-provides-a-platform-for-developers","https://medium.com/@kirrpop/gno-land-provides-a-platform-for-developers-to-create-blockchain-apps-and-smart-contracts-using-91eeda2ea1f5"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ap15Z66LhFVad4vz+gOlgxIUqakkZrrQ/v8I1zpLCyEx"},"signature":"owyKBHgzNXgKWQ4Q9erQfUPBz9QiAuIMYZ92x9AER9YWc/1IDzDRlq11Tsm5QQsPlTDUjWjoDvtR7eryhGxAsg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1umfykc3tnsjz5u2h6mmxtkvxktwz4lue4sfjs4","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"tlmXN+UBawM527Api88ygAkJfLGpA6oib1XgoWGsnpBbRKCFljgTLPNHGeLByHmOZSGZ8FTtusyju+QfARU4/g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1umfykc3tnsjz5u2h6mmxtkvxktwz4lue4sfjs4","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","tactkom",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApdhHVnL5iJPUuE4k26Vrdt8arPFT6cfu6VhqSBs8S4d"},"signature":"lnvnNtPjgY02Ju4bvj2eDacVvJKF8I0uoT43P3aEEa0PYRHvo6o6l2LzVRE7otIJAhuEtcF+BmAk0mKpFj7TLA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1umfykc3tnsjz5u2h6mmxtkvxktwz4lue4sfjs4","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["tactkom"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApdhHVnL5iJPUuE4k26Vrdt8arPFT6cfu6VhqSBs8S4d"},"signature":"jR1oZgI1Kvuw1EMwIEpGLtXyTShJdQMmzONMa9AzqrINiHUrwpuageTVnWeYSJVS5CoV0EhYTqV6Itw9DYaMEQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1umfykc3tnsjz5u2h6mmxtkvxktwz4lue4sfjs4","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1275","enables-developers-to-write-blockchain-apps","https://medium.com/@petr0vnazarka/gno-land-is-a-platform-that-enables-developers-to-write-blockchain-apps-and-smart-contracts-using-4d541d0c2473"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApdhHVnL5iJPUuE4k26Vrdt8arPFT6cfu6VhqSBs8S4d"},"signature":"sSF7kbDRs7XtiH6+cSlCdIIwawbKN9H0IUbglKmhdUV6PKPQjiS3HwN7l5IVmw738EVpyaRcSf6/gg0I/rC2dw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1juysjrlry5r34a9umh4606yl2m3nq5t2p737as","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"HjgSgeH9g+ls77WhMdqliRvgQ+tQGfpkvPQqNPDFa0MIrrVlsOVQ2gb7HDld2iGxgT7LN58auYmv4ZOxpV6jyA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1juysjrlry5r34a9umh4606yl2m3nq5t2p737as","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","endsene",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ah1LReuVXPgNzsza4zv1zskgIYDpfQg8DZWVjlXRN2hG"},"signature":"/LsaJl0RXSbRsQmatWHt97lFWGM8/RYS3qS7D+Q6Bt83Kbh61VISoxQbX24rol/3zJOWifgRt4VOR2PTjk9wwA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1juysjrlry5r34a9umh4606yl2m3nq5t2p737as","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["endsene"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ah1LReuVXPgNzsza4zv1zskgIYDpfQg8DZWVjlXRN2hG"},"signature":"WlF2bZK78GhfJ403fPNsVgZ/J6sV9LivQderszJSKWJuHSpz0pHw7uepGjAoxeurlmahuH5Ltk4ciupylCSJiA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1juysjrlry5r34a9umh4606yl2m3nq5t2p737as","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1276","applications-and-smart","https://medium.com/@orestkang/gno-land-is-a-platform-that-enables-developers-to-create-blockchain-applications-and-smart-652a4da07814"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ah1LReuVXPgNzsza4zv1zskgIYDpfQg8DZWVjlXRN2hG"},"signature":"jO9JIRpd3+Sd/IzcS5y4+K6gFQHVt9tuLNyHit/Rvw8DWco1Bp+7E9taq+Ggogwz9KsRF3aUzJTIzM7KUebBwg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g137juunqfjd34wf6msz728d99l83z9t2mh963h6","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Fqd5PDl8IeWUKd2rmozmQQu+TnohyVvDJBgX6THbbZArLkxvIfxhuPYY3j0wsgf0sHrL22j3o4aOmlRa8yr5tg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g137juunqfjd34wf6msz728d99l83z9t2mh963h6","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","lenchwy",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0fyqndZC1OecloTim/JGi3z0QgQVFu1h0MJUvJtvVxC"},"signature":"IflCGnByI/xuf80d7SuVQ6LZsPJsRXKxfwdpCXBStvJ3lVNeaC9kOeKDOPRRik+xqH/C/zHIuRbzvQYJqwvNbw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g137juunqfjd34wf6msz728d99l83z9t2mh963h6","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["lenchwy"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0fyqndZC1OecloTim/JGi3z0QgQVFu1h0MJUvJtvVxC"},"signature":"urAeIaiWn0FXfvxhwXVwxf3Dqhqd+9h1BVHPsYgCl+MN8lo8R1i3mQ3CRN5XaHLkP+g5EAL41VAYtM/vuzMFyg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g137juunqfjd34wf6msz728d99l83z9t2mh963h6","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1277","Gnoland is a platform","https://medium.com/@olegkoronn8811/gno-land-is-a-platform-that-allows-developers-to-create-blockchain-apps-and-smart-contracts-using-c3b516ec7970"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0fyqndZC1OecloTim/JGi3z0QgQVFu1h0MJUvJtvVxC"},"signature":"sgzGQNrLALDQ449Z5FHQny8gIpTSzBDAEXnmdmKLsvwprhntGVK+yOgvtvyKGWn3StFgchJV25ppODFnAIQW2w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g19mzy9nm3zj6za6ws6jtvlxsvcpxzvuznfcuqa7","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"6WGl00+Bk8scp6E229uw7HYzGp7h7bHIKPFMeeJBnRBNYmMCHOhcdWw2ZetbY7AAdezMBwXiFSH5C/uX07rT1A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19mzy9nm3zj6za6ws6jtvlxsvcpxzvuznfcuqa7","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","uinround",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5MEh6eFFvlnuAQjw0MJMPnZlR9zNCj9/QVJVBDVclxu"},"signature":"zHA+x/2ihsKy7CyMtpQV5b1+6CL6a1rj34J8HBdKhxhenhrwPf68/OlkZxZCRoxGx0Ou1O55msAUR+zohn0pHg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19mzy9nm3zj6za6ws6jtvlxsvcpxzvuznfcuqa7","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["uinround"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5MEh6eFFvlnuAQjw0MJMPnZlR9zNCj9/QVJVBDVclxu"},"signature":"8FGNUWnGKe1MGEJuyjnOGHigWkkPOBxnuh7Pl+EHZUMxm1Mh+df0Dp6mhT/IZzocp4+YR3fxBietvgc6V+EoZw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19mzy9nm3zj6za6ws6jtvlxsvcpxzvuznfcuqa7","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1278","create-blockchain-applications-and-smart-contracts","https://medium.com/@miartem111/gno-land-is-a-platform-that-allows-developers-to-create-blockchain-applications-and-smart-contracts-a0e2b9fb9b25"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5MEh6eFFvlnuAQjw0MJMPnZlR9zNCj9/QVJVBDVclxu"},"signature":"cikXGZ17pPgIqW+0sKCqvNPr10F8oX1kG62VXDGLYMANnd9n7zLwfmxtggNUh1wpAFowMLmlmykkbrQYHFiYgw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","to_address":"g1fsu3z335h5qngf7t3lmakvpmpwg9ae76tqwh7c","amount":"10000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"rG2/hHwavs94xg4h/V8PQW7t6zkjomMHEJ4+AH+pRqZ1j5NDA8WeHyme+GWADBVqOs8Rr265AfD2q5nwghM/ow=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"Name":"hello","Path":"gno.land/r/demo/hello","Files":[{"Name":"contract.gno","Body":"package example\n\nfunc Render(path string) string {\n  return \"Hello, example!\"\n}\n"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"ot78/Mf3fta7xI2Ar9cZPObsBG4zZhnEFPaVdVSR6HUARiGQAuYc4HemdKnPAeK/UIVEd2N5SrSVhV81Tu8CoA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","package":{"Name":"hello","Path":"gno.land/r/demo/hello","Files":[{"Name":"contract.gno","Body":"package example\n\nfunc Render(path string) string {\n  return \"Hello, example!\"\n}\n"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"5000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"v5W6VVVE/aVr0bgP37ssPoNExhme5mZgE5QVYRYvV+kz/+OxFatdzWURPs2P4Co7QWcGiLbSeSG6ZlrWE0PDFQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"600000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"ZDKoVLgxcm22jnY59w7wAB5z2orsuCRFA495bRYk965qu8TsSMPRUiDtnbpEdmlPOfZ5q6FXn2UpnRhBeoEg6w=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000gnot"}],"fee":{"gas_wanted":"600000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"I7+Z3ViEiud36g/pY9J7jIiFZRODfl4trm8zZCOvZkopN/CJdJcDnGouMMzXVbn+klwsZN4BmoRQ4CQfNXGkaw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"600000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"pWOyam5EOBAny8MKYoqioaAUgYOK1P6X/0LLPERdZGZRZzUdu+ZhlYhb6kgw5Dt5RXJ5Yq9SUg+5+txO66/iHA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","package":{"Name":"maptest","Path":"gno.land/r/demo/maptest","Files":[{"Name":"ff.gno","Body":"package maptest\n\nvar (\n\tmymap map[int64]int64 = make(map[int64]int64)\n)\n\n\nfunc UP(key, value int64) {\n\tprintln(\"=== CURRENT MAP === \")\n\tprintln(mymap)\n\n\tv := mymap[key]\n\n\tif v == 0 {\n\t\tprintln(\"insert key:\", key)\n\t\tprintln(\"insert value:\", value)\n\t\tmymap[key] = value\n\t} else {\n\t\tprintln(\"update key:\", key)\n\t\tprintln(\"update value:\", value)\n\t\tmymap[key] = value\n\t}\n\n\tprintln(\"=== AFTER UPSERT === \")\n\tprintln(mymap)\n\tprintln()\n}"},{"Name":"ff_test.gno","Body":"package maptest\n\nimport (\n\t\"testing\"\n)\n\nfunc TestUP(t *testing.T) {\n\t// gno test ok\n\t// gnokey maketx ok\n\tUP(int64(1), int64(100)) \n\n\t// gno test ok\n\t// gnokey maketx fail\n\tUP(int64(2), int64(200))\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"9000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"eeoTWS+Hsku56xQVkDwjZgu+Tzxf3zX0bvQ2aQH+rAdIBamHIvLaJW3wQnAhDux9FzF8Sr76HdEDCJNvgBKkdg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","package":{"Name":"maptest","Path":"gno.land/r/demo/maptest","Files":[{"Name":"ff.gno","Body":"package maptest\n\nvar (\n\tmymap map[int64]int64 = make(map[int64]int64)\n)\n\n\nfunc UP(key, value int64) {\n\tprintln(\"=== CURRENT MAP === \")\n\tprintln(mymap)\n\n\tv := mymap[key]\n\n\tif v == 0 {\n\t\tprintln(\"insert key:\", key)\n\t\tprintln(\"insert value:\", value)\n\t\tmymap[key] = value\n\t} else {\n\t\tprintln(\"update key:\", key)\n\t\tprintln(\"update value:\", value)\n\t\tmymap[key] = value\n\t}\n\n\tprintln(\"=== AFTER UPSERT === \")\n\tprintln(mymap)\n\tprintln()\n}"},{"Name":"ff_test.gno","Body":"package maptest\n\nimport (\n\t\"testing\"\n)\n\nfunc TestUP(t *testing.T) {\n\t// gno test ok\n\t// gnokey maketx ok\n\tUP(int64(1), int64(100)) \n\n\t// gno test ok\n\t// gnokey maketx fail\n\tUP(int64(2), int64(200))\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"9000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"E/ejM+g2W6xhwAoS6XHTGpELt4hNxBjzylZRqYrD0sQJI8CC7cyeFOO2N068eZ2CW0sxdt+8R8qkkVDeVob+rA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","package":{"Name":"maptest","Path":"gno.land/r/demo/maptest","Files":[{"Name":"ff.gno","Body":"package maptest\n\nvar (\n\tmymap map[int64]int64 = make(map[int64]int64)\n)\n\n\nfunc UP(key, value int64) {\n\tprintln(\"=== CURRENT MAP === \")\n\tprintln(mymap)\n\n\tv := mymap[key]\n\n\tif v == 0 {\n\t\tprintln(\"insert key:\", key)\n\t\tprintln(\"insert value:\", value)\n\t\tmymap[key] = value\n\t} else {\n\t\tprintln(\"update key:\", key)\n\t\tprintln(\"update value:\", value)\n\t\tmymap[key] = value\n\t}\n\n\tprintln(\"=== AFTER UPSERT === \")\n\tprintln(mymap)\n\tprintln()\n}"},{"Name":"ff_test.gno","Body":"package maptest\n\nimport (\n\t\"testing\"\n)\n\nfunc TestUP(t *testing.T) {\n\t// gno test ok\n\t// gnokey maketx ok\n\tUP(int64(1), int64(100)) \n\n\t// gno test ok\n\t// gnokey maketx fail\n\tUP(int64(2), int64(200))\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"9000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"af/Ut75kJa34e0SZu0xLDtJeWMr/zRZ4YZY1zpgZSQBXfTHXLjdwJdv/q8r0MPQ3iCS5Ed4PVYpf1/b7mnUVHQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/maptest","func":"UP","args":["1","1000"]}],"fee":{"gas_wanted":"9000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"56Yu5JFwJU12S/Vz4/WwiFBB5lfg33Oo+XU4hSRlDjNuyqCPsgGCySyb/HTDIcwYDOy2ctIRNn/AvEihY42u1g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/maptest","func":"UP","args":["2","2000"]}],"fee":{"gas_wanted":"9000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"/aBxsL65NbDMWJ0W0M/nRmTalV/DxCPFy6ZnvKpfMe55myWsSWocp/Ki6xpro3rFKBfK3HUHuIaefymoG1UyhQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1vgk30wd82hgu0ngr2ezq97056dhlsgsx0wm76c","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"VM8Z42A2RdPjOIRZwvaS2jLK3J99okjkh+4YUNg480ZeCCpSZZmOTapwMHsqP4hu5RO09OMsRH+CkAL+y1ejtA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g100dh8p0t24ha6k4s9l7xktjwx47dv5r5gfraex","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"LB43Esp+JsoBj1RsklIpL3YUx5ra7VY/jjBDsx81NSwX5mxf4MY4dYYb++TVW1llfCuDIfiPwE8xvjBvMANEOw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g122n67es9vzs0rmharsggfr4sdkd45aysnuzf7m","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArADVPfUBrZVmlqmZWPWucRTe9gkJ9wJFyTszJoU5Ebi"},"signature":"3E8NE3adUmj39hb2hNf/c5258OZHiSkyQE79IhyS5zZ0WrXO7tWkaNVzoi0Y3/1CmOiFKyMLllyv/6Z5nDZC8w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g17ec6vfn5w5lzs9s5cxqjuy3xd9kqpkhg6zd4an","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"8nb0vEmfVnXpJabYHIwIe5EAWOoG3HKXQiBtArLARxwI3ovt6gvzIdqTNe/SW/V4fqhRV5eg/s00nOMTF8qvYw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g17ec6vfn5w5lzs9s5cxqjuy3xd9kqpkhg6zd4an","to_address":"g17ec6vfn5w5lzs9s5cxqjuy3xd9kqpkhg6zd4an","amount":"111000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AsUL/t706SoKrZcCOQLfo+LH20e1Y+mUcsrORgc118XG"},"signature":"gJG8cQHv9CJ6o/y6wS5y3FMR9HTcFBw+K3L1VPaz1E0TVADNFGmPZDRik03xXzqDMF8jjYai+RCI8XIB4WezEg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1r8r79suzvajkh047qss09ce3akegaqars3j6uy","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"cYTvGh7nvlfSYIlGBEMcfgcaCdnJ4JdXwkFQY5ExmPFQU1DJCgm+lWOSnj7tlMYlPIbWruzQIlLoFjHqVDaYHQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1660d8lg4keycr757h3lyys8segtmzgwnrmhk7v","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"vzJeKYqu+mRDDj0S+nADLMrirxNXtwAtpLQQMOTYOT1egTdzH1FhxmFGz3oB5jCBIK13g6LAlSphxYFuO9wm2w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1ckg5ntr6nshnq8y4xyw588prn48kdcdzcheyyl","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"xoVQjyi4qUOMERQJiGNx5ivWtNoQHD/nxeIxUrEXlZ5bnX/mcvqRubGnwIXK1wrsy9LBElgYexi9vBos39iicA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ckg5ntr6nshnq8y4xyw588prn48kdcdzcheyyl","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","ryphpant",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AteibZgGr4sz6S+Q/raYBD4D349612BmE/EAADn/eqGh"},"signature":"m21E0YfLk37QM6BoMIc/sWYzKyJL7Lp0C1beuJHz5bsgbyc56s6d8WlTXWizxTzd070duX5j2XqBfKZIVuD8Vw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ckg5ntr6nshnq8y4xyw588prn48kdcdzcheyyl","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["ryphpant"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AteibZgGr4sz6S+Q/raYBD4D349612BmE/EAADn/eqGh"},"signature":"tEn6mTvUeLd1P1PdOQD53H+95K0DELdB4lvQqfz0GRt429UnnlfDICnPsyAw2UyVkFUeXOxNZqzBQQ0FBZDUBA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1dgql3j9das5tth7f9lrqksrhtzdq3ws6yr5rz9","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"5ICe3KTkD9xS91e6vwM5kzA7drRHTEoJbR7oCYX1bbNEoKM/miswhxT2MimNMKF380MqfNNG+CihMSaVri21+g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dgql3j9das5tth7f9lrqksrhtzdq3ws6yr5rz9","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","turbtres",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8FWfBlHjC7U2WyJYkVB8ba2vEBTdTSzJuPad2e64CB1"},"signature":"iVIRiCyVE5kqSDT++I8FNXVdNtGZSs6OOqDsGAruPsBbUsI3+5Ct1MJqTK8hDtHD3H7184ssOuDcP4VnhbWqAw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dgql3j9das5tth7f9lrqksrhtzdq3ws6yr5rz9","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["turbtres"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8FWfBlHjC7U2WyJYkVB8ba2vEBTdTSzJuPad2e64CB1"},"signature":"Ti3Ct5snywdWpM2b96IEYXJLKOP/+ju9IWgQpbETXRNBrHVBJXulx/6OQTHd8Dw9mBIrlhbz0WA6mo8mXR0Zaw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1629j0qu8ahwl4hhdl8tkgszj7arksf5mrkzndr","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"3cxbYLctMkBREBAxzB28URtb8l/iU5XmHwC1NCxnsApe2o6VYcta65bmuBhry52dffN+E+Btizl74+knVkbuMw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1629j0qu8ahwl4hhdl8tkgszj7arksf5mrkzndr","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","eyedtooth",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Apv5FH+YoA6L3fNOBf1fnQKEjulzdSLuE2esrdB3fRSJ"},"signature":"31pmg+8ravZYAzufY2S5jWZQo/cf4kpedOyomDNEcklChrt0C7YQZ8bXMBEj0a6SnPz7bNrFbabwNMm0/RaO3g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1629j0qu8ahwl4hhdl8tkgszj7arksf5mrkzndr","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["eyedtooth"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Apv5FH+YoA6L3fNOBf1fnQKEjulzdSLuE2esrdB3fRSJ"},"signature":"ilj+sjan9G60gkv7nc70L9MxnJnJSthU4RZWFOicjZopqiHOwBkkqQQAgzNvdLC8OR+bPgXp0cJ5sZhO4tIqHg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g17vxa4jxl9wa4dw6mz47g9zrx0vt73z89sqjwlu","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"9lOp7hQoshiAhSkHI2sU4fXo1rAYlctpHbCv8Qd8wfRK25JdzsMC/CW4nnmKeS/+Oa/oTmgpXuKXtCmpdKlAJA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17vxa4jxl9wa4dw6mz47g9zrx0vt73z89sqjwlu","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","dokplance",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Al5+vpe6KkI1zraM7mmlp6nOGuBDisXyXMWjvQezXdF0"},"signature":"mu2xfvmPo2aUzyM740Ji+LZFRIoN26eRnnmdr6P1JJx4SlGf5blXxz3arAuFuLQ/bsL3LGyHzm+FQ6LG1VLK/A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17vxa4jxl9wa4dw6mz47g9zrx0vt73z89sqjwlu","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["dokplance"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Al5+vpe6KkI1zraM7mmlp6nOGuBDisXyXMWjvQezXdF0"},"signature":"KJEYdEHjUVXYNEMOnLwm0bnQRrdf1j8U+sWQSN4m8QJN6YuCdLPVRguOPxIYx68djImBi/ZCNFwcmQUpaoWSpw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1v78z55ft733za6fg6rugs52k82aynyslrxdelc","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"3vwCRaDHm/SxxDxfFE+fXyf6efq9LEUrjB4FE2pUYDV3Z4TTBmkwbc6RT1lIEPp/yZ2N1vxIVAglgXRVrWuS5Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1v78z55ft733za6fg6rugs52k82aynyslrxdelc","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","sitecest",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ahg/NbDtwAbQ673/EbuwxKi0+xoMR11TJWgzURJci+Nb"},"signature":"qbFveDEj9GlrYTAMblmfPRD1ws4SISH69WrwOzobLJdJhTZo2EuKih+q11BC19m9GJPKekWWZwT0eA47BBh3hg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1v78z55ft733za6fg6rugs52k82aynyslrxdelc","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["sitecest"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ahg/NbDtwAbQ673/EbuwxKi0+xoMR11TJWgzURJci+Nb"},"signature":"QqtCrwnE5MlNXQbe/0IiwJhDfYcKBVqhpQQpeoLfQO5RTG8saF6InozAwNrLgGUD4Vez96w7N3DnEWCqknL/Uw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g17ll97ckgzj0sklty8aqqnr8mcqvvg6ysvyhw4p","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"DFAuAx6CnAkSrqtfpYQotOqPR/rNaX9K3w1LuX7RjPtOaJWpGdqcJsP3yjYwI0YPxkmD+JtCTWgs1CyrLtR58w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17ll97ckgzj0sklty8aqqnr8mcqvvg6ysvyhw4p","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","VadymU",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnCQwa5XhoBMKYKZrZuZKje9Rs9HM5Wh07L6wYPjMDye"},"signature":"RVDw1gJf9Ws9OrUPR7xkgMPDFVLd5If87cmPsKy5b1hcFwhDl+rfT5QRJzcCGj+6N6CHLf9pTN0gU+dk0h8dIg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17ll97ckgzj0sklty8aqqnr8mcqvvg6ysvyhw4p","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","VadymU",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnCQwa5XhoBMKYKZrZuZKje9Rs9HM5Wh07L6wYPjMDye"},"signature":"4zNX/tJESVDj6PXtBaPRtry33LJ5ElfO987+ea2Vs1E90Uf8/53viBN0V4WZMz/qWPK2kWH5nt5UWzv0yTYUJg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17ll97ckgzj0sklty8aqqnr8mcqvvg6ysvyhw4p","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","vadymu",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnCQwa5XhoBMKYKZrZuZKje9Rs9HM5Wh07L6wYPjMDye"},"signature":"aXeWtuJhHk5oRnx3zF6xz9yQhLZdUR4a+Br7w/1U8PZ8xB37fs+KTmTFPXI93dXOTHjvhnqRxUNrjdTnIGmdJA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1dgql3j9das5tth7f9lrqksrhtzdq3ws6yr5rz9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1280","Gno info","https://teletype.in/@kuuuk/kFrCqXP6B5N"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8FWfBlHjC7U2WyJYkVB8ba2vEBTdTSzJuPad2e64CB1"},"signature":"C9HNmvuWHbmZBRcppCoSzm4c1TfDzG53Glkhmw52MWgZ6tHd619w/WTaNQht/ZGdpI7uClfelZmGOXnkZf5mGA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17vxa4jxl9wa4dw6mz47g9zrx0vt73z89sqjwlu","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1282","GnoLand art","https://teletype.in/@sannn/3m5sxCONKNT"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Al5+vpe6KkI1zraM7mmlp6nOGuBDisXyXMWjvQezXdF0"},"signature":"6EeatD80ZBuh5I/XmRRkeDgsm9Wgrxn6S11TPRQFXqkjJtpjnrU6c4289c9HaNPPZ8Fzmu7hIzavaEEUbUmaSA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1hqguyyr8thgy0jjacptvtm6vvzmsukjuhut83r","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"2zjeWJAOT6u7HMElwbM5fVn9j7J791r751RdD46iVtUPbIzPBG7CyFLJhmfvv+6jAqIKjDwPEjIHg/mRERGQDg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ckg5ntr6nshnq8y4xyw588prn48kdcdzcheyyl","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1279","Gnoland info|project","https://teletype.in/@koktevrank/parElhAOUIs"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AteibZgGr4sz6S+Q/raYBD4D349612BmE/EAADn/eqGh"},"signature":"ACCHMfQtLSRS15Sy2N/FT/bq6nj1/h33yUPfLt9osFN0F0dtmX8hNkkljxH0Gx/tuewQ4ATghQg0WGuSbNJIdw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1v78z55ft733za6fg6rugs52k82aynyslrxdelc","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1283","Platform GnoLand","https://teletype.in/@tooot/_KhxLEL3DUH"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ahg/NbDtwAbQ673/EbuwxKi0+xoMR11TJWgzURJci+Nb"},"signature":"os3Emn/lZjrVboD/64VZ74C2XQJvrSLJK6/7rBjK0a0hTtno7k6Sn1oBqi8C0///IG+45FC3Yn2IG9dPzrI9nA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1629j0qu8ahwl4hhdl8tkgszj7arksf5mrkzndr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1281","GnoLAnd","https://medium.com/@dvkhomenko.ij20/gnoland-74687586ca6"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Apv5FH+YoA6L3fNOBf1fnQKEjulzdSLuE2esrdB3fRSJ"},"signature":"EtsEGDQQbPe3C7QerjP9WRIYndbljZqnxBrXWR00fsY9QhdiOCLGnk0X9qL5XQzKvbt2mB3NPXgpC+QfmHEIEQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1fzjcyrhv7rtrpwhsd0mhl9n7ahxm0v34p9w5kn","to_address":"g1kxa74mz8hul5tge3rvyep6epzhkf99x29zac7g","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7BGCHnC+0EaBkHciQ6D+fFVnlumBrn4QABY4FhxNlab"},"signature":"gf7OPJVYs3CWQ9YDNcvtok3+YYAMRsJs33OwpUB6snIKWsqC39lpvXmuhRVlXBlVvE62ve3sHD5cscACwNLRqA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1tqy8vkgm4s8a8jq54au20tfju03axu0k5jeqq7","to_address":"g15jmey7xajfcuw4090z9psl6q6pdz2gt9s98v24","amount":"1430000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7t3YoK5MTW4Ycz8m8RQPXQfLwc/2/JFqVj1gpZY4h1m"},"signature":"FZT3yIgub6BO0jqRLqrLSK8yTFlKOf5UrzJNAYih1XRpbWemebQj+8UDWhquuHFlJCe2o7Bccl3GfYeDf/QY4A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g13rt7q8klfcdlxvqxmaevk6zrspg033tczaujun","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"uXGZgDCCSl9JtTimwRJhGIXIxIJaSuMc7nz5TrF/m9l2jhevZHr9PYehh5U2UEBznBAFCa30+2AHa3kvjDTeyg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"er/XGDpIqaIXc8A7o92jit6X6Uz/T2pOrwI0qJ4XAbdcbzyvsFFTyqzrEa5kPwY+WmYXE5NeG0qPCwf24OU2Vw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g13enw4ph4jwh2mqv07pxcsesyam5605cydps77n","to_address":"g1qv3dqyw46fut94z9t90jka58saw2e7l99nzqtr","amount":"121000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3JoC0+RVv9CQsgf4X359CS2cPelnoPDiVtGW/ppfqfN"},"signature":"awtC5jsi4ZbW6H9lAAl9iYWWcO8s749PG2wTIjVjVo4CnDRbZl3llRxCEkDGBZy3+Hh78hLI5SXhEZSKUo6E1w=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","to_address":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","amount":"22000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"PbpulkgpokPaROnNu3lyfNM0nwdzd9o7GxdFfazUYyUrokv2g2V2mSzw9Skv8t1cE5pCZiSYVgDPZ42+vnspLQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","amount":"100000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"5aOj4PKUSnTSCCHlX6Sk7hqguboSNxxgHkCUJfAJXTZN9mgHJL2VEele5zPIP5bKwQQAiRCj7amGSWIwVuF55Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","100"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"MPEssN5dMYjIEk7lMyywamnmM57xesScc8YcmbJMTy5YbfjgAa2WvNTIFoH42O2jLBVjv//GKcme7s/91TmpbQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1l47x640c4petu4chfjge3qg2uplakx78hkxqxd","amount":"123123456ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"zXw6Jc1Cxr9spV2RItY9IPzCxLcQXlPdL+VgAm8e9NIFwaXryZqXCmtLHUaB9kXfzVwAdKkjwlPK9OZtr+iqBg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1l47x640c4petu4chfjge3qg2uplakx78hkxqxd","1234.1234"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"ssEbbP/urfkuWArtq9BELo90Cq6DPmCHYSxaCHkN7m53vDzuYxC7RsPd34vylATno6hp3KZQDTjAeZSqM6GsHg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1l47x640c4petu4chfjge3qg2uplakx78hkxqxd","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"oHIJvlRC4vfpFjyuob58MBD3lAEfnYXlDajNuijVlHNeW3lAz3KT5VqiOkegLT0/A1HIw16GZ5Zb2/gmRtAZCA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g13enw4ph4jwh2mqv07pxcsesyam5605cydps77n","to_address":"g13enw4ph4jwh2mqv07pxcsesyam5605cydps77n","amount":"1231000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3JoC0+RVv9CQsgf4X359CS2cPelnoPDiVtGW/ppfqfN"},"signature":"FtLahJqMpAiYzYcltGD6KrehNQJsBSoaza3shOxkYTlcdLCy0H59RRzGDDYw1f+acOfxWmQJdgcvVyTtJ053uQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1zl8pfle4w0jw2yln6pz8hy66y9t3eamrxlgzqu","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"CHTqXN2pOD/c77aQ6OYysGIF06SdERG/gX2ZffkzdGUUeDZqE1qCSRVR1DuMTNw9d7i3BzpZMJ0ajZRYkdtSgg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1e84jpp73v9g7pqh9t55q9c2j22fdlv5txslzjr","amount":"1000000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"LkZjb19SPX6sBBSJ17+vtuOm1spRP2LQrKgwHbDAPUcfUtUTsBVf/BeioKQPrc6D7wFcPPtEm3TPmSznE14UNQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"24000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"eIxPi7+dfHzWBCk8dKZ1xmVXri53RYVob69RMPwqG21FAZ7Z3vU2IWb7P9Uaqhz1UMpf01VK+mFXYYsPV2rWQg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1vjzmsefs0uznnpgfj2aw5fa5nz98287n3vtcjp","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"TZ8MpBArA/w8QOF2vH6LYfVvaHF+C47Bdm+puYzFZzM3oUHWA2gDTRhLnmcWlgNrqMvPZ5l4U5G5p4vamLaA6g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1djjstdz23mk5mysanxarua77hvqdhh3g4z3s4x","amount":"123000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"VLRadYCn8IhL5rUL94pbUzLORJqYNV/QL5ZZ4uVTozATroaZscSxLNpPTBZfr6LK2LYTai2d996/+0mswAOaqQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1djjstdz23mk5mysanxarua77hvqdhh3g4z3s4x","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"bkPPC/vuhFKute2YFSvLhLFInacOORrVq/BEKDumkHJ5nrCoDo7/dtHLUvakMq0n/OztEZTQb1dbyzUCP9+Dig=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1djjstdz23mk5mysanxarua77hvqdhh3g4z3s4x","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"119000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AzPHW5mkFNopo0z+MgYbIgDpAh3CuABM8E0/pUeLveDb"},"signature":"AlWGOu/Cz0GT0dXucY6CGIubIe84XocU4eOpT1zK0Q0Z01l7Hh0x9UWaXr2CztEWyqMAhSPZRGMbUvYZX6fN7Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g122n67es9vzs0rmharsggfr4sdkd45aysnuzf7m","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"t+OaD1n7KRaT8r5+hbA5dUgHARlOo8oF96dYbeIW/tkwKAfDY1F3fiVFHhUhoY/gP9Z46ALNMlcfr16/nrCNWQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1t4du52tfdfcnsrhlkfxhulr3r2a8a965zs07tx","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoWl1n0gPDWHmsIdghOux9H5dKTvm5LHh/7c9EXMTS0y"},"signature":"d2ZmSYm50OxZEqCJHRsHOBOxojfXmchCQ0/ymnLAoNtOFmy0UK2+Xr51U8cMN22EXJQmuoXlhHEMibOEXsHeTg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g13enw4ph4jwh2mqv07pxcsesyam5605cydps77n","to_address":"g1a9uhkp358r2d6up79k5h9mfvjwqu3c9rx5eahk","amount":"11000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3JoC0+RVv9CQsgf4X359CS2cPelnoPDiVtGW/ppfqfN"},"signature":"pQSsFvVAPJYgHo3y4KtPMU4N4oIiU84QhYqsZvaR8qkppSBXYXN2eO4ZOUNm/oO6H2f9IcLo914x468FqlLWeQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1a9uhkp358r2d6up79k5h9mfvjwqu3c9rx5eahk","to_address":"g13enw4ph4jwh2mqv07pxcsesyam5605cydps77n","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aqtbwy8mBWNNAfuR1Rjg0xgGLOly/H/zVw7SBh6bdacE"},"signature":"wMzbvknPnrftWKvWUgNntTV4ZyjZsCnB3xr/4L4BP5s6xPIdGBYSRDKR9JjrgJoNItdyJKNA2eo+dJc/8JRLHw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1t4du52tfdfcnsrhlkfxhulr3r2a8a965zs07tx","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoWl1n0gPDWHmsIdghOux9H5dKTvm5LHh/7c9EXMTS0y"},"signature":"OzrLOMOrfosSM9tkvDxopMyQHUdUuVkcQdVA0etzPf86CdXjciFoPN96a62dTA/fUF9g5ykmcQ3Ti+/YEKGFtw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t4du52tfdfcnsrhlkfxhulr3r2a8a965zs07tx","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","12"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoWl1n0gPDWHmsIdghOux9H5dKTvm5LHh/7c9EXMTS0y"},"signature":"mJ/7/BGkRgXrAAPcayD15UvjMjtTJU+yIR4a/7gWa/gmshx/UIaHu/bE6FfMZKPPvKJySbh1LkjrMUndNpDlgA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1vjzmsefs0uznnpgfj2aw5fa5nz98287n3vtcjp","to_address":"g1l47x640c4petu4chfjge3qg2uplakx78hkxqxd","amount":"10000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5rio4cXlt1a6zGynsJ2F7iOp/vD3fB4kZujJlIARmUk"},"signature":"9HHQwy76GshkjZqglWiG/xPkoOIVGBTcyxzz7sYisFpPMe5zGBmEHZSrd4Tb4ZPFYIRnMHmNla2WFwer5X0+dQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","to_address":"g1vjzmsefs0uznnpgfj2aw5fa5nz98287n3vtcjp","amount":"1500000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"Kd1RiPq/h+vP0jGfTt5zgRiGskd8ZJBOYa+EN/amTVhZU/dzxfrbQRYfFLgNFOB1XrB76J+u7+Ba/cKKO5hKIg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1vjzmsefs0uznnpgfj2aw5fa5nz98287n3vtcjp","to_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","amount":"15000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5rio4cXlt1a6zGynsJ2F7iOp/vD3fB4kZujJlIARmUk"},"signature":"ggtid1ED5D9bnsBLCRG76MFO6r5m2p2yLzXHSrV3/74Qa2KfLYLkWZiMKkvQDXJ3WNVjggDJb4d4pSzBObh3GA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g10k0fckdt6r4guzd57dm2gdzaqe6n999fstezur","amount":"123000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"kljG12xwTQHSz05+nSo/hA8c4P8BcLtJpBBkTlIn0NAA1BNEflUK1rEJZGj6aoLfLdPgjud9SNSaBgJlQv6u7g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g10k0fckdt6r4guzd57dm2gdzaqe6n999fstezur","to_address":"g1ckddn039khwxzu4v5mc8n34vd9ksaks2l6c3kg","amount":"888753ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/CMIicAVfrqPiGflXjRr73LE48VtlyCPtntvPUcFNvW"},"signature":"iae39tQJWqteqqtQ1XnDZ914pCPNcmzB0jDtoIRt3KAMx3HGWpTU43EAVDd/E6HIIgsidLBy1P6EVJVXNkFwKg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1vjzmsefs0uznnpgfj2aw5fa5nz98287n3vtcjp","1234"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"CcI5dclC565Zb5CsMniLztTQ9mJi9J6AVMAxdpfcl5ZY5gg6icqoGbQZEBmB3K4KTJ5fe4y2sdVHUsk9CAIisg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vjzmsefs0uznnpgfj2aw5fa5nz98287n3vtcjp","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5rio4cXlt1a6zGynsJ2F7iOp/vD3fB4kZujJlIARmUk"},"signature":"C6+Xl7iuqlkWabSwNTuOHPBKu3uhih91tSC5DRH5RwoAhpAi6Aeer+OwSRpbFuZVxOYP/rR8EDfp9FHBSV1WVg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1t4du52tfdfcnsrhlkfxhulr3r2a8a965zs07tx","to_address":"g122n67es9vzs0rmharsggfr4sdkd45aysnuzf7m","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoWl1n0gPDWHmsIdghOux9H5dKTvm5LHh/7c9EXMTS0y"},"signature":"b9IlBT/88F/eKF8g92BPks8ifRwQKaIistnG8D5rl2FCz4b8ZUrZ9ktRlI4OGvpl1ov9Q++IBSdzrftMG0ODVw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","1231"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"hAIrGfTF6io0BLFkN/UjU2N9XunupIAL5WxOt7g4k8lOEt+eGHFoLqIDrIg5DPCdjRabyeDcGsy01mXCMwQP/w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"/r/demo/endgame","func":"hi","args":["1"]}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"2Npb66GW7vEEbgc1Sw2QR+NdjooHonV6VuqubNAYlORMx+3qA0toS45flVLGuGiiiwE+ri63kgWldf1o1MM1FA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"/r/demo/endgame","func":"hi","args":["1"]}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"1ncfVGrqJylYeJ4tHI/oCqoJDxclxoGHZ6k6IztixAonZZ/yQLNWyg0A1/rQy94trRIhrxbQ0ZldVSHowhlqqw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"/r/demo/endgame","func":"hi","args":["1"]}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"yv62bTTf+BeADoPC26tjBtKffviiChNdd1rvqS7V9x8Mbhq2fMlMKZnPAJo0T//hq8QQW1gBUeAKM/nTEmjiGg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1xkp4ervu83fl978rplemq990n5fvk4n3xq8d30","to_address":"g1k8f0jnzkq05zxeaugll8srsr8t2dyfj62958cy","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AvJaVh8yh+reix0EEt+v0igy/fu8n3JwyI1keN3TY0II"},"signature":"1hxmfsScbOd5kx6VFF/YtW8Zjg1iIeCKZm5CgYFnWE8aPtjME3OIkSRrjClqFFtxQitn+6V9zxUloW7FcAdE4g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","package":{"Name":"tong","Path":"gno.land/r/demo/tong","Files":[{"Name":"tong.gno","Body":"package tong\n\nimport (\n\t\"std\"\n\t\"strings\"\n\n\t\"gno.land/p/demo/grc/grc20\"\n\t\"gno.land/p/demo/ufmt\"\n\t\"gno.land/r/demo/users\"\n)\n\nvar (\n\ttong   *grc20.AdminToken\n\tadmin std.Address = \"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae\"\n)\n\nfunc init() {\n\ttong = grc20.NewAdminToken(\"Tong\", \"TONG\", 4)\n\ttong.Mint(admin, 1000000 * 10000)                                    \n}\n\n// method proxies as public functions.\n//\n\n// getters.\nfunc GetGRC20() *grc20.AdminToken {\n\treturn tong\n}\n\nfunc TotalSupply() uint64 {\n\treturn tong.TotalSupply()\n}\n\nfunc BalanceOf(owner users.AddressOrName) uint64 {\n\tbalance, err := tong.BalanceOf(owner.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\n\tallowance, err := tong.Allowance(owner.Resolve(), spender.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn allowance\n}\n\n// setters.\n\nfunc Transfer(to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tprintln(tong.Transfer(caller, to.Resolve(), amount))\n}\n\nfunc Approve(spender users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\ttong.Approve(caller, spender.Resolve(), amount)\n}\n\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tprintln(tong.TransferFrom(caller, from.Resolve(), to.Resolve(), amount))\n}\n\n\nfunc Faucet() {\n\tcaller := std.GetOrigCaller()\n\ttong.Mint(caller, 1000 * 10000)\n}\n\n\n\n// administration.\nfunc Mint(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\ttong.Mint(address.Resolve(), amount)\n}\n\nfunc Burn(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\ttong.Burn(address.Resolve(), amount)\n}\n\n// render.\n//\n\nfunc Render(path string) string {\n\tparts := strings.Split(path, \"/\")\n\tc := len(parts)\n\n\tswitch {\n\tcase path == \"\":\n\t\treturn tong.RenderHome()\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\n\t\towner := users.AddressOrName(parts[1])\n\t\tbalance, _ := tong.BalanceOf(owner.Resolve())\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\n\tdefault:\n\t\treturn \"404\\n\"\n\t}\n}\n\nfunc assertIsAdmin(address std.Address) {\n\tif address != admin {\n\t\tpanic(\"restricted access\")\n\t}\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"9000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"fKdwh3ZXDzKMMtwIl6PaSp5Cdtq7D5Mb+vBnUB4scZ0NxsUeZcjaN7EtZ0JqvsmkWAhaYiy/0vihh2AsOKbeRw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g18cwpdpsqd8mywj8skpsqsg9tn9hudkkpa6ycpe","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"VE8HKgcrt+UEpsoHUl0YwhH3UrfsWYOIwUSIU84OAI5Wu3VIIQ+rbLcBXHq8UzP0rmZi2a/rGdvI68QQRo7zbg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g10nayupw4dxmmue4j45m8unyy28y5t7h9j9vqfc","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"BaTCNfEFOmz6AewxopBmFUU8nVT21g4rPJYVhRyeXM0tSdVWORtxDPeFNRi1OEh2axoxUkX3PoDDD907iK2XDw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"tong","func":"abcdefg","args":["tongtong2"]}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"qygZC4RSIYCkpfJATwuUGyGrhV6W6pA8uygLWVG3Pnss6ugW8vvYOsvTqUTiivlZyv9IMWDI+ZdpeVLbwtAfxg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g17mcw908lp5y006avp4fjr082wrzryzqh2qgr8k","1234"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"CartCiWYcDzKDMBLz3PuP03P1FDYkMR5oS9ckaAVQj5seWavPLqyNonPT6OlD3EaEDPmrxCynOy2JTgecvu1cA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g17mcw908lp5y006avp4fjr082wrzryzqh2qgr8k","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"v3jVQizDGqCVzREwocJbGRr6JtTuoErb1q/H+SoxafUOArX8wL1rf39JfLjtgNPyZTUHpesj1cp00vY3hRF5VQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17mcw908lp5y006avp4fjr082wrzryzqh2qgr8k","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1234"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1Ie2uJQVGI4K/6kwsKQkZK48YDrk3Ic4DKiVS1Ee2yL"},"signature":"2yWTb7rlUq+g9s+i/niDAqMZD0uK24CY0ejBOJ+Eu7cVk1QE7oi4sn5J7Kf8ZXsLy2wYrmYJdRF+mfycOcFXEg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17mcw908lp5y006avp4fjr082wrzryzqh2qgr8k","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1234"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1Ie2uJQVGI4K/6kwsKQkZK48YDrk3Ic4DKiVS1Ee2yL"},"signature":"tC+M1gVK88O2CYhKeo2prq6Moe/XJCgz53d2LjpzOh4mD0LNiAByyL0PkvTyX5ZPLiwnCzJ39/sA6BsD7G1+Zg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g17mcw908lp5y006avp4fjr082wrzryzqh2qgr8k","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"2K1JjkdIXQoh23gFCe3zHjb8cz7xMkNlH5k6mrM8qixzdGj0tbFsgD3nfm8CJwV2ig9Iw+pPxPZZ8kXO/u8NNg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17mcw908lp5y006avp4fjr082wrzryzqh2qgr8k","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1234"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1Ie2uJQVGI4K/6kwsKQkZK48YDrk3Ic4DKiVS1Ee2yL"},"signature":"tH2oQxdIjMTd5DxShw5Bxg6IqbYCsGuGW7HKtOfOV+gvNJ+ktA40DH/fBxeBWlFMGQWr9C1HBiL0T7nT24rMfg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vjzmsefs0uznnpgfj2aw5fa5nz98287n3vtcjp","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5rio4cXlt1a6zGynsJ2F7iOp/vD3fB4kZujJlIARmUk"},"signature":"Ic0vZ4pGynyD9dKx6d8uiPJW8AJjxhrQpZUcWhr9B1opmmZKBdqY3B4fI4WLOmYpjuLN0Ha0FnQ3LiF9zPsVkA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17mcw908lp5y006avp4fjr082wrzryzqh2qgr8k","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1e84jpp73v9g7pqh9t55q9c2j22fdlv5txslzjr","1234"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1Ie2uJQVGI4K/6kwsKQkZK48YDrk3Ic4DKiVS1Ee2yL"},"signature":"lzkw/ShEb6PzqWe35cvd1SDHDgKcp6z0JPQfTDnu4ARBn0DQieaoM+qTT3gaBndTsCjISHZ3m/Hxr/2pA/amFQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17mcw908lp5y006avp4fjr082wrzryzqh2qgr8k","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1235"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1Ie2uJQVGI4K/6kwsKQkZK48YDrk3Ic4DKiVS1Ee2yL"},"signature":"BIzjhcf8Zomtmr1te3KWqPHZ0v3CNCUUINRtpaRBXTxWwCNxFl+qpOy+/ECDMJO4LhKRjO8nVuV1O1UIdPLd7Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ycyclyqnc3msyfdjl94xrlqtjy6fp9fzep0ukn","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"GG88jNduguFFwpvChgHgVTjcYfUemysh2qkfq45dyvtkZeALq0/EA2zgESXVErZvuB0RMFRKiOPE1C+4ITRtXg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1ycyclyqnc3msyfdjl94xrlqtjy6fp9fzep0ukn","1234"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"vljrt8tJ0zw0RGzWkq3lwUA7DmWEfzvE6/xzOae9rbNV7+wrA7csmyjrWInQH5eufsYUSMJuq8yGRBTfFVCRsg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ycyclyqnc3msyfdjl94xrlqtjy6fp9fzep0ukn","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1234"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApIMC2lUdC0DYUYQdGv3fi/O/93XEI9jZqPtN+Th4O2B"},"signature":"LCSgiqJm66RlNSaPde3pV8DtmoEKdThzZf5D8gGD2xsoBOy+i6FKzmAzr1a8iJnMWkgTpLmB07ExRC5MG9CF3Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1l47x640c4petu4chfjge3qg2uplakx78hkxqxd","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1234"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3+XBwhRNxB98UM5CE/sbFKQFUNrwd3wclkoRFngQHN4"},"signature":"x7/pdOBW28Ywz6EODrYS1o8S/o4TGpq2XWvKYvDC72EgeYvybmvfU57UQFKFvfWaqxx0hFxIPugXMvea4im9/w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ycyclyqnc3msyfdjl94xrlqtjy6fp9fzep0ukn","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1234"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApIMC2lUdC0DYUYQdGv3fi/O/93XEI9jZqPtN+Th4O2B"},"signature":"RtCsrJCaP1p4QwPgX6BIz9rhx2O3MO+64aGhrfsMoxZF+gkCwGG8vEsZJJX+YEccOOQAoqmZrFDDKEdYd3IGiA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ycyclyqnc3msyfdjl94xrlqtjy6fp9fzep0ukn","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"155000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApIMC2lUdC0DYUYQdGv3fi/O/93XEI9jZqPtN+Th4O2B"},"signature":"Vcrw3rD464dNaCHof2waYDU5aFDMNSwP6lRimlsKlscsHdr/5UcAEKigXyBnFf/SmlOJN3xfJQgCjdhGt8Yonw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ycyclyqnc3msyfdjl94xrlqtjy6fp9fzep0ukn","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1234"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApIMC2lUdC0DYUYQdGv3fi/O/93XEI9jZqPtN+Th4O2B"},"signature":"ymM8F/BlZ+JG/93ap2Ah/3ZastFporXlVLt42YcPmCAgHgTDkbo6emFTh+y/d88HTy2y05LR1RXMgiFLpn8ZzQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g18t9pg3r7yy6cpkzmqpe5n55ua38lhpcazqejtx","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"f5CP9lJkHv1eXLGr1nXPApY5zm1TfYPxIcRcHQAIv0cIbkrGkqDzPjsN1aW674iIl608aIU5KOJXmFwBc5F5Xg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g18t9pg3r7yy6cpkzmqpe5n55ua38lhpcazqejtx","amount":"123000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"zHtd4pkM78spDKny7Up7LVzm3Ai7ZD7pkuBtRk0QuEQddsXOm9YuRoO9BDQcNtkgbQCCHV77TmkLWs41C0uueQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18t9pg3r7yy6cpkzmqpe5n55ua38lhpcazqejtx","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Agqw2ifxy8PgpPGWCJWiLhGlxy7pavaUmVHy+SgFhuvl"},"signature":"PJLsdYqAhsfaJuewRgYYFHcJtsKziG6LXzXganBco4k8HweelWldPsGx2TrqloD/U0cH8VNmKaeKnwXVrUG7Ug=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1cx2fnl0uyndrxp9ymn55a609ngd5v34jut7je3","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"RZo9eu/AEUQYBpofw+JVfAEe2He5xYuQVW6vNulzlAtIjbHVlNA6lW5utAmL6cX03Tgfq4l/o4jU0soIbRAEbw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1cx2fnl0uyndrxp9ymn55a609ngd5v34jut7je3","amount":"123000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"tqBNtjfUjCXNFVVkZZUZ4/b09aBYe8VajStvPTw2lxV1kbaIZiK2TkjX0Bn1xzCkTZFSWy9uA/fbepFkeNAsag=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1cx2fnl0uyndrxp9ymn55a609ngd5v34jut7je3","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ai3QQ5IypJ3I8nDGopu65ryI+4HCaUAVp2RNkAtPCvVD"},"signature":"HaSULu1dnQmQCqI+Fflh+kKah/3xFv+vhCtmX25xWf4XfOwlFb6WkS4YvHveV/eDu3rx3BXjQAJr3z1BcpXaTw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"QJwqNyuVDc3oYfISI6pQvaVJY+sY++dLhljJB0vYXjgZv6noj/Db0v7j3ZjlE+tQR/n0IKMIBUXGLVDAY8irSQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["2"]}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"AJfiNoyVj3VgO4HXpnYaYEMIgh5K1vb9YIg/5lMVOHtKSMtT3s89sUzRWUvwekcWXOxbkkHxzEBOf96yMoz6VQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["abcd"]}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"2KrwrCrwbSUdPbQkjCbczhHRMhJVCJ6leYizosU07r4wwXdrl+RneIG2s7xXZnD7PYek32QdeRFr4R35Feb/uA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"2000000ugnot"}],"fee":{"gas_wanted":"60000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"BIDoyHx9baHKQHhOx1yona0s0uvLFD9Sf0iOGeyX0ZM5a2QPi+Fzy3KEygDQOAGQV1xIwsQeksO+HTPH4CRayQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["abcddd"]}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"GhnVL6tJ3I/fUFZYSQPS2BFJuMA3iPfmXewBPdFh+CdjhZgRRVu/Ci8C+PJDhW/6PRlLOZ+p0nnqgZJ3RlRr6g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["abcddd"]}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"5+6v+D+E9cPdedpuVlW+N6xks8J3FOTC4iW6rUSdO5EGPYLZetLTpR59yr78lzzC4LwUajK3wZfBQd0vSPDAJg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1cx2fnl0uyndrxp9ymn55a609ngd5v34jut7je3","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"P+xLrmmP2DsFqN/gg4sLGdHUlxrncDkevTn5kbLKqP5njDJY2GtHnI7xExYYr0a/NLuLQsYMH8O75vVFaD4A/w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1cx2fnl0uyndrxp9ymn55a609ngd5v34jut7je3","12"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"hSlbLWf552xfzKdK7q8QdJrEZY1GUA4nkuYPR32GfdI1t/0mIFEbTSN9pO4M+FFGTWUnTKaxfSfaT8i+nvesog=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"10000ugnot"}],"fee":{"gas_wanted":"6000000","gas_fee":"100000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"2Y2SYGALxp64MI4DkLBoZnfKwMLJetazlsxYjhsZyksd/lAfmiHocj5/c+yAfEUvn+MPP7J40YsAMklH08ewxQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"f2vaQJjmHCP8F5dvMR5Zy2LSGB/icLC4PT2kn4DkJ/J05XSCwtb6pwfWiFZ4sBlvM1TvpA4Q5VQUkgeZ4whpnw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1v0v7nsc46errsdhynmhu8e7e2g7l76n2e3kz64","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"e+WKF1Bv6JmoMwO+ytANOJ304mqUl1WRaFHPiA5fO/RPDY/jCub3esAcuvKbzMKKFudsXH/nnqnaICKm/tVrLA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","3053"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"KbrMDvsdmXoUJtaaHpUtluqGuLzpPHnFmtYrq65/d7oWZ07VaOQ6YgPV696xdqx9brpTgi68zsnUTNC73J+U+A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ycyclyqnc3msyfdjl94xrlqtjy6fp9fzep0ukn","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1234"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApIMC2lUdC0DYUYQdGv3fi/O/93XEI9jZqPtN+Th4O2B"},"signature":"shG3b3zBhKHNyyvvLrQoH0Yv0iZdW/aOo3J0F5g3r0sXYpSs2Wm76rnx58WFlHUk24fiwKZWCFCEg9wQDXMVIA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["42","gggg","HI"]},{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["42","baybe","Hello"]},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"5000000ugnot"}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"xiC/+ujCOVZtnV5JPbNoeg5q4R89DIvxy1k5kiIAMPx0Sj9r+gRXzEFNgApddXSvphwX2amE0jNi+d4O8jVm9A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["42","gggg","HI"]},{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["42","baybe","Hello"]},{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"5000000ugnot"}],"fee":{"gas_wanted":"3000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"SglzfQPBssF1TLdAYfF/H6nXVX76qrJehfSoxN+JwtFOUfp6rHDZ+JubLIwV9RJtq48yfk510Wx/Gm2qAJcK9w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1l47x640c4petu4chfjge3qg2uplakx78hkxqxd","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3+XBwhRNxB98UM5CE/sbFKQFUNrwd3wclkoRFngQHN4"},"signature":"yHe2pCFYYRGfaX6SDXLR6VEO69IUtrb6uKZLjz9cLNY7zC51J3vtNx2p22FruPqssuje2hp28QARLwc3VCm6wQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17mcw908lp5y006avp4fjr082wrzryzqh2qgr8k","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1Ie2uJQVGI4K/6kwsKQkZK48YDrk3Ic4DKiVS1Ee2yL"},"signature":"/HsI0MSYY7RlU4iX6O9Snw26AvthV7yLtwaEJ5xLR3k5C0qq2t+NfKEM07HUqWb4KgP6z9WpJ5DYtzNAIvXpsQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","send":"","pkg_path":"gno.land/r/demo/tong","func":"Mint","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1234567890"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"/VpyYhnUvznfzUM1NN29wZAc/YzV0+vRPRBuuGSjkCEiqGNpDolsd0lsQ7AGPpTi0Tv0hwKx9kS/SAfVoHIwcg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/tong","func":"Transfer","args":["g17mcw908lp5y006avp4fjr082wrzryzqh2qgr8k","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"EboxmT2d/96wAx1taOYXybQT4Xqy6c17yu4IH5Cuk6RMroenafkJv11EhONECAJZbA/0tAAiQIqJRSiasbYMFw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17mcw908lp5y006avp4fjr082wrzryzqh2qgr8k","send":"","pkg_path":"gno.land/r/demo/tong","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1Ie2uJQVGI4K/6kwsKQkZK48YDrk3Ic4DKiVS1Ee2yL"},"signature":"tiENnnIZN3W8Y0keqUc+1xZJyBOLyFnabF6hqaMqGooX6qDIEshflIizQrAEnxAfC4maDdgwlQ1Enmc/ANCEEA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g17mcw908lp5y006avp4fjr082wrzryzqh2qgr8k","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"100000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1Ie2uJQVGI4K/6kwsKQkZK48YDrk3Ic4DKiVS1Ee2yL"},"signature":"4vdmB0QlY4nHWXgep+W9MM67ljgJow5peTBGb3Io7b4+Z/EnxEQixTYF81igpwWI3v26SYUDAWkz8tpuylMsVQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17mcw908lp5y006avp4fjr082wrzryzqh2qgr8k","send":"","pkg_path":"gno.land/r/demo/tong","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1Ie2uJQVGI4K/6kwsKQkZK48YDrk3Ic4DKiVS1Ee2yL"},"signature":"4bSmuRFolTX8s6MGBw9pKwtoADxmHQbPVEYCGXUNqkBXammuJP16nyEElETMtoyZmI71wN+aIYQUomcW6cQyXg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","send":"","pkg_path":"gno.land/r/demo/tong","func":"Mint","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","12345"]}],"fee":{"gas_wanted":"9000000","gas_fee":"3ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"omSzo3L8sxiyLr5nPjHB7iGxdNrw3Utoq7OCfPadw5oDIq92VdE0xkUgvR1xqnfuFUHqqIOxR40pQSpJSZChMQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1l47x640c4petu4chfjge3qg2uplakx78hkxqxd","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3+XBwhRNxB98UM5CE/sbFKQFUNrwd3wclkoRFngQHN4"},"signature":"S1dijHxYrdfF7HhgCTO7+4j+dIqT+imkQkdWPPFrZYR5q4q1ng3xPtkUf3XdwrJOQqeAf66TSUoBQCu6xkofXQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1l47x640c4petu4chfjge3qg2uplakx78hkxqxd","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"12000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3+XBwhRNxB98UM5CE/sbFKQFUNrwd3wclkoRFngQHN4"},"signature":"rTVMFFAmOQOCluyQJ1lnLJJiu9chEILN7zjdRpchm+o2wMMmlSyxWEVozEmeguMe4ZMJOUEnllEz9nD/Gtmzzw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","send":"","pkg_path":"gno.land/r/demo/tong","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1234"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"pBUjsgl95J/ceB5GohJ3U5xGrlljHUe21z1CGa3XCTN1CixYDVdIN7B4Ou6FDn1apbTUp7UkvEZVFKky2vMNVg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","1441"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"40kzPp/y+RwGynfI3hhpkt6eQIozCSFYuxNlqiAWg1kBYwETU5QFs24k9vvg2Z6CrNmh2rHV1/xZV9krh+PwgA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/tong","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","4885"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"y0Fhhub3DcwNub+31L0HBvALygVFhAcq9k2oKq+QDwFQF4OglqamP5ZyKZYYvWiEBlvqE8nO1o31AYmodjaOPQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1l47x640c4petu4chfjge3qg2uplakx78hkxqxd","11"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"1yB7TQr6NA4a5qvZmHOrSQBLw0rMEorKFaSd3QBkEe8cQW+3bnsUl2P5CAcFpPpHwxQHFKWcTtNMmOowmHtHtw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g14u5eaheavy0ux4dmpykg2gvxpvqvexm9cyg58a","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"PQAXIEnfvWG+xLnfw2tbZ1EVoCGOj26wXjei449awdgsV33ye3sAhEfxNIkujn804SvyJ3e+mVdfNyzLem5vQA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g13enw4ph4jwh2mqv07pxcsesyam5605cydps77n","to_address":"g13enw4ph4jwh2mqv07pxcsesyam5605cydps77n","amount":"100000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3JoC0+RVv9CQsgf4X359CS2cPelnoPDiVtGW/ppfqfN"},"signature":"FuyfOnBrqW2dTwkTwfbEfBgHsfG93TBbNcNrn77ybUF0woTj8gU6NOS9n/5x4HrbrOnnm5zKLYhlN6sI51vcJA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1cx2fnl0uyndrxp9ymn55a609ngd5v34jut7je3","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g12sgp6xgtyxm53tt2ed004q5f5hjuv4m4mx72f0","12"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ai3QQ5IypJ3I8nDGopu65ryI+4HCaUAVp2RNkAtPCvVD"},"signature":"ElZ5mbL35Akm1ZMxKDmrKNN/5MDSwPFH+m+yamEDMd1XGD5AGpMUNCbmK5a9FOqb7nSWi1VdP2iWU8xktciUDw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1cx2fnl0uyndrxp9ymn55a609ngd5v34jut7je3","to_address":"g12sgp6xgtyxm53tt2ed004q5f5hjuv4m4mx72f0","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ai3QQ5IypJ3I8nDGopu65ryI+4HCaUAVp2RNkAtPCvVD"},"signature":"UZHv2ZN06NDs8WHoo72vaS6Z83z6NpmIrLixcwRfuyZoYtXFG9FLtebLKJwrCk5zOP9ff0VHn0X0/xlP+b4mCg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12sgp6xgtyxm53tt2ed004q5f5hjuv4m4mx72f0","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1kfr596aga445glhznku0l7lm83x9lwffgphu4d","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9EQO8BQhB5KPCD3dY61yPCmM8fuJGbj9Ixh+RasPaE5"},"signature":"dUQbrKcBVdpMan/653txtV63jVvwZS2wc8NgJmminAFPCChAhkwETc8fE8JM7bggMOVFf6kByHvhuQlZwmgoGg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","amount":"12000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"ialK/A3WIqvm2lqZBNWTr/7F1wLTYFAFiANqvTbIzAdRsNJteLpSvv1sYQb+Rk7d7W0UUNlxAoRKKpOMvVeiFA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","12"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"yUkawCdEkO9t6W+HfGIHCCop+IRr8HYyt49QFRWb3MVJjkwgSSAr7yhUSLXEiEz6F9tmbnsrzPzWh0bASbReFw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1lc4etxqxunutfa2rkfyd0fyn72ers93dj7f54k","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"c+IQ3RtMC4F+yGw+U9mICTT6MhWEKuYzi52ptw75S/8FhTuaBqmLABgupVS2MLBiLbbsudscKhb9bto1C4V/HQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","to_address":"g1lc4etxqxunutfa2rkfyd0fyn72ers93dj7f54k","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"MrFhB38BKxMyv7nQx1YrkBeqMD19UUTsw8chCOZWTWo+LyN7WFEf749iyjCyDEiGBKRBoYKRpOJXO6eFEaFZRA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lc4etxqxunutfa2rkfyd0fyn72ers93dj7f54k","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgCUpi0IIL79VObxUbID03WOPaRO9DWI+47VmR0L9Ofh"},"signature":"dZO7vSY+IFCUDD+6KjBo1QovbJQu/jhEB4JBj6XPbsEBST3oVvwh2S8aBvOwUXoOJZONUrZn/PxHGPIZG2a9ow=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1rz93546e2sx8g0dap0t66gx70sqk5r2d33jtfu","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Ij/GVrswi3eNFTG1Bmxu0nRXd08Vc60TRTFhO8anGtpFOcpxNhER9VwQ5sAj3XBMF6z++zu2GI74wSRPyDSO6A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","3"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"eYRf4iIIi4ZLA2hEw96NRkhgxq04mQy6o3cbuCGE33dHfo3qWVidY1RtKMWyiAbBvK7NQYpjWdE1Zlga/qrOgA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","to_address":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","amount":"3000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"gjlmgUH2iZ33hZP/sfohcuA4Oo3rW5VZx+0Ur94Ec2Z57CFMxOs3/x4VYQ3msc3AXpgY3VgX6+NxfYvBn34cNA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1rduap2ftq0ga9ty2kkryl3hve53wxlamcq2u3f","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"YLkip1CdosCKEdvJGVSFURfRv5eUTScO9sFCK4B/dRAqTfeQ6rt+fAhtesXGuRnqg914QZlR7MCCotJlte3ueA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","to_address":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjXSDQU9TKRTkgO1gnAj6TAH9Y4wIdQ8dV61PRqgpuzo"},"signature":"Zd3b+avCbZSnn+B9N6ojsMHCT1EnC5eHUncLtlbs5TRlIoa5WGHH7vLavW3qqy0W1+2BzRpgRIux8C7v7KEXrg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjXSDQU9TKRTkgO1gnAj6TAH9Y4wIdQ8dV61PRqgpuzo"},"signature":"BPUlnGbhNepue+Ngmn5wM6r8f0chAO6wRFTq2UUZA+khRNUOq64aVuWAAX6Kg8JGhhnQjm+TfNHPpD+2r+u+Uw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1laqjhsfh90znsugsyqpjawl0kj9dcwhv2ee88m","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"UmbNf0WD5vKjlif4NXedNwX6vjkryenB6L6PhInbA1IbARQlD64jY5+AABz2kRR/m/pP2dvzk4zOO5dz06JoNg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1hvg072r05r9rycuerejxuvn32pfqc6vzdymsp7","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjXSDQU9TKRTkgO1gnAj6TAH9Y4wIdQ8dV61PRqgpuzo"},"signature":"Rtzx3OtpZd1RLJlqxUy+o8dr4SaiRircpx6jxzBmtYt4kbYqCN6VUnN24xfmYd4uIuhVWM1/mOHGJKgPt4zI2A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","to_address":"g1hvg072r05r9rycuerejxuvn32pfqc6vzdymsp7","amount":"160000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjXSDQU9TKRTkgO1gnAj6TAH9Y4wIdQ8dV61PRqgpuzo"},"signature":"GEktCqlUo6EjztAsDBlhJbk9xrbXxCkUh26+EfEmu2NPyDbQaYPniIRDTiTyHJV7RIfpPpjcZuQBAdpmZlsOuA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1hvg072r05r9rycuerejxuvn32pfqc6vzdymsp7","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjXSDQU9TKRTkgO1gnAj6TAH9Y4wIdQ8dV61PRqgpuzo"},"signature":"5IQmMBhS9Jnnlt/0edlOKmbFq4i2j4LJkDma5YNuDroRk/2+OZaOZmQ/WWlZHac4PU5O5Kc1tGCZI2tXVvVPjA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjXSDQU9TKRTkgO1gnAj6TAH9Y4wIdQ8dV61PRqgpuzo"},"signature":"/tTC7L7Tcly+nHST668VIyGzYweX3Gn1ag6MBNbabPV0uh6oLnMir3hv2jhqqdeCq7M/PoQsAdxkLVv68ejMJA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjXSDQU9TKRTkgO1gnAj6TAH9Y4wIdQ8dV61PRqgpuzo"},"signature":"3wTXR8EAv35Sg4lZxhKiHCODrfqGdPUrSE37GU3ey7hRyO+aLNWrRSG4+pjfCd8kkNeW9AaVNI8esfVt6BF13g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15x4h2asdgnh7vagpy3hgmg97upghyd2hsjpxcy","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjXSDQU9TKRTkgO1gnAj6TAH9Y4wIdQ8dV61PRqgpuzo"},"signature":"dXV9wHQL+0Y7uBn+QXe5PaAHgtEfYrjXd6YfmnDK3s84acvc9UC0ETk7S2j/iQlCZpV5UWTW1alkOZU5gjT9Tg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","to_address":"g1hvg072r05r9rycuerejxuvn32pfqc6vzdymsp7","amount":"100000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjXSDQU9TKRTkgO1gnAj6TAH9Y4wIdQ8dV61PRqgpuzo"},"signature":"HPQh5rqU+Hx77tDFbHuUWpuOrYYZJ2JEZkWh4yO1Oz03zfPkIesJhq8qHY1FGDMsJZhlF8tyz3X+Ib5jqI6MIA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjXSDQU9TKRTkgO1gnAj6TAH9Y4wIdQ8dV61PRqgpuzo"},"signature":"2DhEoJFtUSNfDzIs3ULuMdP64R28mU/tDcS8Ps0EMRwuwFm0pyazg5fhdKUt4YrYLMS9UNtBQgTV2VKiS2lxKA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","to_address":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","amount":"50000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjXSDQU9TKRTkgO1gnAj6TAH9Y4wIdQ8dV61PRqgpuzo"},"signature":"xFUPFOORwXHORaaswYjBRDBysR0jaJ4Z+XKtHTj5wdAXZgBnBV5GjwgIaE4eXQ1h4aKEEWGJFzpqef+DRDOdAQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjXSDQU9TKRTkgO1gnAj6TAH9Y4wIdQ8dV61PRqgpuzo"},"signature":"6Ocv8CnPYy6bxveMf6I0qFmpB67gym7HsLP2Pq3R8fY1z22cW3laNHnlvVg7wGTOPmc+2PayGIwHdI+CXOpiSw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1d2mf6nlfqgswhwwu4k2pzhqr4z4z9yr63hgs38","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjXSDQU9TKRTkgO1gnAj6TAH9Y4wIdQ8dV61PRqgpuzo"},"signature":"11X5m/Yv6d84FvYvxji2PUF4hF0zXZeKk4GD+J7tRgUEAM0TitFWNMjfq71opo8n2+vJAeLN1p96pfLFRYEewA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","to_address":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","amount":"20000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjXSDQU9TKRTkgO1gnAj6TAH9Y4wIdQ8dV61PRqgpuzo"},"signature":"8pix/yE+Atw3r4fD63tF4vDCblFZo9aJEDjsB30lID5o97T8oj3oewyxWJFjbjYJ6w3SDREjehzIRdAvLMBkjA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1d2mf6nlfqgswhwwu4k2pzhqr4z4z9yr63hgs38","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"0bDVVsBBejmywjQZ/tsLgRkN0o3j2f+doklA1nsFT3NoERqNKXyNEzxTJcUQwX2pDxoFW9/8A1+kBZPT1I11rA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","to_address":"g1d2mf6nlfqgswhwwu4k2pzhqr4z4z9yr63hgs38","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"9wKLypO2HkrDiLZ7HfMy2MLf1gXTyQGBUU4ngzlMhp5OeL4z2jOHLXEd+X8ad+DwmQoeddTc1zzsjpoUtA/YIA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1ckn395mpttp0vupgtratyufdaakgh8jgkmr3ym","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ezR4CDaTmK9Q31LH1n9YzCS0JbjyIPRFgCGAiGz7rypDB7M4lBRfthQga1XPRtULmCViAW7TMjNZ7rgAIrTIKA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1l47x640c4petu4chfjge3qg2uplakx78hkxqxd","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g17mcw908lp5y006avp4fjr082wrzryzqh2qgr8k","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3+XBwhRNxB98UM5CE/sbFKQFUNrwd3wclkoRFngQHN4"},"signature":"2rfEYKcb+DHiNNWNkvZFgUALI1lBtrkADoW8NnfUlZ0ELiv2mxpZDO7lJLM93C/k+jMiEL93PFtgV/xqOksm3w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17mcw908lp5y006avp4fjr082wrzryzqh2qgr8k","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1l47x640c4petu4chfjge3qg2uplakx78hkxqxd","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1Ie2uJQVGI4K/6kwsKQkZK48YDrk3Ic4DKiVS1Ee2yL"},"signature":"Mg6KH6i+QXU9gef1OaepgJNnXnZ5wrdtKmZ6Knz1VJtgc18P9Brb/bE58ZLKE9pCuU6Ql5sJcwwsQWJjtC/VOg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17mcw908lp5y006avp4fjr082wrzryzqh2qgr8k","send":"","pkg_path":"gno.land/r/demo/tong","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","12"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1Ie2uJQVGI4K/6kwsKQkZK48YDrk3Ic4DKiVS1Ee2yL"},"signature":"XsBiqg1NBICM9k4O5NW7d4y4bwyvZ5Ov53CflqoDL+xcwoCcVo9iiH/2gU9oWpoKaw56tRd9VSaHnm7h0t0ahw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","to_address":"g1r7gpdsww3tf7py8lmafhukvth94q76cxrd3qxs","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"V5scDmEjsCAmRbJv0oHmaFxmZSUF1Uo0ywJ1kE4leUgPe6XdpNb6g+lbJVvnHG0ZkZS1VNgDR2wUJEE+jtBN7w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1r7gpdsww3tf7py8lmafhukvth94q76cxrd3qxs","4"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"3lrdIw9ebla0tipBSX6XjFn9jAmVR2At8XgAZ6jIOR4v9idSUD9G8XdB+tmpUTyJvERLGLIuxIQ+Tx9DpUrpAw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1r7gpdsww3tf7py8lmafhukvth94q76cxrd3qxs","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ahw8dmaVJjkzlipA5faujIWfAatrwLvvfF5QChED4FhT"},"signature":"PnqKA7et8oEPUb5EbaKCca7C3FHR1P5IKERJyIRKUF9IqWI61L+YZpDo8SnYOyIKCUUWxx8rnwp/iEi7Nj9eRQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1r7gpdsww3tf7py8lmafhukvth94q76cxrd3qxs","to_address":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","amount":"10000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ahw8dmaVJjkzlipA5faujIWfAatrwLvvfF5QChED4FhT"},"signature":"PJKwn1+9OFUL5lMtxYzgcA8ymo6bxq7sVvvvyIRt0zY/mFc37TZM/zKA7SsS7k/113XH2NA+hwK6XfKj/fjEAQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1r7gpdsww3tf7py8lmafhukvth94q76cxrd3qxs","to_address":"g1vhuj96kkxmr7fxu2vm6nnaxxskr767m6cehgcl","amount":"10000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ahw8dmaVJjkzlipA5faujIWfAatrwLvvfF5QChED4FhT"},"signature":"1URH+EH1UK+yT/K3gGpmPJMSLlrjpyLk+uypfdOGhktStN7llG4El41dw2c3Gtb+A+aumKXlWEn2WZhXGPG8Hg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1r7gpdsww3tf7py8lmafhukvth94q76cxrd3qxs","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1vhuj96kkxmr7fxu2vm6nnaxxskr767m6cehgcl","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ahw8dmaVJjkzlipA5faujIWfAatrwLvvfF5QChED4FhT"},"signature":"yYluZDdN1gwgrSGfAHll4VM7DYB3bPzyisRQZyYzpF0XdQJnaVR3aH9UbRUG4kYoPgXVWLYejfYhPMi4/GRIOA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","to_address":"g1xn0f2klma36k9cxyjg4kqxeky6y8s2rakz0csj","amount":"100000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"TN5wH4WJwI0iNJxpRxAB69J78TK3b3+B1/KrHE+55XdPRb+x9XvIUjq9We/IvJfERU430o9q0cJobEtmVOYNLQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1xn0f2klma36k9cxyjg4kqxeky6y8s2rakz0csj","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"R0H9YNnyll/Z5Ll3cQ/ZEtaswRLC6/Fsdj+kEige/VxLJyI4KsaneMlIj0/AlTYM5TrYDNrKzi9sizncAHQgAA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xn0f2klma36k9cxyjg4kqxeky6y8s2rakz0csj","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1yywc43qjgvcj8rj5xufxp2apr9wfe45ce47huc","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1uFd+XIjPtKSCNwaSB8R3N9c0NzoTUw6n3s3ilqh+/5"},"signature":"rTV9spFdEmLw4gBDuo0jqr1O2W46GaIKXEynZKaZk30K+KF6KPcFuDbK64rr5Xoayz9aCEaMxeg/0V+tk8Lm8A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1xn0f2klma36k9cxyjg4kqxeky6y8s2rakz0csj","to_address":"g1yywc43qjgvcj8rj5xufxp2apr9wfe45ce47huc","amount":"40000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1uFd+XIjPtKSCNwaSB8R3N9c0NzoTUw6n3s3ilqh+/5"},"signature":"LFT1VCmgQYyBpw6F9i+Y37O9yST8yzixXKciP8IuCwtBnTb98xRrYjNQQoOgoJ5qinJoC48Cu+evhCxRaUuemA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1xn0f2klma36k9cxyjg4kqxeky6y8s2rakz0csj","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"8JqZhC4Ekk4TeS5rBzSdc/pznVAaxLPUFU+6nDLEPzlOlwV2G5REW1P9h/yn3Vv0bcBPwoBTxlra1vucnQrI2Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xn0f2klma36k9cxyjg4kqxeky6y8s2rakz0csj","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1uFd+XIjPtKSCNwaSB8R3N9c0NzoTUw6n3s3ilqh+/5"},"signature":"ncvf9DIbFigBcZw0AYeAtIeBdCH7u3hWGmJIjDNO2oV7F7OFTM9HOxDzqwiwTsEGdnEscqQDqUwknOKgIMWv7w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1xn0f2klma36k9cxyjg4kqxeky6y8s2rakz0csj","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9/1C31yQAezwSMHVzo9t5Sa+loXWIa+Cv4ywAobNOwT"},"signature":"pSq3kTOQZzRUwTmgfI9wkekhsWbNaHGnMZekt2CrCnpr9L8Zqveqc5nuhQ5tMln0rnmzTXQVK1CQjrM9aRH0JQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1xn0f2klma36k9cxyjg4kqxeky6y8s2rakz0csj","to_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","amount":"10000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1uFd+XIjPtKSCNwaSB8R3N9c0NzoTUw6n3s3ilqh+/5"},"signature":"c7Gpu0QB5ZexPVJz5z9DbifYHF0Ebe80C6rKkALfXldXn+2WWntK/U+ACQ77rVmbGNxTkj5BVSbuEcJKBMMuQw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1lemr6nuun5md3kw22agcvnyatvt6zgea5hgzz0","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"rYF9f/jLMgyKyzooquBs3C/VTAykY+D8DiYFZgmk2SZRgDjJdbOSKee5cHqJCaCmxedouwsvkc9CcaYUrJO67Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","to_address":"g1lemr6nuun5md3kw22agcvnyatvt6zgea5hgzz0","amount":"500000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"4v2Nup5qN19/qFOgZGq5OJvmu9SvhnT+nNnw0Xt3mDk5Gox1ffZodB8D0DimMHp847vHBmEzH1CVSntPFLVNgA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lemr6nuun5md3kw22agcvnyatvt6zgea5hgzz0","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuCFC7MyxnIDIffBfG3DMCyxMwSVj801wzfqT4EfH7Ah"},"signature":"rAH5rGIkK2KNVDgTZ1tgcVgfgyi8WNM3reUZvDCWK+lrUaN5+SYYI9kFi8DE74bp/yEAfhYMuLSFK2/dv/YWVQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g16jmhfp0ha7l4j9fm3nf3gu95yrrvng3swumtv3","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"CTSLKdOC57TPVEIwKacEgyYr1VSkgO0dz93DC12aispD2FsQ0zGB6Tm8HyB+PKd32+66P0Nzgf8FHm7gDOaDcw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","to_address":"g16jmhfp0ha7l4j9fm3nf3gu95yrrvng3swumtv3","amount":"100000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"YzJWVobpiwZEpeG4kdVdeVi4CFD3nNCWEbGwM21shQYDLijqkXm0libeK9Vb1lXEVx/hH+6Tgx8SbM/zNXmYhQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1lemr6nuun5md3kw22agcvnyatvt6zgea5hgzz0","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"Zaz9JUk6wRnlqJzyA+ihqDYVPHxD3pxJtQhyETpe8tE9MO3hcjv+aKglDjubvLVVewvxLrgynVjbHvuh57zn0A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1lemr6nuun5md3kw22agcvnyatvt6zgea5hgzz0","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"8DLp5UVSOaQXTzD5OTtIdlUh0PW3ffDLSYXeIyK1PvdATH06u2LAkWbOimDx6Se75oUwimy1hrXCeis+R8bayQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"UKtG4hZczTi4oJnpW1im4BetN2Kk50ZTf94LXVP8cboHFFJuQ5Sv03L9DLf8mQq0tDXk4i39qBDRJXNQ4Bbcdg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","to_address":"g19fs7tzl2r4hpvpvxt9tvv54gpy6fekt8shzp4q","amount":"10000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"bwUWnauVW+5Fe7phZ88WkP/nzta+kWstdUqgYyuzl49Fdt9MdyQg3xs22FYynqwvDLCkH7e2xDgIJuUt3LChjg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","to_address":"g1e3ux3pgw36cev4u4nzfm6f0wwa03kuczkykzfx","amount":"200000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"nn0uiGf9Vu6DKcG14S58XvYdnEaJsUEx2+08biJReXtbPHqldoVXE95IRd26vG4ZlT6FoEZSCaoyFxXXAVAT1Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1e3ux3pgw36cev4u4nzfm6f0wwa03kuczkykzfx","2"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"sWQH+cyByCji+2Jc153amLqIjwirmHmpZV9pE6tW+UNMMFDe99Ggd+zTif0/dxNpskKUEP9ANf3vYR4pUxD3wg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1e3ux3pgw36cev4u4nzfm6f0wwa03kuczkykzfx","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"Ps34E2XVroVjDmqxkz0Wa2EuEJRp/DTSxt1TCveZMUcNssALG4O1rLUi4m7XISr/PBmbOAOcE8gROlOk7MHC6A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"78gBvaiOwFxZFuDZRQhKu0DX8V2+HPL4lxPEuBGdL04mXLVQfrIiIdT0ldrp5Q2QEyi/P93ZkAft5+ihc2rr1Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"50000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"0LLM2Vq8grM1M8bfWoX1bVwSZWP6Jeo+boJmmUMP+egPzj3d6QQSH3W0Zo9nc0BiFpynuSJ3i9RLkuTPmJvcEA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1v7u984nkczgrsqmnxtjhck0q65alajy2ts73tp","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"ggatLOK088ORiWzW2h5pLe9hjLwSSlSmVCC7FK5yl8ga/xQdHbgsg17b7Jozm/vpqfndyVXX8ZKYZnsOa6k2Uw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1v7u984nkczgrsqmnxtjhck0q65alajy2ts73tp","amount":"123000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"P3TwbNvlnOs3qOtLWKfNOQPWU+QeDqNvuJqOQOeEMzZnotqt4fSnVs23Defx0t+KxZh5ndTX1VjaNNlLIo+zIw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1nwlyszkdcm4fn38v4gdr9476ds5896ny2t84fj","to_address":"g1v7u984nkczgrsqmnxtjhck0q65alajy2ts73tp","amount":"20000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlEGF5eCcqQpBQ3pdZg6GCh5NTNcKII91kqD4VZk3QUq"},"signature":"d6k/Tp/qOumQWH+0caFB6jBUoOzcC89mIH4kdTgge8ss7P2dqG48dEHKJChNaq3vqoHL+retsKsgypkin6bkqg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g120t05xj740qk0z0908efezewn4f5veh34udj3r","amount":"12000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"/lfNGWSEVJ+OSFM4XB7ut80fqEwMudtQ2BIYlfjzyCpvZUtjnFbQTskSVrAS4ihflKjS1Dc4X6KHoxUZFtMDAg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g120t05xj740qk0z0908efezewn4f5veh34udj3r","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"YQp7fju7pYHcxC8QSpuoBGtxzYTLXLgEhVIJtuAdnwoM6hXuij83YnfDdqoZqVob1OzMKQqmVixbdzwKIR691w=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g120t05xj740qk0z0908efezewn4f5veh34udj3r","to_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjJ7KByoUCRUZkfWy4RxVEGZriuyHnvs/ZBEUPxM2BXA"},"signature":"lqNvtAj1MjWIVyMyzMj3Pwm8t97LiN9eo8NtpAXp+WATtbSy9Ae6ePtL4WNZSr/PDijdMWvVVvYBQlsz8RHFug=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g120t05xj740qk0z0908efezewn4f5veh34udj3r","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjJ7KByoUCRUZkfWy4RxVEGZriuyHnvs/ZBEUPxM2BXA"},"signature":"ScqhYbsZLKVUrJtMRmqLDa5p0nG/MVinaVWAwjMoy1JARSGCiM4B57jw6c8RHIT94RsK/qcCxuxmRYR8LBQqig=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g120t05xj740qk0z0908efezewn4f5veh34udj3r","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjJ7KByoUCRUZkfWy4RxVEGZriuyHnvs/ZBEUPxM2BXA"},"signature":"Ib73DnVASQaJCmmozgjN7wwYFq1juGjqxacVxOebzbgcVULBXq0sJrDXr4IrNdcTLgd7L4zk9OaeMhJe7lLKUA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"YZ9n5YYyD1C6Ug+SRvbwhS2xchMIrB1tWvFTJ+mVaiANGnRvZX8QjDdNjOXHItfBkByitt6U/L+i7e58hMXMWw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1t70h0zpalufwjufjcxnaa79qe5qjazj7m62qq6","12"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"Bg83OO7c8xQryODrOAWLw7VOoZi8IWDR8WD7rrxAvyAeKEkljKvY3VFsiIC94guT8L+uBQB1xIteOl4oo7ekyA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","to_address":"g1t70h0zpalufwjufjcxnaa79qe5qjazj7m62qq6","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A27+HjKCKEmzyBEVKKRYN/8ItA49KusmYvj05+rlSD0p"},"signature":"xjtVIKaG5ixZSB0ifKVIpbcvKsDQ+v0NkBpK0K7kW1kjCbf+JdIX3DGLzi8Gs4SqJX11S9GhOFT+JsvjnLysxQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1t70h0zpalufwjufjcxnaa79qe5qjazj7m62qq6","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g15aqqnlhfupy6m3yma99c067jvnsgtltsh2gl4c","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhC4k3A4JOgzAr6U9RtEdNFYcu9Kkoxli9+/MSHt4W5R"},"signature":"TXjCMU5KEHDDN5ZiMDYCnxs0qlPi8BbDKsPf5ylr25QATiKFn3Gj/jQ4cPdGZuVy/S2CwLobYkdyusFREJV2ew=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1t70h0zpalufwjufjcxnaa79qe5qjazj7m62qq6","amount":"3000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"E8lYcvsvajffx1oQDR3E/Bkm/bWnvDu75J7xWX3EkHMmrS3Izo17y7Rib35R7RfgI11GBhjYOuPOHkObp52kZA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g149x46al7zw07p0tgzqrkvpwvdaqak5dvgrw7f8","amount":"12000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"zbp9BACCsETumN++9p8v6fZbis0M5mdqh9HdMjyGRCVqDJgoZUXh1FvLJG5yIYtILcQH3T3LX1ox6H1sjT57Qg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g149x46al7zw07p0tgzqrkvpwvdaqak5dvgrw7f8","10"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"vvUMcbhXac6pTj+13IV9NPK3jOEWdvW2ZLYEJAqhEh02t+zk4tVyU3ioIrw+PKKR1gqhDQ91WrrXbJ+kRb0pMQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g149x46al7zw07p0tgzqrkvpwvdaqak5dvgrw7f8","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1ycyclyqnc3msyfdjl94xrlqtjy6fp9fzep0ukn","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5C9X3diVgW2lERpHuvwPmP/xoevSH2B8LbWZi7AiSXn"},"signature":"SNDCmyDkncBDCkpoNnwF3Bl018V9fpLu27vVfUfnk/huuxG5wDjZkCL8vXQXfxAZn1X0RGu/l85fO1vqmAYC8Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ycyclyqnc3msyfdjl94xrlqtjy6fp9fzep0ukn","amount":"5000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"agTh/OLun1fNFIAnqc2lXUsCXXn0fy7Tn09/H4+GdIFniOkkfqyPYLvRB7ywd+PKidM/6RJDynCZKktyDuPkZw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ycyclyqnc3msyfdjl94xrlqtjy6fp9fzep0ukn","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g149x46al7zw07p0tgzqrkvpwvdaqak5dvgrw7f8","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApIMC2lUdC0DYUYQdGv3fi/O/93XEI9jZqPtN+Th4O2B"},"signature":"+LUoa3yZuIoYgHBW3qB7NfBh0FvaZ1FBUx5GCyZx8t4X52LqAqhx+ZK673al7RLqBSSIv7/2IfuqWm+4iRIxWg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g12sgp6xgtyxm53tt2ed004q5f5hjuv4m4mx72f0","amount":"15000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"PT4VTk4PlMUR007d91Lbr+Q1BmmfrYM2uQ0VtSnu+lYOeNb0KrCOKr++wVvP4LxmxsjLzEY+L8OXn7LMGcKulA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1cx2fnl0uyndrxp9ymn55a609ngd5v34jut7je3","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1kfr596aga445glhznku0l7lm83x9lwffgphu4d","5"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ai3QQ5IypJ3I8nDGopu65ryI+4HCaUAVp2RNkAtPCvVD"},"signature":"kmP4NB0MbKUzguQK0MW5+luVor2ijv4sVOepjlI33VclEV5mFeI/GK8B99TNIkt61qAO74O1lDKPqMF41/Gy7g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1cx2fnl0uyndrxp9ymn55a609ngd5v34jut7je3","to_address":"g1kfr596aga445glhznku0l7lm83x9lwffgphu4d","amount":"5000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ai3QQ5IypJ3I8nDGopu65ryI+4HCaUAVp2RNkAtPCvVD"},"signature":"xLsbi9DW7MSx5a3GoXn1I3uk7jdSgdUdxuulNPKJGdNcd6v6EwMbtFeJViSOYr07/SlnvHmPMlWxllIavufsBA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1kfr596aga445glhznku0l7lm83x9lwffgphu4d","to_address":"g1eeese3l4gpeegzth2w3j8g70kq3n7v9rme2n72","amount":"2000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ay/prbjqAZw22o+0kJMQbcWdr8KWK5BXxiHywZ9Hjkfa"},"signature":"eZ9rGffuoajRawQdMkJZG+FkqBgcJyJN3OM6aFgOEKohVQ7X5FNrKrZUfZeoWMTwGq3h9y7/Ah55Jq+gaJg6EQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1kfr596aga445glhznku0l7lm83x9lwffgphu4d","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1eeese3l4gpeegzth2w3j8g70kq3n7v9rme2n72","2"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ay/prbjqAZw22o+0kJMQbcWdr8KWK5BXxiHywZ9Hjkfa"},"signature":"c2C6EbeDBKvqr7E9s17NJzz4m18jLSVZHYOoUlLyBDBQQEmuXfgiXFvFIJGzfyAL8C38a/OSO/5BPlw/MKMYJA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1eeese3l4gpeegzth2w3j8g70kq3n7v9rme2n72","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g12xjl43g92e4qp275h7szjqfp8e37r9yf0c6mvh","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtU3sjfonXUzK/7j7HnZqMlfBJyffNABH3vGN8Ou34Bq"},"signature":"/9HYFNtxiFBqCt4TvBWuZ4Zt/MECNWNwgsaVG+oARwIHmJQb5O4G4ELkZNsf3hZeDeg2vcyg3V1FRutdc53WKQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1cx2fnl0uyndrxp9ymn55a609ngd5v34jut7je3","to_address":"g1eeese3l4gpeegzth2w3j8g70kq3n7v9rme2n72","amount":"2000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ai3QQ5IypJ3I8nDGopu65ryI+4HCaUAVp2RNkAtPCvVD"},"signature":"cgHGR7qq55dADIbYLONI2ko9EMiHg6IsPEAdMIhvSjcIp8JGjdzXGUThyUv80SEN2C4R1arccEBksQNotV1FjA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1cx2fnl0uyndrxp9ymn55a609ngd5v34jut7je3","to_address":"g12xjl43g92e4qp275h7szjqfp8e37r9yf0c6mvh","amount":"2000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ai3QQ5IypJ3I8nDGopu65ryI+4HCaUAVp2RNkAtPCvVD"},"signature":"2zKmEJP6B22SxQBtAjN9ZDRgGs7G3abf0xa9NMAhWaoXCX83OocPS2dxw/neEN6fg65yYkIaLCNptcvo67xFMg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1eeese3l4gpeegzth2w3j8g70kq3n7v9rme2n72","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g12xjl43g92e4qp275h7szjqfp8e37r9yf0c6mvh","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtU3sjfonXUzK/7j7HnZqMlfBJyffNABH3vGN8Ou34Bq"},"signature":"b5jSK3lIXVM4V4NWc3EBMO0EklGDv/T9loG/y8gJzoYuIRKfPln9xGX3UoJpI1Y3fhuQTVDyGrqZS/Sn6UHysQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12xjl43g92e4qp275h7szjqfp8e37r9yf0c6mvh","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1eeese3l4gpeegzth2w3j8g70kq3n7v9rme2n72","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AncN7D6eupI5+/u4XzuU8rQND/PQssZg/uwS3PMZ/O9n"},"signature":"nNkqQ5tZve9YPZB7YjWW0uWn9fuUT5E9Q5CugtoAYfhcq1mGSbyeKdfz8XAo3znXDiExND5GELBzxkYGgkihcQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1eeese3l4gpeegzth2w3j8g70kq3n7v9rme2n72","to_address":"g1cx2fnl0uyndrxp9ymn55a609ngd5v34jut7je3","amount":"10000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtU3sjfonXUzK/7j7HnZqMlfBJyffNABH3vGN8Ou34Bq"},"signature":"u63ON9nwFPm2UyYOrH08jsONFt8zW6kBaSKp5KFpKUsaNvcl9PMgB+PQ4m+gWoif8ayWQDphyN9U48SCqLv5zg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1eeese3l4gpeegzth2w3j8g70kq3n7v9rme2n72","to_address":"g1cx2fnl0uyndrxp9ymn55a609ngd5v34jut7je3","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtU3sjfonXUzK/7j7HnZqMlfBJyffNABH3vGN8Ou34Bq"},"signature":"48XLjEcO3kfsV3pRSEkqbxqey5Rh7s3lqe4XEzJSnNIrkSIac4ubjYJZKLfoRf1UxpMuFZm+RiWZbgbXJ+5OIQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","to_address":"g1ks4ev53j4al8uqhhlahvrfadmz3tlqdguqhxy3","amount":"5000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"leor+UDthDzYa4Nqrn3Y2bO31YIJeVOfdB/aTE1dpvIBWSQl6aKvZHtvS5bxZAIT12uxYq2MAImEPMW8xYkftg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1ks4ev53j4al8uqhhlahvrfadmz3tlqdguqhxy3","5"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5URci9hJassjEJK8dwEUhep/AJr+eQRSE0spEpAwLr9"},"signature":"aVlndob+k3cn+eb07VyTioe5V1pk2ApK1YIbI4Hfc+liM6FeKseYttyrHONHpOA8FvTroCTB+a8KSzUmvCZjZw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ks4ev53j4al8uqhhlahvrfadmz3tlqdguqhxy3","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1drg7fj2jmp6jtqhrvrcwy7ch23upn52y0q8ch6","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ashfbcvj3Pclpe7lYCn0AAi2SwuDJ/GVjKX7vsczLLio"},"signature":"xi2HZ7GfzOZJzwR8Hv3EY9+heC6o9tW139NN1yIWnSYUpD2fNbaLbBnmZlD76TfeQQ1SHdoY3UY2aJOOlTAX0Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1cx2fnl0uyndrxp9ymn55a609ngd5v34jut7je3","to_address":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","amount":"12000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ai3QQ5IypJ3I8nDGopu65ryI+4HCaUAVp2RNkAtPCvVD"},"signature":"IUd5GorgIqT7Tdvrr11cA/Dg2rmB8Enk1iOBwV+KjopdEyL++j0GSOUFtIQ9+KhXH4em79ovky+KBrEeVN+Jrw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","to_address":"g10aydspealplch902m5zaapx2qtrxzsllavmtc3","amount":"4000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjXSDQU9TKRTkgO1gnAj6TAH9Y4wIdQ8dV61PRqgpuzo"},"signature":"ihNHuUJOwN+EV38Q5zZ1gBe6pFVfOwYHpfHMuuL5XFsc2x+b6mHsaTidE257Ku8tp8IMHEVW6ViVUMrOjHl2aA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g10aydspealplch902m5zaapx2qtrxzsllavmtc3","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjXSDQU9TKRTkgO1gnAj6TAH9Y4wIdQ8dV61PRqgpuzo"},"signature":"CA3o+CboKEOHRC80fcFsNUU5WBO/I5Q2upiDgSb++/8FAl4Q66Z+vmhGwJzUH4xWo4iYLJCojfrbkotwmoZ+2A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","to_address":"g1ckxjw7tw2wtwtpz3wyetv2tzck6k6ejv2xs58z","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjXSDQU9TKRTkgO1gnAj6TAH9Y4wIdQ8dV61PRqgpuzo"},"signature":"S+URFFD/lVLzdaJ1TP/Q9jK3/mwhdbgJAo/xVFze+T1nX8vtLIKYN+lrVr/MCv/Rj0pA9wKy4biZt19+MirOaA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ftg9jsnzfjp7yw8dcmcxc5czqstw0cudfg72sh","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1ckxjw7tw2wtwtpz3wyetv2tzck6k6ejv2xs58z","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjXSDQU9TKRTkgO1gnAj6TAH9Y4wIdQ8dV61PRqgpuzo"},"signature":"pHZ+gjkQ0uSXHe2x660W3RQJezbp5edDC2rrqkdDRiAhobjxXjOfdG1Y8+Hb2r6rFa0eMnHgjSCoutREpdGcaw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ckxjw7tw2wtwtpz3wyetv2tzck6k6ejv2xs58z","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1tqhttujjjrcrql0zqz27gg9xuygdkfanng0sh5","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/SQ8Ut0TnSFqj2blvzgizxMs5ES1gp3A8GXl9PDKhH3"},"signature":"tRJ41Dwhnw3Gm5kz3sMr3b2HHxONlgWhgkGtvIgkwYBngTKM+HsHszy0Hh4yR7x/aJiTYZdo0fzkVAFJE9Y9cA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10aydspealplch902m5zaapx2qtrxzsllavmtc3","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1tqhttujjjrcrql0zqz27gg9xuygdkfanng0sh5","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Am39Kjbp+CSVsxdxOXHL0+t58kSUam0rQcN0cLvm3lW8"},"signature":"P8nT1D58zT8D94mDiSfo0m+dYjoiQoTKmgQqQ33YAgJVJGUfMdnE4kwaFkk74l3yOh25jLHPD9VXyX5iKlFDeQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["board_msg_1"]},{"@type":"/bank.MsgSend","from_address":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","to_address":"g1mjzyk7r49ta4h6ppgv2fedgz5ek6hgyttge9pv","amount":"2ugnot"}],"fee":{"gas_wanted":"123456","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"OHHYjFIOMvo7fO8TlTGT6MrpUtYK226zEPPQX2T+2Roa2YEFFSt5Bo2p4mphLy4czghRZ0l+jDqcjlZWFfDxFQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","to_address":"g1mjzyk7r49ta4h6ppgv2fedgz5ek6hgyttge9pv","amount":"2ugnot"}],"fee":{"gas_wanted":"9000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"pafZTnDCwSukOcVfoWifrlj+2p9s5C5GAp9U/7k6PcFQoWAMZZE9ZHzJwMKZw5+OxIZQ0R5dJDPEFAenxBzwFw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","to_address":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","amount":"1000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"Albi/aNpiKJywE9s1sakCACbrk1eel1jGA/bq7PgS8RUx7TO0g3sVIs9N8BTtVAcmOJlfPJBErjMI7VfYr0MQg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["board_web_1"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"6go2MT7XqfsosCZHSBHEakJwb0LIN2NcdwlU/rZnZn9395PN5vPi3Nw9iSjVkrfWKEQ6A9bGB0P6o1DVpXoFGg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["board_msg_2"]}],"fee":{"gas_wanted":"9000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"RPJ8viaGK2VjuhNbjGekyWZzVx2AWeKiN5VUHpN7qDRA8yP2X7HpiyRgivOS19S4Ljea95YGXoLHS0D9RqcWyw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["msg_board_1"]},{"@type":"/bank.MsgSend","from_address":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","to_address":"g1mjzyk7r49ta4h6ppgv2fedgz5ek6hgyttge9pv","amount":"2ugnot"}],"fee":{"gas_wanted":"9000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"iLxvAwiGSG+ecX9Hd/O51rxYKI0+iHCsZEdBU+flf5ZJiQo4V2dbyEejoKgZcDReYPn2JQ/1uDpIMZ5xck0A9w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["msg_board_3"]},{"@type":"/bank.MsgSend","from_address":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","to_address":"g1mjzyk7r49ta4h6ppgv2fedgz5ek6hgyttge9pv","amount":"3ugnot"},{"@type":"/vm.m_addpkg","creator":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","package":{"Name":"it5","Path":"gno.land/r/deme/it5","Files":[{"Name":"it.gno","Body":"package main\n\nimport (\n\t\"std\"\n)\n\nfunc main() {\n\tprintln(\"done\")\n}"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"9000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"jHFREiHCgH9FqC4nv0TB+boRBi7FAYBN4GCXj1g3ZBVaI8VEk559L9OFw1TJ2K+VxygJffh+RD/ZaU/zc7dVHQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["msg_board_3"]},{"@type":"/bank.MsgSend","from_address":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","to_address":"g1mjzyk7r49ta4h6ppgv2fedgz5ek6hgyttge9pv","amount":"3ugnot"},{"@type":"/vm.m_addpkg","creator":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","package":{"Name":"it5","Path":"gno.land/r/deme/it5","Files":[{"Name":"it5.gno","Body":"package it5\n\nimport (\n\t\"std\"\n)\n\nfunc main() {\n\tprintln(\"done\")\n}"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"9000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"DqIzBTWcVDxwHSpS09heyCf4H9r1Qk52oav3yhM3Fb5XILuzfh69WaRgpvTxddw+lZm/efC4hrMGq0cN9ZPozw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/demo/foo20","func":"BalanceOf","args":["g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5"]},{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/demo/foo20","func":"BalanceOf","args":["g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"183/SHY0d93xLUKmGhxUmez1nxtTlosikn8wXE61vOM/wc7ni0hd2NBYjtkmIbwl6a98Oh2G+byQP9ny8HWA/A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["msg_board_6"]},{"@type":"/vm.m_addpkg","creator":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","package":{"Name":"it61","Path":"gno.land/r/deme/it61","Files":[{"Name":"it61.gno","Body":"package it61\n\nimport (\n\t\"std\"\n)\n\nfunc main() {\n\tprintln(\"done\")\n}"},{"Name":"it61_test.gno","Body":"package it61\n\nimport (\n\t\"std\"\n)\n\nfunc test() {\n\tprintln(\"done\")\n}"}]},"deposit":"1ugnot"},{"@type":"/bank.MsgSend","from_address":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","to_address":"g1mjzyk7r49ta4h6ppgv2fedgz5ek6hgyttge9pv","amount":"3ugnot"},{"@type":"/vm.m_addpkg","creator":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","package":{"Name":"it62","Path":"gno.land/r/deme/it62","Files":[{"Name":"it62.gno","Body":"package it5\n\nimport (\n\t\"std\"\n)\n\nfunc main() {\n\tprintln(\"done\")\n}"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"9000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"WNqyHTdC43RAaCG22rcbkuS9Xqfidb4gywbte4MEH80ltj1wT1FXJYOB3y6kZ9U0yny3u+/M8HhDGz1qEblaIQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["msg_board_6"]},{"@type":"/vm.m_addpkg","creator":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","package":{"Name":"it61","Path":"gno.land/r/deme/it61","Files":[{"Name":"it61.gno","Body":"package it61\n\nimport (\n\t\"std\"\n)\n\nfunc main() {\n\tprintln(\"done\")\n}"},{"Name":"it61_test.gno","Body":"package it61\n\nimport (\n\t\"std\"\n)\n\nfunc test() {\n\tprintln(\"done\")\n}"}]},"deposit":"1ugnot"},{"@type":"/bank.MsgSend","from_address":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","to_address":"g1mjzyk7r49ta4h6ppgv2fedgz5ek6hgyttge9pv","amount":"3ugnot"},{"@type":"/vm.m_addpkg","creator":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","package":{"Name":"it62","Path":"gno.land/r/deme/it62","Files":[{"Name":"it62.gno","Body":"package it62\n\nimport (\n\t\"std\"\n)\n\nfunc main() {\n\tprintln(\"done\")\n}"}]},"deposit":"1ugnot"}],"fee":{"gas_wanted":"9000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"7PwiqQ0HArMtmQ0mZb6IKdVTxkAiY/I3NpPcXtBOIiklpwNRR93BkxDLqIL6MpT4FT2L8biw3LTy9Y9YA6W3/w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1mw9r7kghwghdea6nhe52av5uw0gnfdr4yvwe8c","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"2jH8ZtMlJfchgFirKeMFW6rpMChhXpz5Sn2rjNNecV8ZWdlUqhSbmyu7lV2cvs4MhuA663wcYDukd0JaRhqv3A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1mw9r7kghwghdea6nhe52av5uw0gnfdr4yvwe8c","to_address":"g18syxa0vh0vmne90mwhtynjet0zgeqf6prh3ryy","amount":"42000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AoD5XtwERf3WfB7B+FqeuXmQnUotS2EMUATisnYTbcSa"},"signature":"Vb9m2IG76A63O1ThmlSn4ZXza/mrdbEJr7bjloS0Nih4zE7QmJWMs/Zm2fAXRWOKI0auvrF6iU28+GYwXcTL5g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g18syxa0vh0vmne90mwhtynjet0zgeqf6prh3ryy","to_address":"g1mw9r7kghwghdea6nhe52av5uw0gnfdr4yvwe8c","amount":"1000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3GjOAi0K77aU30Hh65nUVsJfBA+IcMA1m6CZ4arVQBU"},"signature":"983flOfcY4G8zEY/wL3MGRKV04YMTWR+L6/Eb49zI/UpakzinKB0/oQqTptCVOjuYCb1haydiW5QY5WiQo/i1Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g18syxa0vh0vmne90mwhtynjet0zgeqf6prh3ryy","to_address":"g1mw9r7kghwghdea6nhe52av5uw0gnfdr4yvwe8c","amount":"1000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3GjOAi0K77aU30Hh65nUVsJfBA+IcMA1m6CZ4arVQBU"},"signature":"NQhp5V7w2wXvmVAZoBqe3RpwXExlPuQ70pQ7JDFhKfAHNEZt6+jwo7Po+bDtiuzgJg1bNUg3vW6RP4lWtRD4IQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g18syxa0vh0vmne90mwhtynjet0zgeqf6prh3ryy","to_address":"g1mw9r7kghwghdea6nhe52av5uw0gnfdr4yvwe8c","amount":"1000000ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3GjOAi0K77aU30Hh65nUVsJfBA+IcMA1m6CZ4arVQBU"},"signature":"z9N+yn97LR7QMabD929H+UvwEs7LtornB2d4uRQNF8xACYsQWqzS0T3OA3Bey9deiKP5freVe/D5ZXj3fwzkdw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/demo/boards","func":"GetBoardIDFromName","args":["1"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"DadPUK3rrHdGX57t85bHNjJ7YEFf7QkSVXrEF1Ydm8Vd1yA/31HIkfrifoENmXZ3+IMcw4UvoavrQJXcKFZQAA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["2"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"o2qDFhVx9kuZrBhdpxElJw+mhPp0ItZnAAmNhfLy6LhmWSl3ryspb6fZL0Foh9CHKOCCTjqeQwZ9QxY74I6/Ew=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["3","4","5"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"1fYKjegGlbXZypg5uOPX5lmk+FyyMOptK/pPPcmcXlBagKancVfLyAl1PwXIJgSWJ8GFywYjh4wwHOnecPB5og=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["6","7","8","9"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"yoGGwj8l6clOOB4cBxHBje73lNxvvMziduNmluBFWCMknx4xwb25cRvjukEVo+01IU7x8f495NS8Jf+sIexOAg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateRepost","args":["10","11","12","13","14"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"dMaLJKeJZfzWJ5ogeGJ85+yyhWjL24SalI3c0fm3OcZZs8ekd0JePw/RvmqNeGmfZXmv/6NzrLuPL8+hfc8jvw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/demo/boards","func":"DeletePost","args":["15","16","17","18"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"knPf693ntBYb+ndyKIFKf8Laj+Og2WdYSsbNjPBMeFV5aS8ampkFtw3I+kIumCAyZoiP7Ezmtte5Z867tHVP+Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/demo/boards","func":"EditPost","args":["19","20","21","22","23"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"lQHgroAUV+y4B6g4u7C9o8Sbd0PmBesfQZ13lSHgjIhdzbePQJQsmL7DaERJOelyuSEoFRCBlQXzGgvS2k5pbQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/demo/boards","func":"RenderBoard","args":["24"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"mg29JgdK+fZW6btanEyvkXVwyxpZ6j4OG756Sva05AQALAAk+tlxcVJr/klUPjkKZqbAeXmzWmFdf9RPx6vSFw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","send":"","pkg_path":"gno.land/r/demo/boards","func":"Render","args":["25"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+FhNtsXHjLfSJk1lB8FbiL4mGPjc50Kt81J7EKDnJ2y"},"signature":"6nFLjIWrGOWrGM9cbxxVMzEzEh/m9vwXuDI2I6kCIV1Mj6IRyrrbZVHvKS6QxnHlWujTpGQupZuSEkgVo4JcxA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1a0k5h0lck8szfhkul54x7d5476vmu53d3u8zpf","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"RGPAhd32z3kkqKxpRcAyRkbuNjug/1OeND3u6Fs2C3k0xeiH9xB3RZKv9m5q1Hdlnftl43xCmNGr+JRr1swCTg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1a0k5h0lck8szfhkul54x7d5476vmu53d3u8zpf","package":{"Name":"coin","Path":"gno.land/coin/ugnot","Files":[{"Name":"coin.gno","Body":"package coin\n\nimport (\n\t\"std\"\n\t\"strings\"\n\n\t\"gno.land/p/demo/grc/grc20\"\n\t\"gno.land/p/demo/ufmt\"\n\t\"gno.land/r/demo/users\"\n)\n\nvar (\n\tcoin   *grc20.AdminToken\n\tadmin std.Address = \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"\t\t\t// TODO: helper to change admin\n)\n\nfunc init() {\n\tcoin = grc20.NewAdminToken(\"u_gno_land\", \"ugnot\", 4)\n\tcoin.Mint(admin, 1000000*10000)                                    // @administrator (1M)\n}\n\n// method proxies as public functions.\n//\n\n// getters.\nfunc GetGRC20() *grc20.AdminToken {\n\treturn coin\n}\n\nfunc TotalSupply() uint64 {\n\treturn coin.TotalSupply()\n}\n\nfunc BalanceOf(owner users.AddressOrName) uint64 {\n\tbalance, err := coin.BalanceOf(owner.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\n\tallowance, err := coin.Allowance(owner.Resolve(), spender.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn allowance\n}\n\n// setters.\nfunc Transfer(to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tprintln(coin.Transfer(caller, to.Resolve(), amount))\n}\n\nfunc Approve(spender users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tcoin.Approve(caller, spender.Resolve(), amount)\n}\n\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tcoin.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\n}\n\n// faucet.\nfunc Faucet() {\n\tcaller := std.GetOrigCaller()\n\tcoin.Mint(caller, 1000*10000) // 1k\n}\n\n\n// administration.\nfunc Mint(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\tcoin.Mint(address.Resolve(), amount)\n}\n\nfunc Burn(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\tcoin.Burn(address.Resolve(), amount)\n}\n\n// render.\nfunc Render(path string) string {\n\tparts := strings.Split(path, \"/\")\n\tc := len(parts)\n\n\tswitch {\n\tcase path == \"\":\n\t\treturn coin.RenderHome()\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\n\t\towner := users.AddressOrName(parts[1])\n\t\tbalance, _ := coin.BalanceOf(owner.Resolve())\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\n\tdefault:\n\t\treturn \"404\\n\"\n\t}\n}\n\nfunc assertIsAdmin(address std.Address) {\n\tif address != admin {\n\t\tpanic(\"restricted access\")\n\t}\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"9000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArKYqaZX8A+nCXhiBT7KOwlWaZ72+27/2ET6dldoJ7Ic"},"signature":"jt8eCi+RAf3a9UYV9WlesSyI15+NofQJeMeper/f6c8OXwTty9LkOIEEQLEJ85qGc350xnFIymjuQLVQvERALg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_addpkg","creator":"g1a0k5h0lck8szfhkul54x7d5476vmu53d3u8zpf","package":{"Name":"coin","Path":"gno.land/r/coin/ugnot","Files":[{"Name":"coin.gno","Body":"package coin\n\nimport (\n\t\"std\"\n\t\"strings\"\n\n\t\"gno.land/p/demo/grc/grc20\"\n\t\"gno.land/p/demo/ufmt\"\n\t\"gno.land/r/demo/users\"\n)\n\nvar (\n\tcoin   *grc20.AdminToken\n\tadmin std.Address = \"g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5\"\t\t\t// TODO: helper to change admin\n)\n\nfunc init() {\n\tcoin = grc20.NewAdminToken(\"u_gno_land\", \"ugnot\", 4)\n\tcoin.Mint(admin, 1000000*10000)                                    // @administrator (1M)\n}\n\n// method proxies as public functions.\n//\n\n// getters.\nfunc GetGRC20() *grc20.AdminToken {\n\treturn coin\n}\n\nfunc TotalSupply() uint64 {\n\treturn coin.TotalSupply()\n}\n\nfunc BalanceOf(owner users.AddressOrName) uint64 {\n\tbalance, err := coin.BalanceOf(owner.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\n\tallowance, err := coin.Allowance(owner.Resolve(), spender.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn allowance\n}\n\n// setters.\nfunc Transfer(to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tprintln(coin.Transfer(caller, to.Resolve(), amount))\n}\n\nfunc Approve(spender users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tcoin.Approve(caller, spender.Resolve(), amount)\n}\n\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tcoin.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\n}\n\n// faucet.\nfunc Faucet() {\n\tcaller := std.GetOrigCaller()\n\tcoin.Mint(caller, 1000*10000) // 1k\n}\n\n\n// administration.\nfunc Mint(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\tcoin.Mint(address.Resolve(), amount)\n}\n\nfunc Burn(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\tcoin.Burn(address.Resolve(), amount)\n}\n\n// render.\nfunc Render(path string) string {\n\tparts := strings.Split(path, \"/\")\n\tc := len(parts)\n\n\tswitch {\n\tcase path == \"\":\n\t\treturn coin.RenderHome()\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\n\t\towner := users.AddressOrName(parts[1])\n\t\tbalance, _ := coin.BalanceOf(owner.Resolve())\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\n\tdefault:\n\t\treturn \"404\\n\"\n\t}\n}\n\nfunc assertIsAdmin(address std.Address) {\n\tif address != admin {\n\t\tpanic(\"restricted access\")\n\t}\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"9000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArKYqaZX8A+nCXhiBT7KOwlWaZ72+27/2ET6dldoJ7Ic"},"signature":"LVM2SyOAwjqHw0ox+qTn23Xenl4Z+3AVcfxRGBKecgA0Esw6FLJwFKb7tn/T6KAMEdWXmfoj0MIo4ma5StgRfw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1747t5m2f08plqjlrjk2q0qld7465hxz8gkx59c","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Or+XzXWCjdfDFmAneZJTRuw1Di/h0F3KKvgew2ZkLOJFk6wde/wjHUC5Mtt5w5GeViKLfunjygk2nOVb9IP96g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1747t5m2f08plqjlrjk2q0qld7465hxz8gkx59c","to_address":"g18syxa0vh0vmne90mwhtynjet0zgeqf6prh3ryy","amount":"1123450ugnot"}],"fee":{"gas_wanted":"50000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyDlf14q7C2aBqar/Qryh6dVR9VACxVZV6fOaM3X5YEA"},"signature":"tgTYQX6Wuz5W8OEq2sVKlxW5kD9hyUhCh/AE/VyRH4IzyHc775ZawzsuvrKoc6VNjr5ow2XUnGSMKIDVbdGF8A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1utz70z0avvjts2muh24r9lppkr8v6a46ny8vdg","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"BEFPmAc62nE2Bqzx+XwdHUGfSeErq5AY9kD+8Qu7THda3cad21SSIbDquR3KyAmlHhaXqYBqTOPl/fYRwa6lCw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/gnoland/blog","func":"ModEditPost","args":["monthly-dev-2","The More You Gno: Gno.land Monthly Updates #2","\n**The More You Gno 2: Gno.land Developer Updates**\n\nOver the past few weeks, our core devs and ecosystem contributors have been making massive strides on Gno.land. There’s a lot to cover in the second edition of *The More You Gno*, from updates on Tendermint2 and GnoVM to stack/frames management, Gno IDE, and plenty more. We’ll also see what some of the external teams contributing to the platform have been up to, including Gno.land’s first decentralized exchange, GnoSwap, and Adena compatibility with GRC20 tokens. Check it out.\n\n**Tendermint2**\n\nWe’re making steady development progress on Tendermint2, which focuses on simplicity of design, minimal code, minimal dependencies, modular dependencies, and completeness. For the time being, Tendermint2 will stay in the main repo in a top-level folder named Tendermint2. This is the official location to develop and improve the consensus protocol until it is stable enough to be extracted from the Gno repo and become a standalone project. Currently, Tendermint2 depends on GnoVM, however, we are working to unlink this dependency and build a basic demo Tendermint2 chain and Client.\n\nTendermint2 JS/TS Client is a JavaScript/TypeScript client implementation for Tendermint2-based chains. The client will make it easier for developers to interact with Tendermint2 chains, with a simplified API for account and transaction management, removing a ton of manual work and allowing developers to focus on building their dApps. You can [read more about the client here](https://www.npmjs.com/package/@gnolang/tm2-js-client). In addition to the Tendermint2 JS/TS client, we also created a Gno JS/TS client that just extends the TM2 one to provide Gno-specific functionality. You can read more about this here.\n\n**Game of Realms**\n\nThe incentivized competition to find the best contributors to Gno.land continues in phase one, with slow but steady progress being made. Nir1218 initiated an Evaluation DAO Kickoff discussion in [issue 792](https://github.com/gnolang/gno/pull/792) to initiate testing code for the key smart contract infrastructure that will power the Gno.land platform. We are also interviewing architects for the core team with experience in governance modules and creating new economies on-chain, and a new DevRel team member will be joining us soon to create awesome tutorials and documentation to advance Game of Realms further. Gno.land must be built by the community and we will not rush to push Game of Realms to the second phase until we have found quality contributors to complete the challenge tasks and become the platform’s first founding members.\n\n**Gno IDE**\n\nOur core development team is working on a web-based IDE for Gno.land that will greatly improve the developer experience, allowing builders to quickly spin up Gno realms and packages right on their browsers just by visiting a web app. Currently named Gno IDE but with a rebranding on the horizon, this intuitive product focuses on ease of use and improved UX, and will include all the features you’d expect from an IDE, such as auto compilation in the editor, debugging, extensive testing capability, and powerful APIs like IntelliJ to supercharge your programming.\n\nGno IDE currently has multiple modes to support different use cases, including a normal mode for everyday programming, similar to a standard code editor, a presentation mode for video calls or screen sharing, and an embedded mode to extend functionality, allowing you to embed the IDE directly into websites and blogs. You can also choose to edit your code in Emacs or Vim and easily switch between steps, from previous to next, making creating your tutorials and blog posts more intuitive. Watch out for more to come on Gno IDE soon, and if you want to contribute by creating a plugin for your favorite editor, open a PR to win contribution points.\n\n**Stack/Frames Management**\n\nThe stack/frames is an integral part of the virtual machine (VM) and the language. Stack/frames provide context for smart contract developers, enabling them to access useful information, such as the original caller, or to determine if a contract is being called through another one. The current implementation is limited in scope and relies on fixed positions in the stack which can lead to inconsistencies.\n\nThere is an ongoing [issue 683 open here](https://github.com/gnolang/gno/issues/683) and we have continued to work on enhancing stack/frames development over the last month. We’re adding a new function in the standard library std.PrevRealm (previously GetRealmCaller). Currently, we only have GetOrigCaller, which returns the user calling the first realm. This is not secure and we need a way to call the previous caller. This will allow a realm to handle GRC20 treasuries. See [issue 667](https://github.com/gnolang/gno/pull/667) and [issue 634](https://github.com/gnolang/gno/issues/634) for further details.\n\n**Dealing with Panics in Native Functions**\n\nWe have devised a solution for dealing with panics in native functions, [see pull request 732](https://github.com/gnolang/gno/pull/732). Previously, when there was a panic in a native function, we could not recover it in Gno code. An example of this was the assert origin call, which panicked if the call was not a direct call from a transaction. Based on discussions with contributors, we’ve agreed that native functions should never panic, but if they panic, they panic with machined Gno panic. This gives us the choice in a native function to code a Gno panic, or, if it's a very bad panic, use Go panic so that we know the Gno code is unable to recover it.\n\n**Logic Upgrading**\n\nMaking it possible to upgrade your logic is definitely out of scope for the first version of Gno.land, however, it’s an important issue that we have begun to discuss so that we can place certain restrictions on it, such as allowing upgrades when we consider them safe enough to be compatible with imports. Another idea is to work on creating workflows where migrations become something official. This way, we could define ways to migrate a contract completely in a single transaction at the chain level. Once everything is working and approved as the previous contract is parsed or archived, the new one gets the data. We will revisit this topic after the first version of Gno.land reaches the mainnet.\n\n**Garbage Collection**\n\nIn terms of garbage collection, we don’t have memory leaks as such but we do have defacto memory leaks. By the VM having references to all objects, they won’t be released by Go’s underlying GC. We have some form of reference counting but it is only done at the end of a transaction. We have implemented a mark-and-sweep garbage collector and are working on the VM runtime to manage the objects and signal to the garbage collector to release them when they are no longer needed. This is done by adding the notion of a heap, which is managed by the garbage collector.\n\n**GnoVM**\n\nDeveloping GnoVM is an ongoing task and we will likely need to fork the GnoVM to create different competing versions. GnoVM will be complete, limited in features, and serve as the only interpreter, an enduring reference point over time. Future versions of GnoVM will be designed to incorporate CosmWasm so that all Cosmos chains can have CosmWasm enabled and the VM can run directly on the browser and execute tasks on the browser without requiring to make an API call, making it faster. To do this, we can make a Gno compiler in WebAssembly without changing the code because Go supports WASM cross-compilation.\n\nWe plan on making a competing version of the original minimalist GnoVM, such as a Rust version with a JIT compiler using LLVM as a backend.\n\n**Ecosystem Updates**\n\nSince our last update, the Gno.land community continues to expand with awesome teams and contributors building cool infrastructure and projects on the platform. Below, we take a look at the largest developments of the past few weeks and extend a special thanks to everyone helping us build Gno.land.\n\n**Teritori**\n\nTeritori blockchain and multi-chain hub launched in November 2022, allowing IBC and non-IBC communities to connect, create groups, exchange tokens and NFTs, and launch new projects. Teritori’s idea for building on Gno.land is to create a multi-chain experience for users with a web portal, NFT marketplace, and social feed that will grow the community, and gradually integrate smart contracts and realms. This will promote Gno.land to more developers and showcase all the dApps being built through an easy-to-navigate dApp store. In the coming weeks, Teritori will work with the Onbloc team to integrate the Athena wallet into their portal as well as discuss ideas for promoting Game of Realms to new developers.\n\n**Onbloc**\n\nOnbloc is one of the Gno.land ecosystem’s most active contributors, responsible for building the Adena wallet and the block explorer Gnoscan. The team has also been working on creating an official Gno SDK that will allow developers to interact with Gno.land more easily, and remove some of the current friction. Onbloc opened [issue 701](https://github.com/gnolang/gno/issues/701) on GitHub primarily for developers who either have their own web app or are building a JavaScript app and want to work with Gno in some way. Currently, developers need to do a lot of manual work, which Gno SDK will abstract away, improving the workflow and developer experience. If you have any ideas or feedback, please contribute to the aforementioned issue.\n\nIn another cool development, Onbloc has rolled out a new feature in Adena and Gnoscan to provide support for GRC20 tokens. To store and send tokens, you can open your Adena wallet, click on \"Manage Tokens”, navigate to the Custom Token page, and see which GRC20 tokens are available on Gno Testnet 3, searching by the symbol or path. To research on or discover tokens, head over to the Tokens page on Gnoscan for a full list of GRC20 tokens. You can click on any token on the list for detailed information, such as the total supply, owner, or other available functions built into the token. The Account Details page has also been updated to display all tokens owned by each address. You can help by checking out [issue 764](https://github.com/gnolang/gno/pull/764), which discusses adding bigint to support a wide range of numbers and encoding binary, and [issue 816](https://github.com/gnolang/gno/pull/816), which highlights a small bug the team runs into when coding.\n\nOnbloc has also created a new [token resource page on GitHub](http://github/onbloc/gnotokenresources) for anyone to share or upload resources associated with their Gno.land project. This will serve as a shared knowledge pool about any dApp on the platform. If you wanted to create a decentralized exchange, for example, you would need all the information about the tokens available on Gno.land, such as their images, symbols, descriptions, links to websites, etc. Now you can find this in one handy GitHub repository. If you’re a developer or builder who wants your logo or any other static data posted, be sure to submit a PR.\n\nAnd speaking of decentralized exchanges, Onbloc is also building Gnoswap, the first DEX to be powered by Gno.land, designed to simplify the concentrated liquidity experience and increase capital efficiency for traders. Its interface is built using TypeScript to be user-friendly, secure, and accessible for streamlining complex mechanisms such as price range configurations and staking as part of its core service. Contribute to its interface [here](https://github.com/gnoswap-labs/gnoswap-interface).\n\nAs for the contract side, Onbloc is actively working on its development with help from the core members of Gno.land. The code will be open-sourced for full transparency once the basic functions are ready.\n\n**New Core Contributors**\n\nWe’re excited to welcome two new core team members, Antonio and Zack. Antonio joined us in April in the core team, bringing with him vast experience in IPFS, and writing Git servers in Go. Zack is our first “tinkerer in residence” and will try to bootstrap the ecosystem of small contracts and small libraries. He will also be writing apps and helping us design a system to better share and showcase our work with a super UX for team builders and open-source addicts.\n\nAntonio is already hard at work researching a benchmarking dashboard that will show performance improvements or regressions when we change the code. He’s assessing whether to use GiHub to track actions or run our own machine to execute GitHub actions. Take a peek at his research so far on [issue 783 here](https://github.com/gnolang/gno/pull/783).\n\nZack is working on a microblog project. As an experienced web2 Go programmer, Zack is transitioning to web3. Since he’s interested in incentivized social networks, the microblog project will be his first realm, as a Twitter-style blog without titles, where each user has their own page based on their address. Check out [issue 391](https://github.com/gnolang/gno/pull/391) for more details.\n\n**Developer Events**\n\nOver the past few weeks, our core devs have been mainly focused on building but they’re preparing to speak at some exciting events in the coming months. Catch up with Manfred at BUIDL Asia, in Seoul, South Korea, from June 5 - 9. We’re co-hosting a side event with Onbloc, Code States, and Cosmostation on June 5, so be sure to register if you’re in town! We’ll also be at EthBelgrade in Serbia from June 2 - 4, and GopherCon in Berlin from June 26 - 29, so stop by and say hello.\n\n*Do you want to contribute to Gno.land’s monthly updates? If you’re building on Gno.land and want to highlight your development, project, event, or idea, let us know and we’ll include your contribution.*\n","gnoland,gnovm,tm2"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"Mvfm+hCWv30885OEK7/az2kV6meqQksb9IO/2ZM1ScpTTtnwKvz+ZsMNqrzUmk7QrPGKlLzalmEBsls/POPUOA=="}],"memo":"from gnoblog-cli"}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/gnoland/blog","func":"ModEditPost","args":["monthly-dev-2","The More You Gno: Gno.land Monthly Updates #2","\n**The More You Gno 2: Gno.land Developer Updates**\n\nOver the past few weeks, our core devs and ecosystem contributors have been making massive strides on Gno.land. There’s a lot to cover in the second edition of *The More You Gno*, from updates on Tendermint2 and GnoVM to stack/frames management, Gno IDE, and plenty more. We’ll also see what some of the external teams contributing to the platform have been up to, including Gno.land’s first decentralized exchange, GnoSwap, and Adena compatibility with GRC20 tokens. Check it out.\n\n**Tendermint2**\n\nWe’re making steady development progress on Tendermint2, which focuses on simplicity of design, minimal code, minimal dependencies, modular dependencies, and completeness. For the time being, Tendermint2 will stay in the main repo in a top-level folder named Tendermint2. This is the official location to develop and improve the consensus protocol until it is stable enough to be extracted from the Gno repo and become a standalone project. Currently, Tendermint2 depends on GnoVM, however, we are working to unlink this dependency and build a basic demo Tendermint2 chain and Client.\n\nTendermint2 JS/TS Client is a JavaScript/TypeScript client implementation for Tendermint2-based chains. The client will make it easier for developers to interact with Tendermint2 chains, with a simplified API for account and transaction management, removing a ton of manual work and allowing developers to focus on building their dApps. You can [read more about the client here](https://www.npmjs.com/package/@gnolang/tm2-js-client). In addition to the Tendermint2 JS/TS client, we also created a Gno JS/TS client that just extends the TM2 one to provide Gno-specific functionality. You can read more about this here.\n\n**Game of Realms**\n\nThe incentivized competition to find the best contributors to Gno.land continues in phase one, with slow but steady progress being made. Nir1218 initiated an Evaluation DAO Kickoff discussion in [issue 792](https://github.com/gnolang/gno/pull/792) to initiate testing code for the key smart contract infrastructure that will power the Gno.land platform. We are also interviewing architects for the core team with experience in governance modules and creating new economies on-chain, and a new DevRel team member will be joining us soon to create awesome tutorials and documentation to advance Game of Realms further. Gno.land must be built by the community and we will not rush to push Game of Realms to the second phase until we have found quality contributors to complete the challenge tasks and become the platform’s first founding members.\n\n**Gno IDE**\n\nOur core development team is working on a web-based IDE for Gno.land that will greatly improve the developer experience, allowing builders to quickly spin up Gno realms and packages right on their browsers just by visiting a web app. Currently named Gno IDE but with a rebranding on the horizon, this intuitive product focuses on ease of use and improved UX, and will include all the features you’d expect from an IDE, such as auto compilation in the editor, debugging, extensive testing capability, and powerful APIs like IntelliJ to supercharge your programming.\n\nGno IDE currently has multiple modes to support different use cases, including a normal mode for everyday programming, similar to a standard code editor, a presentation mode for video calls or screen sharing, and an embedded mode to extend functionality, allowing you to embed the IDE directly into websites and blogs. You can also choose to edit your code in Emacs or Vim and easily switch between steps, from previous to next, making creating your tutorials and blog posts more intuitive. Watch out for more to come on Gno IDE soon, and if you want to contribute by creating a plugin for your favorite editor, open a PR to win contribution points.\n\n**Stack/Frames Management**\n\nThe stack/frames is an integral part of the virtual machine (VM) and the language. Stack/frames provide context for smart contract developers, enabling them to access useful information, such as the original caller, or to determine if a contract is being called through another one. The current implementation is limited in scope and relies on fixed positions in the stack which can lead to inconsistencies.\n\nThere is an ongoing [issue 683 open here](https://github.com/gnolang/gno/issues/683) and we have continued to work on enhancing stack/frames development over the last month. We’re adding a new function in the standard library std.PrevRealm (previously GetRealmCaller). Currently, we only have GetOrigCaller, which returns the user calling the first realm. This is not secure and we need a way to call the previous caller. This will allow a realm to handle GRC20 treasuries. See [issue 667](https://github.com/gnolang/gno/pull/667) and [issue 634](https://github.com/gnolang/gno/issues/634) for further details.\n\n**Dealing with Panics in Native Functions**\n\nWe have devised a solution for dealing with panics in native functions, [see pull request 732](https://github.com/gnolang/gno/pull/732). Previously, when there was a panic in a native function, we could not recover it in Gno code. An example of this was the assert origin call, which panicked if the call was not a direct call from a transaction. Based on discussions with contributors, we’ve agreed that native functions should never panic, but if they panic, they panic with machined Gno panic. This gives us the choice in a native function to code a Gno panic, or, if it's a very bad panic, use Go panic so that we know the Gno code is unable to recover it.\n\n**Logic Upgrading**\n\nMaking it possible to upgrade your logic is definitely out of scope for the first version of Gno.land, however, it’s an important issue that we have begun to discuss so that we can place certain restrictions on it, such as allowing upgrades when we consider them safe enough to be compatible with imports. Another idea is to work on creating workflows where migrations become something official. This way, we could define ways to migrate a contract completely in a single transaction at the chain level. Once everything is working and approved as the previous contract is parsed or archived, the new one gets the data. We will revisit this topic after the first version of Gno.land reaches the mainnet.\n\n**Garbage Collection**\n\nIn terms of garbage collection, we don’t have memory leaks as such but we do have defacto memory leaks. By the VM having references to all objects, they won’t be released by Go’s underlying GC. We have some form of reference counting but it is only done at the end of a transaction. We have implemented a mark-and-sweep garbage collector and are working on the VM runtime to manage the objects and signal to the garbage collector to release them when they are no longer needed. This is done by adding the notion of a heap, which is managed by the garbage collector.\n\n**GnoVM**\n\nDeveloping GnoVM is an ongoing task and we will likely need to fork the GnoVM to create different competing versions. GnoVM will be complete, limited in features, and serve as the only interpreter, an enduring reference point over time. Future versions of GnoVM will be designed to incorporate CosmWasm so that all Cosmos chains can have CosmWasm enabled and the VM can run directly on the browser and execute tasks on the browser without requiring to make an API call, making it faster. To do this, we can make a Gno compiler in WebAssembly without changing the code because Go supports WASM cross-compilation.\n\nWe plan on making a competing version of the original minimalist GnoVM, such as a Rust version with a JIT compiler using LLVM as a backend.\n\n**Ecosystem Updates**\n\nSince our last update, the Gno.land community continues to expand with awesome teams and contributors building cool infrastructure and projects on the platform. Below, we take a look at the largest developments of the past few weeks and extend a special thanks to everyone helping us build Gno.land.\n\n**Teritori**\n\nTeritori blockchain and multi-chain hub launched in November 2022, allowing IBC and non-IBC communities to connect, create groups, exchange tokens and NFTs, and launch new projects. Teritori’s idea for building on Gno.land is to create a multi-chain experience for users with a web portal, NFT marketplace, and social feed that will grow the community, and gradually integrate smart contracts and realms. This will promote Gno.land to more developers and showcase all the dApps being built through an easy-to-navigate dApp store. In the coming weeks, Teritori will work with the Onbloc team to integrate the Athena wallet into their portal as well as discuss ideas for promoting Game of Realms to new developers.\n\n**Onbloc**\n\nOnbloc is one of the Gno.land ecosystem’s most active contributors, responsible for building the Adena wallet and the block explorer Gnoscan. The team has also been working on creating an official Gno SDK that will allow developers to interact with Gno.land more easily, and remove some of the current friction. Onbloc opened [issue 701](https://github.com/gnolang/gno/issues/701) on GitHub primarily for developers who either have their own web app or are building a JavaScript app and want to work with Gno in some way. Currently, developers need to do a lot of manual work, which Gno SDK will abstract away, improving the workflow and developer experience. If you have any ideas or feedback, please contribute to the aforementioned issue.\n\nIn another cool development, Onbloc has rolled out a new feature in Adena and Gnoscan to provide support for GRC20 tokens. To store and send tokens, you can open your Adena wallet, click on \"Manage Tokens”, navigate to the Custom Token page, and see which GRC20 tokens are available on Gno Testnet 3, searching by the symbol or path. To research on or discover tokens, head over to the Tokens page on Gnoscan for a full list of GRC20 tokens. You can click on any token on the list for detailed information, such as the total supply, owner, or other available functions built into the token. The Account Details page has also been updated to display all tokens owned by each address. You can help by checking out [issue 764](https://github.com/gnolang/gno/pull/764), which discusses adding bigint to support a wide range of numbers and encoding binary, and [issue 816](https://github.com/gnolang/gno/pull/816), which highlights a small bug the team runs into when coding.\n\nOnbloc has also created a new [token resource page on GitHub](http://github/onbloc/gnotokenresources) for anyone to share or upload resources associated with their Gno.land project. This will serve as a shared knowledge pool about any dApp on the platform. If you wanted to create a decentralized exchange, for example, you would need all the information about the tokens available on Gno.land, such as their images, symbols, descriptions, links to websites, etc. Now you can find this in one handy GitHub repository. If you’re a developer or builder who wants your logo or any other static data posted, be sure to submit a PR.\n\nAnd speaking of decentralized exchanges, Onbloc is also building Gnoswap, the first DEX to be powered by Gno.land, designed to simplify the concentrated liquidity experience and increase capital efficiency for traders. Its interface is built using TypeScript to be user-friendly, secure, and accessible for streamlining complex mechanisms such as price range configurations and staking as part of its core service. Contribute to its interface [here](https://github.com/gnoswap-labs/gnoswap-interface).\n\nAs for the contract side, Onbloc is actively working on its development with help from the core members of Gno.land. The code will be open-sourced for full transparency once the basic functions are ready.\n\n**New Core Contributors**\n\nWe’re excited to welcome two new core team members, Antonio and Zack. Antonio joined us in April in the core team, bringing with him vast experience in IPFS, and writing Git servers in Go. Zack is our first “tinkerer in residence” and will try to bootstrap the ecosystem of small contracts and small libraries. He will also be writing apps and helping us design a system to better share and showcase our work with a super UX for team builders and open-source addicts.\n\nAntonio is already hard at work researching a benchmarking dashboard that will show performance improvements or regressions when we change the code. He’s assessing whether to use GiHub to track actions or run our own machine to execute GitHub actions. Take a peek at his research so far on [issue 783 here](https://github.com/gnolang/gno/pull/783).\n\nZack is working on a microblog project. As an experienced web2 Go programmer, Zack is transitioning to web3. Since he’s interested in incentivized social networks, the microblog project will be his first realm, as a Twitter-style blog without titles, where each user has their own page based on their address. Check out [issue 391](https://github.com/gnolang/gno/pull/391) for more details.\n\n**Developer Events**\n\nOver the past few weeks, our core devs have been mainly focused on building but they’re preparing to speak at some exciting events in the coming months. Catch up with Manfred at BUIDL Asia, in Seoul, South Korea, from June 5 - 9. We’re co-hosting a side event with Onbloc, Code States, and Cosmostation on June 5, so be sure to register if you’re in town! We’ll also be at EthBelgrade in Serbia from June 2 - 4, and GopherCon in Berlin from June 26 - 29, so stop by and say hello.\n\n*Do you want to contribute to Gno.land’s monthly updates? If you’re building on Gno.land and want to highlight your development, project, event, or idea, let us know and we’ll include your contribution.*\n","gnoland,gnovm,tm2"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"xDAGmAwzVg9E31jeOcgPVV5HW+NF2psYH5bXGoBOkeQE/MCt/tWDWTHA/Lvm26Z+doH4UIhkgkl16e0RzzDjbw=="}],"memo":"from gnoblog-cli"}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/gnoland/blog","func":"ModEditPost","args":["monthly-dev-2","The More You Gno: Gno.land Monthly Updates #2","\n**The More You Gno 2: Gno.land Developer Updates**\n\nOver the past few weeks, our core devs and ecosystem contributors have been making massive strides on Gno.land. There’s a lot to cover in the second edition of *The More You Gno*, from updates on Tendermint2 and GnoVM to stack/frames management, Gno IDE, and plenty more. We’ll also see what some of the external teams contributing to the platform have been up to, including Gno.land’s first decentralized exchange, GnoSwap, and Adena compatibility with GRC20 tokens. Check it out.\n\n**Tendermint2**\n\nWe’re making steady development progress on Tendermint2, which focuses on simplicity of design, minimal code, minimal dependencies, modular dependencies, and completeness. For the time being, Tendermint2 will stay in the main repo in a top-level folder named Tendermint2. This is the official location to develop and improve the consensus protocol until it is stable enough to be extracted from the Gno repo and become a standalone project. Currently, Tendermint2 depends on GnoVM, however, we are working to unlink this dependency and build a basic demo Tendermint2 chain and Client.\n\nTendermint2 JS/TS Client is a JavaScript/TypeScript client implementation for Tendermint2-based chains. The client will make it easier for developers to interact with Tendermint2 chains, with a simplified API for account and transaction management, removing a ton of manual work and allowing developers to focus on building their dApps. You can [read more about the client here](https://www.npmjs.com/package/@gnolang/tm2-js-client). In addition to the Tendermint2 JS/TS client, we also created a Gno JS/TS client that just extends the TM2 one to provide Gno-specific functionality. You can read more about this here.\n\n**Game of Realms**\n\nThe incentivized competition to find the best contributors to Gno.land continues in phase one, with slow but steady progress being made. Nir1218 initiated an Evaluation DAO Kickoff discussion in [issue 792](https://github.com/gnolang/gno/pull/792) to initiate testing code for the key smart contract infrastructure that will power the Gno.land platform. We are also interviewing architects for the core team with experience in governance modules and creating new economies on-chain, and a new DevRel team member will be joining us soon to create awesome tutorials and documentation to advance Game of Realms further. Gno.land must be built by the community and we will not rush to push Game of Realms to the second phase until we have found quality contributors to complete the challenge tasks and become the platform’s first founding members.\n\n**Gno IDE**\n\nOur core development team is working on a web-based IDE for Gno.land that will greatly improve the developer experience, allowing builders to quickly spin up Gno realms and packages right on their browsers just by visiting a web app. Currently named Gno IDE but with a rebranding on the horizon, this intuitive product focuses on ease of use and improved UX, and will include all the features you’d expect from an IDE, such as auto compilation in the editor, debugging, extensive testing capability, and powerful APIs like IntelliJ to supercharge your programming.\n\nGno IDE currently has multiple modes to support different use cases, including a normal mode for everyday programming, similar to a standard code editor, a presentation mode for video calls or screen sharing, and an embedded mode to extend functionality, allowing you to embed the IDE directly into websites and blogs. You can also choose to edit your code in Emacs or Vim and easily switch between steps, from previous to next, making creating your tutorials and blog posts more intuitive. Watch out for more to come on Gno IDE soon, and if you want to contribute by creating a plugin for your favorite editor, open a PR to win contribution points.\n\n**Stack/Frames Management**\n\nThe stack/frames is an integral part of the virtual machine (VM) and the language. Stack/frames provide context for smart contract developers, enabling them to access useful information, such as the original caller, or to determine if a contract is being called through another one. The current implementation is limited in scope and relies on fixed positions in the stack which can lead to inconsistencies.\n\nThere is an ongoing [issue 683 open here](https://github.com/gnolang/gno/issues/683) and we have continued to work on enhancing stack/frames development over the last month. We’re adding a new function in the standard library std.PrevRealm (previously GetRealmCaller). Currently, we only have GetOrigCaller, which returns the user calling the first realm. This is not secure and we need a way to call the previous caller. This will allow a realm to handle GRC20 treasuries. See [issue 667](https://github.com/gnolang/gno/pull/667) and [issue 634](https://github.com/gnolang/gno/issues/634) for further details.\n\n**Dealing with Panics in Native Functions**\n\nWe have devised a solution for dealing with panics in native functions, [see pull request 732](https://github.com/gnolang/gno/pull/732). Previously, when there was a panic in a native function, we could not recover it in Gno code. An example of this was the assert origin call, which panicked if the call was not a direct call from a transaction. Based on discussions with contributors, we’ve agreed that native functions should never panic, but if they panic, they panic with machined Gno panic. This gives us the choice in a native function to code a Gno panic, or, if it's a very bad panic, use Go panic so that we know the Gno code is unable to recover it.\n\n**Logic Upgrading**\n\nMaking it possible to upgrade your logic is definitely out of scope for the first version of Gno.land, however, it’s an important issue that we have begun to discuss so that we can place certain restrictions on it, such as allowing upgrades when we consider them safe enough to be compatible with imports. Another idea is to work on creating workflows where migrations become something official. This way, we could define ways to migrate a contract completely in a single transaction at the chain level. Once everything is working and approved as the previous contract is parsed or archived, the new one gets the data. We will revisit this topic after the first version of Gno.land reaches the mainnet.\n\n**Garbage Collection**\n\nIn terms of garbage collection, we don’t have memory leaks as such but we do have defacto memory leaks. By the VM having references to all objects, they won’t be released by Go’s underlying GC. We have some form of reference counting but it is only done at the end of a transaction. We have implemented a mark-and-sweep garbage collector and are working on the VM runtime to manage the objects and signal to the garbage collector to release them when they are no longer needed. This is done by adding the notion of a heap, which is managed by the garbage collector.\n\n**GnoVM**\n\nDeveloping GnoVM is an ongoing task and we will likely need to fork the GnoVM to create different competing versions. GnoVM will be complete, limited in features, and serve as the only interpreter, an enduring reference point over time. Future versions of GnoVM will be designed to incorporate CosmWasm so that all Cosmos chains can have CosmWasm enabled and the VM can run directly on the browser and execute tasks on the browser without requiring to make an API call, making it faster. To do this, we can make a Gno compiler in WebAssembly without changing the code because Go supports WASM cross-compilation.\n\nWe plan on making a competing version of the original minimalist GnoVM, such as a Rust version with a JIT compiler using LLVM as a backend.\n\n**Ecosystem Updates**\n\nSince our last update, the Gno.land community continues to expand with awesome teams and contributors building cool infrastructure and projects on the platform. Below, we take a look at the largest developments of the past few weeks and extend a special thanks to everyone helping us build Gno.land.\n\n**Teritori**\n\nTeritori blockchain and multi-chain hub launched in November 2022, allowing IBC and non-IBC communities to connect, create groups, exchange tokens and NFTs, and launch new projects. Teritori’s idea for building on Gno.land is to create a multi-chain experience for users with a web portal, NFT marketplace, and social feed that will grow the community, and gradually integrate smart contracts and realms. This will promote Gno.land to more developers and showcase all the dApps being built through an easy-to-navigate dApp store. In the coming weeks, Teritori will work with the Onbloc team to integrate the Athena wallet into their portal as well as discuss ideas for promoting Game of Realms to new developers.\n\n**Onbloc**\n\nOnbloc is one of the Gno.land ecosystem’s most active contributors, responsible for building the Adena wallet and the block explorer Gnoscan. The team has also been working on creating an official Gno SDK that will allow developers to interact with Gno.land more easily, and remove some of the current friction. Onbloc opened [issue 701](https://github.com/gnolang/gno/issues/701) on GitHub primarily for developers who either have their own web app or are building a JavaScript app and want to work with Gno in some way. Currently, developers need to do a lot of manual work, which Gno SDK will abstract away, improving the workflow and developer experience. If you have any ideas or feedback, please contribute to the aforementioned issue.\n\nIn another cool development, Onbloc has rolled out a new feature in Adena and Gnoscan to provide support for GRC20 tokens. To store and send tokens, you can open your Adena wallet, click on \"Manage Tokens”, navigate to the Custom Token page, and see which GRC20 tokens are available on Gno Testnet 3, searching by the symbol or path. To research on or discover tokens, head over to the Tokens page on Gnoscan for a full list of GRC20 tokens. You can click on any token on the list for detailed information, such as the total supply, owner, or other available functions built into the token. The Account Details page has also been updated to display all tokens owned by each address. You can help by checking out [issue 764](https://github.com/gnolang/gno/pull/764), which discusses adding bigint to support a wide range of numbers and encoding binary, and [issue 816](https://github.com/gnolang/gno/pull/816), which highlights a small bug the team runs into when coding.\n\nOnbloc has also created a new [token resource page on GitHub](http://github/onbloc/gnotokenresources) for anyone to share or upload resources associated with their Gno.land project. This will serve as a shared knowledge pool about any dApp on the platform. If you wanted to create a decentralized exchange, for example, you would need all the information about the tokens available on Gno.land, such as their images, symbols, descriptions, links to websites, etc. Now you can find this in one handy GitHub repository. If you’re a developer or builder who wants your logo or any other static data posted, be sure to submit a PR.\n\nAnd speaking of decentralized exchanges, Onbloc is also building Gnoswap, the first DEX to be powered by Gno.land, designed to simplify the concentrated liquidity experience and increase capital efficiency for traders. Its interface is built using TypeScript to be user-friendly, secure, and accessible for streamlining complex mechanisms such as price range configurations and staking as part of its core service. Contribute to its interface [here](https://github.com/gnoswap-labs/gnoswap-interface).\n\nAs for the contract side, Onbloc is actively working on its development with help from the core members of Gno.land. The code will be open-sourced for full transparency once the basic functions are ready.\n\n**New Core Contributors**\n\nWe’re excited to welcome two new core team members, Antonio and Zack. Antonio joined us in April in the core team, bringing with him vast experience in IPFS, and writing Git servers in Go. Zack is our first “tinkerer in residence” and will try to bootstrap the ecosystem of small contracts and small libraries. He will also be writing apps and helping us design a system to better share and showcase our work with a super UX for team builders and open-source addicts.\n\nAntonio is already hard at work researching a benchmarking dashboard that will show performance improvements or regressions when we change the code. He’s assessing whether to use GiHub to track actions or run our own machine to execute GitHub actions. Take a peek at his research so far on [issue 783 here](https://github.com/gnolang/gno/pull/783).\n\nZack is working on a microblog project. As an experienced web2 Go programmer, Zack is transitioning to web3. Since he’s interested in incentivized social networks, the microblog project will be his first realm, as a Twitter-style blog without titles, where each user has their own page based on their address. Check out [issue 391](https://github.com/gnolang/gno/pull/391) for more details.\n\n**Developer Events**\n\nOver the past few weeks, our core devs have been mainly focused on building but they’re preparing to speak at some exciting events in the coming months. Catch up with Manfred at BUIDL Asia, in Seoul, South Korea, from June 5 - 9. We’re co-hosting a side event with Onbloc, Code States, and Cosmostation on June 5, so be sure to register if you’re in town! We’ll also be at EthBelgrade in Serbia from June 2 - 4, and GopherCon in Berlin from June 26 - 29, so stop by and say hello.\n\n*Do you want to contribute to Gno.land’s monthly updates? If you’re building on Gno.land and want to highlight your development, project, event, or idea, let us know and we’ll include your contribution.*\n","gnoland,gnovm,tm2"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"ETUtUBZp+BSHyKo7SahxcCTJN7B5p5Itpzez5/V4mKcLmnm/qOKvyW7flNXA0QItdwp4663ZTDOiT9zZCe+f/g=="}],"memo":"from gnoblog-cli"}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/gnoland/blog","func":"ModEditPost","args":["monthly-dev-1","The More You Gno: Gno.land Monthly Updates","\nWe made progress across the board at Gno.land last month, from onboarding more devs to receiving an influx of contributions to the Game of Realms contest. To encourage development and discourse, we set up a biweekly public developer call in addition to our biweekly Office Hours sessions. Anyone can join, ask questions, and give their suggestions on how to shape the Gno.land platform and become a contributor. Last month, we covered several pressing topics from Gno IDE and Gno.land website language, to GnoVM, IBC, and ICS. Jae also came back to the circuit in March with two IRL workshops for devs at side events during EthDenver and Game Developer Conference (GDC) in San Francisco.\n\n## Developer Updates\n\nYou can find the live streams of the new biweekly public developer calls on [Gno.land YouTube](https://www.youtube.com/@_gnoland/videos) as well as access the agendas on [GitHub](https://github.com/gnolang/meetings/blob/main/notes/2023_03_15_dev_call_notes.md). The main talking points this month were Gno IDE, Gno.land website language and UX, garbage collection, bug fixes, and how to bring IBC and ICS to the platform. We are working on all these issues concurrently but the order of release will be Gno.land mainnet, IBC, and then ICS (this is reflected in the DAG below).\n\n\n\n[![Gno.land mini DAG](https://gnolang.github.io/blog/2023-04-15_myg-march/thumbs/mini-dag.png)](https://gnolang.github.io/blog/2023-04-15_myg-march/mini-dag.png)\n\n## Gno.land Website Language\n\nWe want to add more features for developers, such as libraries to make writing interfaces better and more consistent. There is an open topic for frontend developers with typography skills and library developers to create a UI framework for markdown or a custom rendering system.\n\nInternally, our core team is working on improvements to Gno.land’s website, making it easier to navigate with shorter columns while ensuring the text is markdown centric and readable in plain text and the GitHub rendering machine. We hope to achieve this using CSS and having classes for vertical columns, without having to make an extension to the markdown parser.\n\n## Gno IDE\n\nGno.land developer experience team is working on a web-based Gno IDE for quickly building Gno realms and packages right on your browser by just visiting a web app. Gno IDE will provide much improved UX for everything around building a realm (including making the testing easier), and additional features like autocompletion in the editor. Gno IDE will contain all the features you would expect from an IDE as well as valuable APIs for devs building tools around Gno.land with the public Gno Infrastructure.\n\n[![Gno IDE](https://gnolang.github.io/blog/2023-04-15_myg-march/thumbs/gno-ide.png)](https://gnolang.github.io/blog/2023-04-15_myg-march/gno-ide.png)\n\nGno IDE will have multiple modes to support different use cases. The normal mode will be used during everyday developments (as you’re familiar with from other code editors). The presentation mode is for high accessibility and readability. You can use it during video calls or physical workshops while projecting your screen to an audience. The third and perhaps most interesting mode is the embedded mode. Use this mode to embed the IDE into websites and blogs. This feature is especially useful for tutorials to test out sample code, run it on the real testnets, and play with it.\n\n## IBC and ICS\n\nAs depicted in the DAG above, Gno.land mainnet will launch first, followed by IBC and then ICS. We will focus on implementing IBC1, as we strongly believe in the ICS model and want to be a consumer of an existing Cosmos chain. We want a common ICS implementation that works across many hubs because Gno.land is a type of hub that will need its own ICS to scale while providing GnoVM on consumer chains on the Cosmos Hub. Our next step now is to find the best way to configure ICS for Gno.land and make GnoVM available as a consumer chain in the Cosmos Hub system.\n\nRegarding IBC, we will use the current implementation that was written for the Cosmos SDK and port that over to Tendermint2. We anticipate some issues along the way including security patches that need to be applied to our code base. There are multiple ongoing directions and discussions about how to bridge Gno.land’s smart contracts to IBC, which are essentially Interchain smart contract interactions.\n\nOne possibility is to have an API that submits events to a queue of outgoing events, and another queue to receive and consume events asynchronously. This mechanism could work for IBC2 to have rich inter-contract Interchain features, and the same API could work for Interchain plus smart contract interactions that require advanced options. We discussed a proposal to create a standard for Interchain contracts so that IBC2 could eventually be standardized eliminating limitations by applying it with an EVM, other languages, and CosmWasm.\n\nThis protocol could be based on Protobuf or a similar well-known syntax definition protocol so that we can push the Interchain to the next level. IBC2 will be safe and fast and replace vulnerable atomic bridges between multiple technologies. This is a major update that we are committed to developing and we need help identifying all the challenges involved. Working on IBC integration, separate from the Gno.land mainnet launch, will require significant time to understand how the light client system works. If you’re interested in taking on this task, let us know and we’ll set up a group. IBC will likely be the most important challenge of Game of Realms phase 2.\n\n## Garbage Collection\n\nCurrently, our work on garbage collection does not address the problem in the traditional Golang sense of dealing with memory efficiency. Instead, we are progressively optimizing and improving the main state tree by automating the clean-up of orphan nodes. The next phase will be targeting the official garbage collector component to begin work on memory management as we have some common Golang garbage collection challenges, but are identifying some uncommon ones too.\n\nWe need to consider elements like where to hold our objects because this is tied to releasing them in a concurrent lock-free way. We also need a good data structure. This is ongoing research as of now to implement a dedicated routine to synchronously clean stuff in a non-blocking way.\n\n## Game of Realms\n\nThis month, we have seen a massive uptick in contributions to Game of Realms phase one with a tidal wave of issues, general discussions, and PRs. One of the biggest things we worked on was adding support for MOD, which is a version of Go mod with an easier interface to manage your dependencies and version your dependencies. You can track the ongoing issue on GitHub [here](https://github.com/gnolang/gno/issues/390).\n\nThere have been some really strong contributions to the Evaluation DAO and governance module, as well as a big CLI refactor that went into our code base. We've also seen people contribute contracts like GRC 1155 or general improvements to existing realms, with many suggestions for fixing bugs. Finding bugs and reporting what people want is a good indication that the Gno.land platform is being picked up and gaining adoption.\n\nYou can find the Office Hours recordings that cover Game of Realms on YouTube [here](https://www.youtube.com/watch?v=JTmNg-b6Lcs).\n\n## Developer Events Stateside\n\nGno.land hosted a lively meetup during EthDenver last month where Gno.land founder and core dev Jae Kwon gave a talk for Solidity developers called “Gno.land, the Inevitable Next Generation Smart Contract Platform.\" He compared and contrasted Gno.land and Gnolang to Solidity, and showed Ethereum developers how the GnoVM shifts the smart contract paradigm. You can watch the [recording here](https://www.youtube.com/watch?v=IJ0xel8lr4c).\n\nAlso in March, Jae hosted a gaming workshop at a side event during the infamous Gaming Developer Conference (GDC) in San Francisco. “Gno.land for Game Developers, Building Your App in Web3,\" showed participants a sample gaming app built on the Gno.land platform and offered them the chance to try their hand at writing a smart contract for their app with Gno.\n\n## Virtual Events - How to Build a Forum\n\nCore tech lead at Gno.land Miloš Živković held a virtual workshop for Go devs called “How to Build a Forum.” He showed how Gnolang is a fast and simple way to build and launch smart contracts using the Gnolang interpreter virtual machine that interprets Gno and eliminates the need for any servers or ORNs.\n\nThe VM allows for the memory state of your Gno.land application to persist automatically after every transactional function call, which is a completely new way to handle transaction volume and memory recall. You can watch the [full tutorial here](https://github.com/gnolang/workshops).\n\n*We’d like the community to get involved in Gno.land’s monthly updates, so if you’re building on Gno.land and want to highlight your development, project, event, or idea, let us know and we’ll include your contribution.*\n","gnoland,gnovm,tm2"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"WiG7vNZslSreQl7SzbLJfhZ2cS4r4LqLCpqo71bvHKcWgz6tKMQt5fYK4Nyey70jHY2LbsZb8Nh/sUS5r14hQA=="}],"memo":"from gnoblog-cli"}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/gnoland/blog","func":"ModEditPost","args":["monthly-dev-2","The More You Gno: Gno.land Monthly Updates - 2","\n**The More You Gno 2: Gno.land Developer Updates**\n\nOver the past few weeks, our core devs and ecosystem contributors have been making massive strides on Gno.land. There’s a lot to cover in the second edition of *The More You Gno*, from updates on Tendermint2 and GnoVM to stack/frames management, Gno IDE, and plenty more. We’ll also see what some of the external teams contributing to the platform have been up to, including Gno.land’s first decentralized exchange, GnoSwap, and Adena compatibility with GRC20 tokens. Check it out.\n\n**Tendermint2**\n\nWe’re making steady development progress on Tendermint2, which focuses on simplicity of design, minimal code, minimal dependencies, modular dependencies, and completeness. For the time being, Tendermint2 will stay in the main repo in a top-level folder named Tendermint2. This is the official location to develop and improve the consensus protocol until it is stable enough to be extracted from the Gno repo and become a standalone project. Currently, Tendermint2 depends on GnoVM, however, we are working to unlink this dependency and build a basic demo Tendermint2 chain and Client.\n\nTendermint2 JS/TS Client is a JavaScript/TypeScript client implementation for Tendermint2-based chains. The client will make it easier for developers to interact with Tendermint2 chains, with a simplified API for account and transaction management, removing a ton of manual work and allowing developers to focus on building their dApps. You can [read more about the client here](https://www.npmjs.com/package/@gnolang/tm2-js-client). In addition to the Tendermint2 JS/TS client, we also created a Gno JS/TS client that just extends the TM2 one to provide Gno-specific functionality. You can read more about this here.\n\n**Game of Realms**\n\nThe incentivized competition to find the best contributors to Gno.land continues in phase one, with slow but steady progress being made. Nir1218 initiated an Evaluation DAO Kickoff discussion in [issue 792](https://github.com/gnolang/gno/pull/792) to initiate testing code for the key smart contract infrastructure that will power the Gno.land platform. We are also interviewing architects for the core team with experience in governance modules and creating new economies on-chain, and a new DevRel team member will be joining us soon to create awesome tutorials and documentation to advance Game of Realms further. Gno.land must be built by the community and we will not rush to push Game of Realms to the second phase until we have found quality contributors to complete the challenge tasks and become the platform’s first founding members.\n\n**Gno IDE**\n\nOur core development team is working on a web-based IDE for Gno.land that will greatly improve the developer experience, allowing builders to quickly spin up Gno realms and packages right on their browsers just by visiting a web app. Currently named Gno IDE but with a rebranding on the horizon, this intuitive product focuses on ease of use and improved UX, and will include all the features you’d expect from an IDE, such as auto compilation in the editor, debugging, extensive testing capability, and powerful APIs like IntelliJ to supercharge your programming.\n\nGno IDE currently has multiple modes to support different use cases, including a normal mode for everyday programming, similar to a standard code editor, a presentation mode for video calls or screen sharing, and an embedded mode to extend functionality, allowing you to embed the IDE directly into websites and blogs. You can also choose to edit your code in Emacs or Vim and easily switch between steps, from previous to next, making creating your tutorials and blog posts more intuitive. Watch out for more to come on Gno IDE soon, and if you want to contribute by creating a plugin for your favorite editor, open a PR to win contribution points.\n\n**Stack/Frames Management**\n\nThe stack/frames is an integral part of the virtual machine (VM) and the language. Stack/frames provide context for smart contract developers, enabling them to access useful information, such as the original caller, or to determine if a contract is being called through another one. The current implementation is limited in scope and relies on fixed positions in the stack which can lead to inconsistencies.\n\nThere is an ongoing [issue 683 open here](https://github.com/gnolang/gno/issues/683) and we have continued to work on enhancing stack/frames development over the last month. We’re adding a new function in the standard library std.PrevRealm (previously GetRealmCaller). Currently, we only have GetOrigCaller, which returns the user calling the first realm. This is not secure and we need a way to call the previous caller. This will allow a realm to handle GRC20 treasuries. See [issue 667](https://github.com/gnolang/gno/pull/667) and [issue 634](https://github.com/gnolang/gno/issues/634) for further details.\n\n**Dealing with Panics in Native Functions**\n\nWe have devised a solution for dealing with panics in native functions, [see pull request 732](https://github.com/gnolang/gno/pull/732). Previously, when there was a panic in a native function, we could not recover it in Gno code. An example of this was the assert origin call, which panicked if the call was not a direct call from a transaction. Based on discussions with contributors, we’ve agreed that native functions should never panic, but if they panic, they panic with machined Gno panic. This gives us the choice in a native function to code a Gno panic, or, if it's a very bad panic, use Go panic so that we know the Gno code is unable to recover it.\n\n**Logic Upgrading**\n\nMaking it possible to upgrade your logic is definitely out of scope for the first version of Gno.land, however, it’s an important issue that we have begun to discuss so that we can place certain restrictions on it, such as allowing upgrades when we consider them safe enough to be compatible with imports. Another idea is to work on creating workflows where migrations become something official. This way, we could define ways to migrate a contract completely in a single transaction at the chain level. Once everything is working and approved as the previous contract is parsed or archived, the new one gets the data. We will revisit this topic after the first version of Gno.land reaches the mainnet.\n\n**Garbage Collection**\n\nIn terms of garbage collection, we don’t have memory leaks as such but we do have defacto memory leaks. By the VM having references to all objects, they won’t be released by Go’s underlying GC. We have some form of reference counting but it is only done at the end of a transaction. We have implemented a mark-and-sweep garbage collector and are working on the VM runtime to manage the objects and signal to the garbage collector to release them when they are no longer needed. This is done by adding the notion of a heap, which is managed by the garbage collector.\n\n**GnoVM**\n\nDeveloping GnoVM is an ongoing task and we will likely need to fork the GnoVM to create different competing versions. GnoVM will be complete, limited in features, and serve as the only interpreter, an enduring reference point over time. Future versions of GnoVM will be designed to incorporate CosmWasm so that all Cosmos chains can have CosmWasm enabled and the VM can run directly on the browser and execute tasks on the browser without requiring to make an API call, making it faster. To do this, we can make a Gno compiler in WebAssembly without changing the code because Go supports WASM cross-compilation.\n\nWe plan on making a competing version of the original minimalist GnoVM, such as a Rust version with a JIT compiler using LLVM as a backend.\n\n**Ecosystem Updates**\n\nSince our last update, the Gno.land community continues to expand with awesome teams and contributors building cool infrastructure and projects on the platform. Below, we take a look at the largest developments of the past few weeks and extend a special thanks to everyone helping us build Gno.land.\n\n**Teritori**\n\nTeritori blockchain and multi-chain hub launched in November 2022, allowing IBC and non-IBC communities to connect, create groups, exchange tokens and NFTs, and launch new projects. Teritori’s idea for building on Gno.land is to create a multi-chain experience for users with a web portal, NFT marketplace, and social feed that will grow the community, and gradually integrate smart contracts and realms. This will promote Gno.land to more developers and showcase all the dApps being built through an easy-to-navigate dApp store. In the coming weeks, Teritori will work with the Onbloc team to integrate the Athena wallet into their portal as well as discuss ideas for promoting Game of Realms to new developers.\n\n**Onbloc**\n\nOnbloc is one of the Gno.land ecosystem’s most active contributors, responsible for building the Adena wallet and the block explorer Gnoscan. The team has also been working on creating an official Gno SDK that will allow developers to interact with Gno.land more easily, and remove some of the current friction. Onbloc opened [issue 701](https://github.com/gnolang/gno/issues/701) on GitHub primarily for developers who either have their own web app or are building a JavaScript app and want to work with Gno in some way. Currently, developers need to do a lot of manual work, which Gno SDK will abstract away, improving the workflow and developer experience. If you have any ideas or feedback, please contribute to the aforementioned issue.\n\nIn another cool development, Onbloc has rolled out a new feature in Adena and Gnoscan to provide support for GRC20 tokens. To store and send tokens, you can open your Adena wallet, click on \"Manage Tokens”, navigate to the Custom Token page, and see which GRC20 tokens are available on Gno Testnet 3, searching by the symbol or path. To research on or discover tokens, head over to the Tokens page on Gnoscan for a full list of GRC20 tokens. You can click on any token on the list for detailed information, such as the total supply, owner, or other available functions built into the token. The Account Details page has also been updated to display all tokens owned by each address. You can help by checking out [issue 764](https://github.com/gnolang/gno/pull/764), which discusses adding bigint to support a wide range of numbers and encoding binary, and [issue 816](https://github.com/gnolang/gno/pull/816), which highlights a small bug the team runs into when coding.\n\nOnbloc has also created a new [token resource page on GitHub](http://github/onbloc/gnotokenresources) for anyone to share or upload resources associated with their Gno.land project. This will serve as a shared knowledge pool about any dApp on the platform. If you wanted to create a decentralized exchange, for example, you would need all the information about the tokens available on Gno.land, such as their images, symbols, descriptions, links to websites, etc. Now you can find this in one handy GitHub repository. If you’re a developer or builder who wants your logo or any other static data posted, be sure to submit a PR.\n\nAnd speaking of decentralized exchanges, Onbloc is also building Gnoswap, the first DEX to be powered by Gno.land, designed to simplify the concentrated liquidity experience and increase capital efficiency for traders. Its interface is built using TypeScript to be user-friendly, secure, and accessible for streamlining complex mechanisms such as price range configurations and staking as part of its core service. Contribute to its interface [here](https://github.com/gnoswap-labs/gnoswap-interface).\n\nAs for the contract side, Onbloc is actively working on its development with help from the core members of Gno.land. The code will be open-sourced for full transparency once the basic functions are ready.\n\n**New Core Contributors**\n\nWe’re excited to welcome two new core team members, Antonio and Zack. Antonio joined us in April in the core team, bringing with him vast experience in IPFS, and writing Git servers in Go. Zack is our first “tinkerer in residence” and will try to bootstrap the ecosystem of small contracts and small libraries. He will also be writing apps and helping us design a system to better share and showcase our work with a super UX for team builders and open-source addicts.\n\nAntonio is already hard at work researching a benchmarking dashboard that will show performance improvements or regressions when we change the code. He’s assessing whether to use GiHub to track actions or run our own machine to execute GitHub actions. Take a peek at his research so far on [issue 783 here](https://github.com/gnolang/gno/pull/783).\n\nZack is working on a microblog project. As an experienced web2 Go programmer, Zack is transitioning to web3. Since he’s interested in incentivized social networks, the microblog project will be his first realm, as a Twitter-style blog without titles, where each user has their own page based on their address. Check out [issue 391](https://github.com/gnolang/gno/pull/391) for more details.\n\n**Developer Events**\n\nOver the past few weeks, our core devs have been mainly focused on building but they’re preparing to speak at some exciting events in the coming months. Catch up with Manfred at BUIDL Asia, in Seoul, South Korea, from June 5 - 9. We’re co-hosting a side event with Onbloc, Code States, and Cosmostation on June 5, so be sure to register if you’re in town! We’ll also be at EthBelgrade in Serbia from June 2 - 4, and GopherCon in Berlin from June 26 - 29, so stop by and say hello.\n\n*Do you want to contribute to Gno.land’s monthly updates? If you’re building on Gno.land and want to highlight your development, project, event, or idea, let us know and we’ll include your contribution.*\n","gnoland,gnovm,tm2"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"O2PhqvO/shLk5rUH2YhTk2gStOXOnk7zxwM2Q61Rrk0oJURGxkSCcBbjKAPafFZWVoKK+RsmD1oep75oP4fA3w=="}],"memo":"from gnoblog-cli"}
{"msg":[{"@type":"/vm.m_call","caller":"g1u7y667z64x2h7vc6fmpcprgey4ck233jaww9zq","send":"","pkg_path":"gno.land/r/gnoland/blog","func":"ModAddPost","args":["monthly-dev-2","The More You Gno: Gno.land Monthly Updates - 2","\n**The More You Gno 2: Gno.land Developer Updates**\n\nOver the past few weeks, our core devs and ecosystem contributors have been making massive strides on Gno.land. There’s a lot to cover in the second edition of *The More You Gno*, from updates on Tendermint2 and GnoVM to stack/frames management, Gno IDE, and plenty more. We’ll also see what some of the external teams contributing to the platform have been up to, including Gno.land’s first decentralized exchange, GnoSwap, and Adena compatibility with GRC20 tokens. Check it out.\n\n**Tendermint2**\n\nWe’re making steady development progress on Tendermint2, which focuses on simplicity of design, minimal code, minimal dependencies, modular dependencies, and completeness. For the time being, Tendermint2 will stay in the main repo in a top-level folder named Tendermint2. This is the official location to develop and improve the consensus protocol until it is stable enough to be extracted from the Gno repo and become a standalone project. Currently, Tendermint2 depends on GnoVM, however, we are working to unlink this dependency and build a basic demo Tendermint2 chain and Client.\n\nTendermint2 JS/TS Client is a JavaScript/TypeScript client implementation for Tendermint2-based chains. The client will make it easier for developers to interact with Tendermint2 chains, with a simplified API for account and transaction management, removing a ton of manual work and allowing developers to focus on building their dApps. You can [read more about the client here](https://www.npmjs.com/package/@gnolang/tm2-js-client). In addition to the Tendermint2 JS/TS client, we also created a Gno JS/TS client that just extends the TM2 one to provide Gno-specific functionality. You can read more about this here.\n\n**Game of Realms**\n\nThe incentivized competition to find the best contributors to Gno.land continues in phase one, with slow but steady progress being made. Nir1218 initiated an Evaluation DAO Kickoff discussion in [issue 792](https://github.com/gnolang/gno/pull/792) to initiate testing code for the key smart contract infrastructure that will power the Gno.land platform. We are also interviewing architects for the core team with experience in governance modules and creating new economies on-chain, and a new DevRel team member will be joining us soon to create awesome tutorials and documentation to advance Game of Realms further. Gno.land must be built by the community and we will not rush to push Game of Realms to the second phase until we have found quality contributors to complete the challenge tasks and become the platform’s first founding members.\n\n**Gno IDE**\n\nOur core development team is working on a web-based IDE for Gno.land that will greatly improve the developer experience, allowing builders to quickly spin up Gno realms and packages right on their browsers just by visiting a web app. Currently named Gno IDE but with a rebranding on the horizon, this intuitive product focuses on ease of use and improved UX, and will include all the features you’d expect from an IDE, such as auto compilation in the editor, debugging, extensive testing capability, and powerful APIs like IntelliJ to supercharge your programming.\n\nGno IDE currently has multiple modes to support different use cases, including a normal mode for everyday programming, similar to a standard code editor, a presentation mode for video calls or screen sharing, and an embedded mode to extend functionality, allowing you to embed the IDE directly into websites and blogs. You can also choose to edit your code in Emacs or Vim and easily switch between steps, from previous to next, making creating your tutorials and blog posts more intuitive. Watch out for more to come on Gno IDE soon, and if you want to contribute by creating a plugin for your favorite editor, open a PR to win contribution points.\n\n**Stack/Frames Management**\n\nThe stack/frames is an integral part of the virtual machine (VM) and the language. Stack/frames provide context for smart contract developers, enabling them to access useful information, such as the original caller, or to determine if a contract is being called through another one. The current implementation is limited in scope and relies on fixed positions in the stack which can lead to inconsistencies.\n\nThere is an ongoing [issue 683 open here](https://github.com/gnolang/gno/issues/683) and we have continued to work on enhancing stack/frames development over the last month. We’re adding a new function in the standard library std.PrevRealm (previously GetRealmCaller). Currently, we only have GetOrigCaller, which returns the user calling the first realm. This is not secure and we need a way to call the previous caller. This will allow a realm to handle GRC20 treasuries. See [issue 667](https://github.com/gnolang/gno/pull/667) and [issue 634](https://github.com/gnolang/gno/issues/634) for further details.\n\n**Dealing with Panics in Native Functions**\n\nWe have devised a solution for dealing with panics in native functions, [see pull request 732](https://github.com/gnolang/gno/pull/732). Previously, when there was a panic in a native function, we could not recover it in Gno code. An example of this was the assert origin call, which panicked if the call was not a direct call from a transaction. Based on discussions with contributors, we’ve agreed that native functions should never panic, but if they panic, they panic with machined Gno panic. This gives us the choice in a native function to code a Gno panic, or, if it's a very bad panic, use Go panic so that we know the Gno code is unable to recover it.\n\n**Logic Upgrading**\n\nMaking it possible to upgrade your logic is definitely out of scope for the first version of Gno.land, however, it’s an important issue that we have begun to discuss so that we can place certain restrictions on it, such as allowing upgrades when we consider them safe enough to be compatible with imports. Another idea is to work on creating workflows where migrations become something official. This way, we could define ways to migrate a contract completely in a single transaction at the chain level. Once everything is working and approved as the previous contract is parsed or archived, the new one gets the data. We will revisit this topic after the first version of Gno.land reaches the mainnet.\n\n**Garbage Collection**\n\nIn terms of garbage collection, we don’t have memory leaks as such but we do have defacto memory leaks. By the VM having references to all objects, they won’t be released by Go’s underlying GC. We have some form of reference counting but it is only done at the end of a transaction. We have implemented a mark-and-sweep garbage collector and are working on the VM runtime to manage the objects and signal to the garbage collector to release them when they are no longer needed. This is done by adding the notion of a heap, which is managed by the garbage collector.\n\n**GnoVM**\n\nDeveloping GnoVM is an ongoing task and we will likely need to fork the GnoVM to create different competing versions. GnoVM will be complete, limited in features, and serve as the only interpreter, an enduring reference point over time. Future versions of GnoVM will be designed to incorporate CosmWasm so that all Cosmos chains can have CosmWasm enabled and the VM can run directly on the browser and execute tasks on the browser without requiring to make an API call, making it faster. To do this, we can make a Gno compiler in WebAssembly without changing the code because Go supports WASM cross-compilation.\n\nWe plan on making a competing version of the original minimalist GnoVM, such as a Rust version with a JIT compiler using LLVM as a backend.\n\n**Ecosystem Updates**\n\nSince our last update, the Gno.land community continues to expand with awesome teams and contributors building cool infrastructure and projects on the platform. Below, we take a look at the largest developments of the past few weeks and extend a special thanks to everyone helping us build Gno.land.\n\n**Teritori**\n\nTeritori blockchain and multi-chain hub launched in November 2022, allowing IBC and non-IBC communities to connect, create groups, exchange tokens and NFTs, and launch new projects. Teritori’s idea for building on Gno.land is to create a multi-chain experience for users with a web portal, NFT marketplace, and social feed that will grow the community, and gradually integrate smart contracts and realms. This will promote Gno.land to more developers and showcase all the dApps being built through an easy-to-navigate dApp store. In the coming weeks, Teritori will work with the Onbloc team to integrate the Athena wallet into their portal as well as discuss ideas for promoting Game of Realms to new developers.\n\n**Onbloc**\n\nOnbloc is one of the Gno.land ecosystem’s most active contributors, responsible for building the Adena wallet and the block explorer Gnoscan. The team has also been working on creating an official Gno SDK that will allow developers to interact with Gno.land more easily, and remove some of the current friction. Onbloc opened [issue 701](https://github.com/gnolang/gno/issues/701) on GitHub primarily for developers who either have their own web app or are building a JavaScript app and want to work with Gno in some way. Currently, developers need to do a lot of manual work, which Gno SDK will abstract away, improving the workflow and developer experience. If you have any ideas or feedback, please contribute to the aforementioned issue.\n\nIn another cool development, Onbloc has rolled out a new feature in Adena and Gnoscan to provide support for GRC20 tokens. To store and send tokens, you can open your Adena wallet, click on \"Manage Tokens”, navigate to the Custom Token page, and see which GRC20 tokens are available on Gno Testnet 3, searching by the symbol or path. To research on or discover tokens, head over to the Tokens page on Gnoscan for a full list of GRC20 tokens. You can click on any token on the list for detailed information, such as the total supply, owner, or other available functions built into the token. The Account Details page has also been updated to display all tokens owned by each address. You can help by checking out [issue 764](https://github.com/gnolang/gno/pull/764), which discusses adding bigint to support a wide range of numbers and encoding binary, and [issue 816](https://github.com/gnolang/gno/pull/816), which highlights a small bug the team runs into when coding.\n\nOnbloc has also created a new [token resource page on GitHub](http://github/onbloc/gnotokenresources) for anyone to share or upload resources associated with their Gno.land project. This will serve as a shared knowledge pool about any dApp on the platform. If you wanted to create a decentralized exchange, for example, you would need all the information about the tokens available on Gno.land, such as their images, symbols, descriptions, links to websites, etc. Now you can find this in one handy GitHub repository. If you’re a developer or builder who wants your logo or any other static data posted, be sure to submit a PR.\n\nAnd speaking of decentralized exchanges, Onbloc is also building Gnoswap, the first DEX to be powered by Gno.land, designed to simplify the concentrated liquidity experience and increase capital efficiency for traders. Its interface is built using TypeScript to be user-friendly, secure, and accessible for streamlining complex mechanisms such as price range configurations and staking as part of its core service. Contribute to its interface [here](https://github.com/gnoswap-labs/gnoswap-interface).\n\nAs for the contract side, Onbloc is actively working on its development with help from the core members of Gno.land. The code will be open-sourced for full transparency once the basic functions are ready.\n\n**New Core Contributors**\n\nWe’re excited to welcome two new core team members, Antonio and Zack. Antonio joined us in April in the core team, bringing with him vast experience in IPFS, and writing Git servers in Go. Zack is our first “tinkerer in residence” and will try to bootstrap the ecosystem of small contracts and small libraries. He will also be writing apps and helping us design a system to better share and showcase our work with a super UX for team builders and open-source addicts.\n\nAntonio is already hard at work researching a benchmarking dashboard that will show performance improvements or regressions when we change the code. He’s assessing whether to use GiHub to track actions or run our own machine to execute GitHub actions. Take a peek at his research so far on [issue 783 here](https://github.com/gnolang/gno/pull/783).\n\nZack is working on a microblog project. As an experienced web2 Go programmer, Zack is transitioning to web3. Since he’s interested in incentivized social networks, the microblog project will be his first realm, as a Twitter-style blog without titles, where each user has their own page based on their address. Check out [issue 391](https://github.com/gnolang/gno/pull/391) for more details.\n\n**Developer Events**\n\nOver the past few weeks, our core devs have been mainly focused on building but they’re preparing to speak at some exciting events in the coming months. Catch up with Manfred at BUIDL Asia, in Seoul, South Korea, from June 5 - 9. We’re co-hosting a side event with Onbloc, Code States, and Cosmostation on June 5, so be sure to register if you’re in town! We’ll also be at EthBelgrade in Serbia from June 2 - 4, and GopherCon in Berlin from June 26 - 29, so stop by and say hello.\n\n*Do you want to contribute to Gno.land’s monthly updates? If you’re building on Gno.land and want to highlight your development, project, event, or idea, let us know and we’ll include your contribution.*\n","gnoland,gnovm,tm2"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnK+a6mcFDjY6b/v6p7r8QFW1M1PgIoQxBgrwOoyY7v3"},"signature":"koeSsUqbY47n7ynsfDSo+4JbnyJLOERybOkX5FpGZYY0ioZdH3c6FLhyWOlsnPlb6URfarURVwzzfQZTUuNfWg=="}],"memo":"from gnoblog-cli"}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1kxa74mz8hul5tge3rvyep6epzhkf99x29zac7g","to_address":"g1fzjcyrhv7rtrpwhsd0mhl9n7ahxm0v34p9w5kn","amount":"999999ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/rLJAbJ6FDKQm3GA5RLimerzN2dJSqFzOpUECkD7J3O"},"signature":"XJeNNa00WSGkAiM+nvDlzLUShsFWkvJOvwhjG7n9PzEvGdgF26MXrBdzxCdNq/O0DfGX5ApWMOZIkDaFLYk30Q=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1fzjcyrhv7rtrpwhsd0mhl9n7ahxm0v34p9w5kn","to_address":"g1kxa74mz8hul5tge3rvyep6epzhkf99x29zac7g","amount":"100999997ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7BGCHnC+0EaBkHciQ6D+fFVnlumBrn4QABY4FhxNlab"},"signature":"ybJ/RhRdko6UPL72Uied9SLt2NNFmveS33UDT7/oTj4mkW6DYzY2OY65p2a1GO+KFtAzX7sv9ybVt2Y5WgVw+g=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1fsu3z335h5qngf7t3lmakvpmpwg9ae76tqwh7c","to_address":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","amount":"20000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArpuZWPhPhGbXRDOr5vjwl7Ro++55QZaJ7/jUUbkpMHK"},"signature":"LLQnB/Y57oud9G7dpE/GOpZBpsQV0e6xckGpGijB24xXbR4C0q8n2R2aIo8LEdbiNvtx4ufGXrY8rOfUNrxMKw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1fsu3z335h5qngf7t3lmakvpmpwg9ae76tqwh7c","to_address":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","amount":"20000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArpuZWPhPhGbXRDOr5vjwl7Ro++55QZaJ7/jUUbkpMHK"},"signature":"UGr08L7dTjmK5mYBntmt5tYday+UX3sUoW65WfPfINo8Zs/wWvlPkWiJkPbv5IdhE3hXJh2k4PQmyQQ7SljfbQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1fsu3z335h5qngf7t3lmakvpmpwg9ae76tqwh7c","to_address":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","amount":"10000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArpuZWPhPhGbXRDOr5vjwl7Ro++55QZaJ7/jUUbkpMHK"},"signature":"WSqf2ASpmJrUcMNhOXT3y+8M+7arSrW4VSgO29DbNAxxXYEkvHjRWK+EskWhjp4qxA4FRB0V04qirQs6WE/hhA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1fsu3z335h5qngf7t3lmakvpmpwg9ae76tqwh7c","to_address":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","amount":"10000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArpuZWPhPhGbXRDOr5vjwl7Ro++55QZaJ7/jUUbkpMHK"},"signature":"9A+AuW7kPftGJ9TsoRnpMpl9OIZaaefYmcxVsmPeQetNiPuL0QOBybDh+hnAhlFZOc/yg8vgIFez6g5iAnOjnA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1fsu3z335h5qngf7t3lmakvpmpwg9ae76tqwh7c","to_address":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","amount":"20000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArpuZWPhPhGbXRDOr5vjwl7Ro++55QZaJ7/jUUbkpMHK"},"signature":"U3F8u5tB/0cf3oDpwi0r6R/sKbm7kV2eYtVfy4qNW/d2TvIz5AQVyTd4WT6SfX7P16++uuIY2NvywyZNrEhHcA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1fsu3z335h5qngf7t3lmakvpmpwg9ae76tqwh7c","to_address":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","amount":"40000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArpuZWPhPhGbXRDOr5vjwl7Ro++55QZaJ7/jUUbkpMHK"},"signature":"hVGoH/UBVJAk4PK1CvbT5lrKuBAob2uMLVI95rEcRSdOJU4IBq1Hax6hK/KnxunAK41nCvSJHb9LGJebgBnK6A=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1fsu3z335h5qngf7t3lmakvpmpwg9ae76tqwh7c","to_address":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","amount":"10000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArpuZWPhPhGbXRDOr5vjwl7Ro++55QZaJ7/jUUbkpMHK"},"signature":"x8mW+bFpAkgzl26pKHfxG3+A0J9yStaQHHLQN7kFAaskWGt4MoMsXnqb07trEMmK9hosaVd9VSvmCUfm25yHDA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g17j9y7xmxsjz57xxvxd4crpnfmsjnut0aqwedx9","to_address":"g1yex6j29msk64cave03ahxzvlf5jeqqp442sfcc","amount":"10000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwVrtwdi1lJ6bXwz9+XjAAtoJVMpy1MG6OtAZiuZhcI1"},"signature":"mjeA0UjWO3NwzEi2Q9Ztnwnc5XqGwLAmSNDvUPAe+sp5pwkugkTzX7ioHz+yRCiY4qA+1bZ63ZHgICvSBRt1jw=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1l7nmtmzptycmt36lrju4ypum2yr5zx244c52r3","to_address":"g1g099amdxjh0wypda4klsk9lmvmsxhqmwjgz34s","amount":"13000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A98IFyM+yKsk0qIx5E0oc4bZxYWQ9WnMDU1kiclZmnpK"},"signature":"Dlntf5KSq+zPwA0gyMQ0RIQYgs1psXowbAxMtHcBlxJbouu2GNgyMN51W7FE7HksC2eCY9ggkYZ61EA84WJXmg=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g14guhyq2r7sjquj6v0l03a4t99hrvxxpl5lf0tx","to_address":"g13eqyhz6trg6xq5axe2kacztv28uuk4ayvkat9c","amount":"20000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Al2BCCwOh52xkx1tn9J8xJe7ifmNOrna6i6/hcV4/MCa"},"signature":"F8rj3NHSQpxzkEdxA2X52qeEfBzJtQyruwkyIKBi+KkBbu3wvq0xjTJEnpRyzLxYkvnLgbwwt6oxQr1F+5MAtQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1z6ups0smz4sw6flu0d8zwtlc8cumaskgxsduqz","to_address":"g14qqtnhguhg6ll0z68nhy3h60rnd30knrpd3qxj","amount":"3000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"An/W0Tg468dxODpBDYxefgQBJLiKkAPBV8RBu0Wij7dA"},"signature":"x4rqQ5A65b5tvwMaKn/3uN4xj9K5T8kXoT2NoJcGd2FVLdU3N8YiVWrzb2IWWfkSCI90oHrLwEV8+AaP7qYdjA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17mcw908lp5y006avp4fjr082wrzryzqh2qgr8k","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g17u9rshemksrfpgr4qcp47q6uh98ns00f8hmdx8","123"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1Ie2uJQVGI4K/6kwsKQkZK48YDrk3Ic4DKiVS1Ee2yL"},"signature":"MBzwGKGgMPNo94gmM/5uWL4+3cRvCiXLYBN3HVqbPDhvlfcxJUd3V4Wm1u7eRukX9JfFbp1zCj+zj3pOo3WgeA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1flk9z2qmkgqeyrl654r3639rzgz7xczdfwwqw7","5"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"uqLlGGfJXJC477HRkcZf2wZqsN9UbXIoG6CadhdqJfo6LXPkC2GhQS0T1Om1QNi8S4xWTL8iuZ7aEJ7WEgT1xQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1y00a6w0t893yldq6e2karpwqwzh29cz3e0tkah","to_address":"g183qc644n8fqzuqapy6q0tkcc9qhwqarg3uflnh","amount":"12000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aus4efhyOq6IQOIxHPOJrATpDwNGdPQnWN2fM290X4C/"},"signature":"uW9PILMCcWq3EwungDMuBQ316PAJ3ee/u1RTwQ7070VKqFCHLnlpR+NKhSvvpIEpaOMParv7Uxcqj2x5GcSyqQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1hxecqgcv4f0p7s7ap6t20vaeeuvqgvl9qtchr6","1234"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"iYrA1kCO7HhvUEITzcdZsq/a3vvGcWN1AtvlzxyhwGcr1lPU63xOwMn8X+7Oa7ZSPqjQrmDVKg6zHqvKtc/8cA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hxecqgcv4f0p7s7ap6t20vaeeuvqgvl9qtchr6","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g183qc644n8fqzuqapy6q0tkcc9qhwqarg3uflnh","3"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuJxl7LShR2+FGthhNED94mz+IowgGHOGEXtOnrBkqq5"},"signature":"plCm6+VTlXXIU8SaWUZ0TMtt2Wb5DJJ4DRDnuCxnVV9/zcz9hx74cX5+lPguf/5VRU2DPGO/b5KEcUF0DLnhQg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hxecqgcv4f0p7s7ap6t20vaeeuvqgvl9qtchr6","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g183qc644n8fqzuqapy6q0tkcc9qhwqarg3uflnh","3456789"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuJxl7LShR2+FGthhNED94mz+IowgGHOGEXtOnrBkqq5"},"signature":"yodT2JNZRzWVBFR8OfAW03Vlq+kmWEN8CjXMLiTWy4tbRIAph3RXaDzz65iPi0xKfpOiuCscSkEMiXNhQ0K0/Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hxecqgcv4f0p7s7ap6t20vaeeuvqgvl9qtchr6","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1mjzyk7r49ta4h6ppgv2fedgz5ek6hgyttge9pv","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuJxl7LShR2+FGthhNED94mz+IowgGHOGEXtOnrBkqq5"},"signature":"O5fC7dSqYKWWRG1oEtuArHivKcKOPjOvuSO7iqkGTWAQVQSgI490x89V9aOoZdSnRCnci0gPwySUQz/Tdido1Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hxecqgcv4f0p7s7ap6t20vaeeuvqgvl9qtchr6","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1mjzyk7r49ta4h6ppgv2fedgz5ek6hgyttge9pv","1228"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuJxl7LShR2+FGthhNED94mz+IowgGHOGEXtOnrBkqq5"},"signature":"xRyr4+dlfQMM0XSgBEBHCyU8YzRVaRK0Eiq58QnCKisCbDF10HsMKJCxnHJWnNYTujEKG9ADcUF2BJRLQmVbkA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hxecqgcv4f0p7s7ap6t20vaeeuvqgvl9qtchr6","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g183qc644n8fqzuqapy6q0tkcc9qhwqarg3uflnh","1234567890"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuJxl7LShR2+FGthhNED94mz+IowgGHOGEXtOnrBkqq5"},"signature":"OsrpbydJkFpq229cW2d6O51Fl4WRQaRzqKe7kbz/3gFWGg+1VwXqgpqxqm5UWJm33WkmdwgjT0dhiN0EUQFMvQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g183qc644n8fqzuqapy6q0tkcc9qhwqarg3uflnh","to_address":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","amount":"11000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5XQ9SBS7WBA44IZGpu5wntarn9DHeqGY+nU5efQLT6f"},"signature":"MnDkNAEnbnfNvG60E4aYdYuts8mZBJozD+Yu2/W0Hr4Y1rSDWP8Y1G+drIGg9zSrikRP4T5ihoE6DPCrnoeI7g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g183qc644n8fqzuqapy6q0tkcc9qhwqarg3uflnh","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5XQ9SBS7WBA44IZGpu5wntarn9DHeqGY+nU5efQLT6f"},"signature":"E+9lPPyoSE6O45+GTYREDq4CLLQmnYn70FX+tf+aSXxlxdTWY+pNU3a7SrBpdNwhnOYi9uUqpRxmsiP+1xEBSw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1flk9z2qmkgqeyrl654r3639rzgz7xczdfwwqw7","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g1flk9z2qmkgqeyrl654r3639rzgz7xczdfwwqw7","1"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0cN2jM5SaG0tbXUEYYhgUmFIGjdIxzlDeBxpetbIQsa"},"signature":"r4qMGMki+hwK36gFS6qX/d37KnrAVSozwHOEdUKVGWVO6r9OgsohkJ4wL/uVlZ8Lj2HdA87qvwq4Y0K8Coo6VQ=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g1fsu3z335h5qngf7t3lmakvpmpwg9ae76tqwh7c","to_address":"g14qqtnhguhg6ll0z68nhy3h60rnd30knrpd3qxj","amount":"35000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArpuZWPhPhGbXRDOr5vjwl7Ro++55QZaJ7/jUUbkpMHK"},"signature":"9pnS8OuLoajkjSQt7nvbVOkqRlFqkcGLjq4KeNhqn1F3ZxCzr7ufHZQ4NAsTlMfuP5WeBu40tRBXSsUw6qiYtQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g183qc644n8fqzuqapy6q0tkcc9qhwqarg3uflnh","1"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"SxursxeDjN16n5ZAduiY912hf7/a0/BwX+TTvZQUpmBruiUg09/xBDV43K9G44WYMvE6cYJaJeAeJLppB/bf/w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g183qc644n8fqzuqapy6q0tkcc9qhwqarg3uflnh","2"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"NK80w2YbenRxNC4JZoOTIiKlbj4yPJQD+7l4rUYR3dMSGeRP9u8OZVvJhsadiieuS4THVPE/5EsiOr/RSzRrxg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g183qc644n8fqzuqapy6q0tkcc9qhwqarg3uflnh","3"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"UqqP2Yjqdn9dtK6f4RDH2skCkk8GI8NFqDOw94zR5wkHi9z+AE4IVadI5ug6+FgUQFF3CzCPJz/llFMPwqG1dg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g183qc644n8fqzuqapy6q0tkcc9qhwqarg3uflnh","4"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"a5q1F9eIDiPhGOyqYn4iThP+Rf18h7dIa3Ov9f2bs+ANCwHaUEm5ZqBMUhWJUtEKK3wnE9Au4LcivHWy0hgjOw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g183qc644n8fqzuqapy6q0tkcc9qhwqarg3uflnh","5"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"lMhufm+1CtpoXjggdklYQ0AemOUPhHtL/q5cMc/leqkFrrWE3SDPoU69r2BK0KJR4dE8xuLwGXyZg5RvudTMJw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g183qc644n8fqzuqapy6q0tkcc9qhwqarg3uflnh","6"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"8qhwX1tbbxnUAK5HiWO7chlhIefrT6Hhh5OgtMVQBz98D3XSO7o7tBexjYL4fKQhCkG7XMOk+l+FAUJjevjvJg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g183qc644n8fqzuqapy6q0tkcc9qhwqarg3uflnh","7"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"rS9QqIyH4akwACz7K64p8Z1gggm8kDrABqq2nFF0S8hREwlddU99Cw5mV0g6PjtqppMHM0htdNZuAUH9SC87Uw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g183qc644n8fqzuqapy6q0tkcc9qhwqarg3uflnh","8"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"dQl+P/eBIqfTi6nR0zpIoX2Z/wTF++KZaQH4aSSfR0Y7htGI+RatffNvim/Ubsw5EhRQnOQ0nWek6TrmitpkRw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g183qc644n8fqzuqapy6q0tkcc9qhwqarg3uflnh","9"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"pTJnmfi8U7RF0/PxuyutHlczpHEQH1le5b9au+bFyKJaGsSpq0louizqU4+eACwRlO9v7B33apKJ7LQobXC00g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g183qc644n8fqzuqapy6q0tkcc9qhwqarg3uflnh","10"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"uy+5te6b06jqP1CQCvMmxRwITMEqlM+39EimW04mtJRNBZhrP3UjD3F1sZVmuCBFwBk6SuCU0nJWxQC6yDLInA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/tong","func":"Faucet","args":null}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"sLxyEqCDJ+wxlt7CR9SX2m9Ct4LGugmk78xhsZ1Zc+gkm8LquAKp6r8G8bBOlHI2hKcO9DRy1kCrOab5LTBFUQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","send":"","pkg_path":"gno.land/r/demo/foo20","func":"Transfer","args":["g183qc644n8fqzuqapy6q0tkcc9qhwqarg3uflnh","1"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AshocLMsZgjD1Q08bZUfI1akIdxlp2BcUNjdkX3ChTWW"},"signature":"AuiIBuLPVRgkoQuCoU7N28ngegt5ePcZUivKJmw4RaA8rRNTvyWq5ZyG86NtZ26HNzXvva7LokN9keWvWFdUUg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1eddgf83tjx33h0k6xc6r0ah6z350xaq0ckr5nh","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"CYc+OBtOMZRGjoS8kuXaIIx8bzJb3h3MVs4yqQv57u1QsrPfggYONcrlggJXZ/lTsJuKCe7O5Dy1tzGxMDwhGA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1eddgf83tjx33h0k6xc6r0ah6z350xaq0ckr5nh","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","cusppalm",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2Adx0ZbD0dxIra69RUzaeZRF90YbEsjltTKfk02UqbE"},"signature":"ccdUEpJG/F+oExYvD/xyyCBIropZCbS3jC+ua4/RcIwCeMb9oSLJ7/3TfH3+MiQBZGYVcA7/wFbYD5oKQY11UQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1eddgf83tjx33h0k6xc6r0ah6z350xaq0ckr5nh","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["cusppalm"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2Adx0ZbD0dxIra69RUzaeZRF90YbEsjltTKfk02UqbE"},"signature":"daRsCAGySdtAdIKj+3uhNOlryTTpdh4CEq4krCpkrgZ4mOSbpQ63FxY8vAa5J0t9piaZgUNPbVDQF+XT4d7BvA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1z9gs3xen0cf4uweq6z9z2m3vm5wnqyr4mmy8tk","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"OguL8qsG+i/3HWSPP+JJspTmmVEQdbC6LaGTlrRoDvZS/AOd+cuaIUZhrBwc706KuvAYScMS1FDco7YP8SdsuA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1z9gs3xen0cf4uweq6z9z2m3vm5wnqyr4mmy8tk","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","plicecube",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmcZUCKV6AIpuc9pEPoaMM9WLNaIR+RZ8h0+G1YCkJ2S"},"signature":"wujJ4vi5pzKz+nSqu6pPeaacpxgUe8zl+tVHYMeLraZh1dRdcPBpviEVqgJcK1K0F+P5jZrJZL85mYgDXNlx1A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1z9gs3xen0cf4uweq6z9z2m3vm5wnqyr4mmy8tk","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["plicecube"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmcZUCKV6AIpuc9pEPoaMM9WLNaIR+RZ8h0+G1YCkJ2S"},"signature":"dlxkGrwaH0D1Ky+4pjMU43h38gefJguFjgb66QJ6VCtxsNYklH6i23tls0bv24m5yhyMBGSIMXpxB+/HtAEaUw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1wwqy2qt5f0ua0p8lc2hg9z4vz5xx874wx6aqsl","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"wJjuZjSxGck+xQe8QWxSFI+G9iFESIEdFpIKc7CSF204X3QqJJjOYlCUFQIJihvXuFboEYMW4pka6qYBCsZ3yA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1wwqy2qt5f0ua0p8lc2hg9z4vz5xx874wx6aqsl","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","cootvent",""]}],"fee":{"gas_wanted":"3000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9Z6CoCJ3kO/gDC35nB9RgQqEKY7C46IT0aE9lec+gMO"},"signature":"BrOVegZjadAPtEkJHYa2PvBB5w73IeYs+T5gnAH0ad1yvXHnSXO6Z8WDmRxwLH0xAQm1zmXcyqiA1/uIhgeXkQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1wwqy2qt5f0ua0p8lc2hg9z4vz5xx874wx6aqsl","send":"1000000ugnot","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["cootvent"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9Z6CoCJ3kO/gDC35nB9RgQqEKY7C46IT0aE9lec+gMO"},"signature":"pWyCIHSjR2WMJqanpizGrzw9RNNXnxPEqIngpnrjwRBwMI/vtRl0rJ7+Dd28oeEYuhingb/BBRXB6A3zN+gPIw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1eddgf83tjx33h0k6xc6r0ah6z350xaq0ckr5nh","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1288","Gno-land-serves-as-a-sophisticated-and-groundbreaking-platform","https://medium.com/@markrozenko10/gno-land-serves-as-a-sophisticated-and-groundbreaking-platform-that-revolutionizes-the-landscape-f686cf3e65d8"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2Adx0ZbD0dxIra69RUzaeZRF90YbEsjltTKfk02UqbE"},"signature":"1tnzDdxlqCSgIlezXU1UZrh78AW/oZEN2RYZTRPZRPgLEh3ZWUTpqozRyYBawcpe+6Grq1T95Cu5ACn29tJq+Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1z9gs3xen0cf4uweq6z9z2m3vm5wnqyr4mmy8tk","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1289","Platform -- GnoLand","https://teletype.in/@elisasas/MMCg7ZV8plW"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmcZUCKV6AIpuc9pEPoaMM9WLNaIR+RZ8h0+G1YCkJ2S"},"signature":"wBx2zrKdClMQW4zQI14vkWWtS/FclPNY+ZsrPRJI2oVKGutyBlYrGZowmANjyWaRMe9TiCac1Zq7VJMJv9jNqg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1wwqy2qt5f0ua0p8lc2hg9z4vz5xx874wx6aqsl","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1290","Gno.land serves","https://teletype.in/@markoszs/Gflvfe94cLy"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9Z6CoCJ3kO/gDC35nB9RgQqEKY7C46IT0aE9lec+gMO"},"signature":"lEYGD0/Z+vFuXv24MOyYSn7+ieeiSR87Hta9d0ljT6dqdxjPCcHHfOaw56kX+KZ4EeXOkmmqdS9df2riFsESrA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1kvzfu3lmrv6et2mgm34np7s388ew2526p89f2v","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"+VsVodFvaWByO2m5oqTvKPazkH/+17AA+oGjNuT2SNA9MZ2oMDFttekSvHU3KK65rhwcMTDAgfvZuaRBR6CWPQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1qtr5uhenx3tzhllqaej32evd76t3rhzeh7ynml","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Sbebrocghu6V280nxmeTqacIsOMqRJxH+H8YYZcY/D86PP2F3nxh3pvolbZWN0qhjH2GhS3vMYy7pbX9zinVAg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1vt3d2qld503h9ma0a6mktylsajrefxqvynw3jg","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"/3PWFEqaHEt0PXMBm8DLeXF/uG4WNLfhE/u+shOXdsI5bjuZYayUOjVl0OIaTXCz2kjEQsgGsA9mjT2D80KNCA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vt3d2qld503h9ma0a6mktylsajrefxqvynw3jg","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","testgnoblem",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AsxEr9rB1sL3CYhOo/u4X/rVkLlhmMvwdK3wfzBeJXq+"},"signature":"SN+RcOpBAmV6nFp8s4MZDOEa3PoNrCk/WyiVT9UxQdBEKgvQGEYA2ntr876VJxLQD848A07CbtI+WQhzZxEyvg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vt3d2qld503h9ma0a6mktylsajrefxqvynw3jg","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["testgnoblem"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AsxEr9rB1sL3CYhOo/u4X/rVkLlhmMvwdK3wfzBeJXq+"},"signature":"s1ar6v0qhQO0PPYPw2exWpGRbe58/3Q/ybbOF96fyr4UVLRf5MATWuD5GmEIvBUg95P0lbYuVf2EV+PYZFjJXQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g12p5m8camffwl34djt9wdsls4gq3vextj2an6rz","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"3K45QAz4nGc5/bUIOVrZSXdLE41BCJUC8umAN2Ui8qtqFWJ0Ym+J5RBjJhkkzend+lqKbSfzREuF/u+InHag7w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12p5m8camffwl34djt9wdsls4gq3vextj2an6rz","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","gnobull",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiNCYyEvN1NhoZ2Gz5Xtax3/SAG6SqDQ7CO8rp4StAs3"},"signature":"FPEqzyfozxVMO12npfBn7XwdYXB9PeRkTLDzK3p/YPMI/rNtI66mgqOIdx+WMTa+oDmWqIdtOHuGyTTcx8Q5vQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12p5m8camffwl34djt9wdsls4gq3vextj2an6rz","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["gnobull"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiNCYyEvN1NhoZ2Gz5Xtax3/SAG6SqDQ7CO8rp4StAs3"},"signature":"7CSLTpSkSbxGMUZJm0aii0fohQls6qoPTBzvJW8Je0F7ys74XZ4wFtGqIjVoTh6kvVRBBMEaXNqiHk3iu8puCw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g16k4sc4etvlfkfg9lz9m459hu4tddujy4ar9ljq","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"XcU2exY7+ewTbDFrNNTy3HQiosw9xpdjVQkVI84mIgdHR7xGF8wLoY7E4yFUUSMrG4U24XvNNvExby/d4nvpIw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1l6d04rwxzr5dmha7h44tmx4mdct5q8swj3eyr3","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Q9dm12l/kaEvKhMVIT63WdD2x1aptGDPIzq2Xki07EA6LH1qLId8WuSEVmp0S3ohFebBQnTvODosAONGw3NI9A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g10hsucta0rsvw8258ytnua9m5sv5uw0evm7fug7","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"D7Q/QKW0IoBIxZL40yfmaIcSUjSX2JzGpXy6V/t0Nx1BYfKlyL7k+PiujmsCwoPsCc8Mo56ja4O8JPCoL3dLFg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10hsucta0rsvw8258ytnua9m5sv5uw0evm7fug7","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","balabum",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5bxD+yqcjSQwQHBRL1Gwk9OMQxyp9HX8Nw1XFbBpiM5"},"signature":"nxo1rOkfWiNIMNSE1MvkaN/gzMGr6yV+KndnMfq/vmt3Saq27KuraeA0ah67RR75YR8IaIneSVjSSjaQGeF0ZQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10hsucta0rsvw8258ytnua9m5sv5uw0evm7fug7","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["balabum"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5bxD+yqcjSQwQHBRL1Gwk9OMQxyp9HX8Nw1XFbBpiM5"},"signature":"bq4+uc8Y7X421BpngNMlibah5keixZqzR5akPLiJZcoFlXzDsvOlRmo/8eeLAIHV/tX9pQDTK7MZ6lFBkAwIiQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10hsucta0rsvw8258ytnua9m5sv5uw0evm7fug7","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1293","1","1","g10hsucta0rsvw8258ytnua9m5sv5uw0evm7fug7"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5bxD+yqcjSQwQHBRL1Gwk9OMQxyp9HX8Nw1XFbBpiM5"},"signature":"+GsdB6kdtEzM4LkY5L+My1VgJsqgq281GKOirtakHSpTB59/kyX0Z8vak0a13cAs7Gbws+vQBOCCdS6lMdRMBg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g10z262mg69wa9x5dlv27rz8mqrdu2z03zs86r3a","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"4RIdRL9AMbrmgelvLGkUImSsSV3SfD/A6O7t4gucgccUgz1/W41kb46nlVzkZ9y5DJMHadFnYQnoXZCcmiSX0w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10z262mg69wa9x5dlv27rz8mqrdu2z03zs86r3a","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","balabum",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Al8mz04siPoFRmDTZK/I4eVlU65aGQL2YLVGo6uAr9GT"},"signature":"bbM/w0mDDLEr9dBqphlUriNQPHMD7lfESJiAnqwpV1dd/yqmq/Gsdbuwqo5glOprsyPmpzcP6SntDipUj9Idwg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g10gemvkez2ep4gga2jycccmzpkn04lc7xp3luny","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"D9jc7hZfSimF48PhYW7MCIqqi2H0Xu1Kazhl0nbo0jUWHkUaoURNODGaqp8DGIOwaBvu8+NIAlvaYPagHWVNug=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10gemvkez2ep4gga2jycccmzpkn04lc7xp3luny","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","khovkl123",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7nHglzdWTYzzcqPC9Z6S2OWmjhfAb9RsOXrr7gOX5Ua"},"signature":"FLmcSv6nm4U1bshvSf9JEdoxC4UdYffG/ZkxFXhepSYxtUKMeYaXk3rzbMrsKGMtOJ94IIu4qY4jYzUF+On2uQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10gemvkez2ep4gga2jycccmzpkn04lc7xp3luny","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["khovkl123"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7nHglzdWTYzzcqPC9Z6S2OWmjhfAb9RsOXrr7gOX5Ua"},"signature":"GXxzKiA9FMKhbk2Z6mgvxlAnYdEhYMxEHHAqE+VHdNwg4JBv8BJ4KbaoTxpVgvsm+D3pVUIMQC5QEYdNp+fYhw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10gemvkez2ep4gga2jycccmzpkn04lc7xp3luny","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1294","khovkl123"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7nHglzdWTYzzcqPC9Z6S2OWmjhfAb9RsOXrr7gOX5Ua"},"signature":"EilUmXsccmugnoCKYgUcHHB4CCPJS52KL32qPhhR6+piYK3/Q+SY9go7N+UYM+btwtFlMuTxZfacp0YTm3wa4Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g10gemvkez2ep4gga2jycccmzpkn04lc7xp3luny","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1294","1","1","g10gemvkez2ep4gga2jycccmzpkn04lc7xp3luny"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7nHglzdWTYzzcqPC9Z6S2OWmjhfAb9RsOXrr7gOX5Ua"},"signature":"tPED0xwnNhuPSq3w/UFWaZ/ZEjjCp0I2Qfe+6VRFxvpMggxKvYa/QFhMOT/hI9yZ60ydvCRAzrBKWnv4OxXChQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1ma4pek5wkke947u2kqjh820rst2wsgp6hlrllw","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"MDdEy6TXIFtdY3P84WwYfDImatkJJD2jiQ/24IvqilkmfMCaLKJMcyPuBqykLfQjec7JoKG940+nRHZHbGV/iA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ma4pek5wkke947u2kqjh820rst2wsgp6hlrllw","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","balabum",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0et0gWxXa7uSi5PMpOWbR2xiPuyacZIifjfKUYD5Ux8"},"signature":"cZRX7ZUHwHkcT2anbA7l2M6jYNJC9kPMSGmesjnkX1Q2q4izr5AvughzuqBOumU3pk0fJf7FTeIFd/Srsf8G1g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1uykqz65rs6dx88geymta8au0p94hyvuzxmj26u","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"vj5/Kv2+I+HwBZxxRses3UXoCaPFq43xuqPl0ls8jUk+OqJPkAYjuEOhuU2lwSIcdcetbzIeIsji0jd/W7F3ig=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1uykqz65rs6dx88geymta8au0p94hyvuzxmj26u","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","xitex1234",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Am6F8LM/QjIMOxK2RFTWOtv6UL8D4z+tHwFAB3oYve7/"},"signature":"c+CFynpm4PZ9D1Vk7EN5K6GN8DoPTUdxkrmcyKrFPwg4eseqrNgeYtKNqPRoVqWMxpNRmeJFZ/N/l1dw9bhE3Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1uykqz65rs6dx88geymta8au0p94hyvuzxmj26u","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["xitex1234"]}],"fee":{"gas_wanted":"10000000","gas_fee":"1000000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Am6F8LM/QjIMOxK2RFTWOtv6UL8D4z+tHwFAB3oYve7/"},"signature":"C8ekXBczU9bvgWTnbknouY+zDchP78qHbPf4vvcYbaRNY4UZfSixYMJRlE8JXWqzFjTX9Dg3RnWDxNn2x4MMrw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1uykqz65rs6dx88geymta8au0p94hyvuzxmj26u","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["0","xitex1234","./gno/examples/gno.land/r/demo/boards/README.md"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Am6F8LM/QjIMOxK2RFTWOtv6UL8D4z+tHwFAB3oYve7/"},"signature":"4uRWnoVmKW1yG+UcYHRf9eTGoQQR4m/pB+BQ/giIXepYW19ZYr8yLsuRUgu95AFHVThkO5tQ7cpnIGEspE4rgg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1uykqz65rs6dx88geymta8au0p94hyvuzxmj26u","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["0","1","1","g1uykqz65rs6dx88geymta8au0p94hyvuzxmj26u"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Am6F8LM/QjIMOxK2RFTWOtv6UL8D4z+tHwFAB3oYve7/"},"signature":"E1KrzQFiuBWUPmg4Eg/Hgrp9ILkrc7hPti4I9ZzKOJAjNoW/hnwIq57M17CZX3FsKHrm8kuDfaf+LnSxfHiq9g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g185qhe42nfgxzww8aa6ec4jp9e60r75k8q5503x","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"C1qmGLZsIB0e79uIp1sbqCocE2WNmYczo/CNdYzM/9NNmDVm4lDtsJSIsu7teLu1TPNItpGAh7iP3fjohlPGhw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g185qhe42nfgxzww8aa6ec4jp9e60r75k8q5503x","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","deohieuclgi",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuZH9MpLj1zjL0XSRBBTyjej/W6zQOP7Uww0z6+ECZQE"},"signature":"sZKE0jnXSgPq/B/xLmHPN7Z122n1vOa4hACs8yfDNTktx5qU7+zKUcYLSuknOtDo14LN1caHSVabq5NErWtqjw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1l3t037ste025etff2pt4y2k09jcejfxvwelrjr","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"xd0fiAJxAQ9tYyqgxtsDmRfZgrAEwyJ8N3KMFdgefchrUIDoIAJUoKauk0bp1tve2Qb7N4ZbJKx6mFGByghCAQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g19y58rk5aknnm73u7dsjtk0crq9hqdx5340da59","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"PHPlC+VMvl5CDBbRM9pGZPQLH/L51jniDjteG1eIPwUNRBIcqa3HiWxESjBJ6twL6tI+zOw/hMk1XfaTu1MthQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19y58rk5aknnm73u7dsjtk0crq9hqdx5340da59","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","deohieuclgi",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqosY0+Raia3ZHn5Ec/TXbaDU7Hyc3PCXgjOpeuNtNwA"},"signature":"6TXidQeXiR1IGfTmaz71YuzJZlfUQ4lAVreFv9qa3QwUpWQ77wXzn8rlhSt7BCX4TVdE3ufZHbaYT7/qPgU64w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19y58rk5aknnm73u7dsjtk0crq9hqdx5340da59","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["deohieuclgi"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqosY0+Raia3ZHn5Ec/TXbaDU7Hyc3PCXgjOpeuNtNwA"},"signature":"74sDCTbmo/ec9rHq6VJUu+GtkFbFhTAW/cpokQfHXgUpihNffzenmnVneqflgQB8UgII3EEVNiJtoe4Jlfr1gg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19y58rk5aknnm73u7dsjtk0crq9hqdx5340da59","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1295","deohieuclgi","./gno/examples/gno.land/r/demo/boards/README.md"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqosY0+Raia3ZHn5Ec/TXbaDU7Hyc3PCXgjOpeuNtNwA"},"signature":"3k+5b+AyERyKxXhg8VsJKhwlogC6sWm85tS/vSnHlEwrDYtO3/IEWq2H0eeK7Iy1aFSQwBrhjUjDSLd1LoQ4NQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19y58rk5aknnm73u7dsjtk0crq9hqdx5340da59","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1295","1","1","g19y58rk5aknnm73u7dsjtk0crq9hqdx5340da59"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqosY0+Raia3ZHn5Ec/TXbaDU7Hyc3PCXgjOpeuNtNwA"},"signature":"n1WvcXEQ3iYgaF3aWwdJEUvrz4XPigpDK5F7gDixPzkt1qnrO5BJkqJaYW5IpShvWTFX7MYMRNEfe2pn9y6aAg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1035p5f6ez87kg9fupnmehm7xyldy9wrgpr2zj2","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"dLFU5VzpBQ0kPEwA7FS1XzlO3cbjfyowSTGK9d0L/mI7q0q77nmfajKBGhTh6tssiGGIJFOUYzrvrHM4Nm5RFA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1035p5f6ez87kg9fupnmehm7xyldy9wrgpr2zj2","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","finalversion",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7UCycmot9jeImSycO/Qv1D1MHXeUtjy9D2oMw3/ZbyA"},"signature":"QIHlzCGabPLXchUQc/5vEND2wUAQPU2McA2EuPej6P0PeSYT95tKWgE41BE/21BBv/9qu2EMn4xbqqWw+o5Pzw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1035p5f6ez87kg9fupnmehm7xyldy9wrgpr2zj2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["finalversion"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7UCycmot9jeImSycO/Qv1D1MHXeUtjy9D2oMw3/ZbyA"},"signature":"Qz+Td2tSxHgTm60la+s9iNxLcjl/ZJhegUXZuH5kCKxP3Y8ImP8jGaryTwsHIaCfK1M9TW71x/bX9XdJckYhYg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1035p5f6ez87kg9fupnmehm7xyldy9wrgpr2zj2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1296","finalversion","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7UCycmot9jeImSycO/Qv1D1MHXeUtjy9D2oMw3/ZbyA"},"signature":"YV+zjSIuqb37MpABnJbP96IKZK7iWojtvz/I6Z2GMcUKXzBPqsC2pvEQfie64sbq7MsMFNI1HdV42/KxMp08eA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1035p5f6ez87kg9fupnmehm7xyldy9wrgpr2zj2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1296","1","1","g1035p5f6ez87kg9fupnmehm7xyldy9wrgpr2zj2"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7UCycmot9jeImSycO/Qv1D1MHXeUtjy9D2oMw3/ZbyA"},"signature":"lzniJHbwqKibn2p6x5Cnq5GdiwcsHINYBb7/Vg+uXBE1wM/iuF0DSWnMv92AWa/twbullcfRId/nXBiThcTkuA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1qmaexkys30au8necca30d92u2yxslcc7m04v6q","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"3chOXMneIgKOCeNHOIksdm9DSp6PdQzY01cHgYLn5UNkFI38NL0SwXGERDhsi9LAv/XXWwu8MDkDPlvUTe3Xcw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qmaexkys30au8necca30d92u2yxslcc7m04v6q","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","tunnel30au8nec",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A58qtS1rIAOzKjOhPt0MxcmesrDol+XhUYx1ozVaTn4Q"},"signature":"JdbUGj1fDC32vChXunQ8vrjPmVTVWu2oGmaK3xQgGVgx7zCUdfY+EwiscL0QiEYO2x1g+9Er1A7R2APwHj4DVg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qmaexkys30au8necca30d92u2yxslcc7m04v6q","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["tunnel30au8nec"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A58qtS1rIAOzKjOhPt0MxcmesrDol+XhUYx1ozVaTn4Q"},"signature":"0FESufopt58Zoo8mwpceDLdoxq15syWsB5gbgdbZro5QBFU+b13W/CXzoNQRwTBM1ZWdhlq2TptNf5EiW9qXFw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qmaexkys30au8necca30d92u2yxslcc7m04v6q","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1297","tunnel30au8nec","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A58qtS1rIAOzKjOhPt0MxcmesrDol+XhUYx1ozVaTn4Q"},"signature":"+cMec9+7MDlkreuJbcwV5Bt1w3Hgw0PgScPdkb1435wSeK+KTWgsOKrfjYZcNsAi1e5hobWYpeBBsV2+nQjwmg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qmaexkys30au8necca30d92u2yxslcc7m04v6q","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1297","1","1","g1qmaexkys30au8necca30d92u2yxslcc7m04v6q"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A58qtS1rIAOzKjOhPt0MxcmesrDol+XhUYx1ozVaTn4Q"},"signature":"Jy66XVdTgIO1QZoVu1AhPknIpcQEdg46HMRwet6roQxBOU1plbN912aDx8+pwjjS15HVBLirX62O+i4ZsV3yXQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g185gek0kv7t3ejtq4twzmd0tlwcva8z8vew2wlx","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Of7SKPl4kOtvKmpr9BTsXY528TCj0pldpeb7VoYezKkQEB4NYhV3zxBkMlXH7KiMPuq3q1y/+c9x+MhVcSJdRg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g185gek0kv7t3ejtq4twzmd0tlwcva8z8vew2wlx","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","lawntq4twzmd",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4lBI7a9lEwctULoISOUBKSROulzg+3gOqgvMlxL+8u+"},"signature":"OuEWrU5YPgdtkU/3XN1s4ViDibi3oyS1oOprhuvns9xnCigo9bbixFVlyTPcZXeotnw0SFFx2pIKxl+FfQt3Jw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g185gek0kv7t3ejtq4twzmd0tlwcva8z8vew2wlx","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["lawntq4twzmd"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4lBI7a9lEwctULoISOUBKSROulzg+3gOqgvMlxL+8u+"},"signature":"7EFZ3WGsvEBLLwMfZrZumwAMwRmT4ZVRWWVSZZKrmTppyxTbQ1sgqdkQLDH4M1B8dJIPsEIGoIzdFeIVY6iHvw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g185gek0kv7t3ejtq4twzmd0tlwcva8z8vew2wlx","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1298","lawntq4twzmd","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4lBI7a9lEwctULoISOUBKSROulzg+3gOqgvMlxL+8u+"},"signature":"nf3b7mozHfhzlB/YWD842u1ExBFvrFj7hGuQTKW0gscCr0jpDsI2L186Eb42/tunaVElL418rolC1NzTx47/1w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g185gek0kv7t3ejtq4twzmd0tlwcva8z8vew2wlx","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1298","1","1","g185gek0kv7t3ejtq4twzmd0tlwcva8z8vew2wlx"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4lBI7a9lEwctULoISOUBKSROulzg+3gOqgvMlxL+8u+"},"signature":"FelcHe3f3pI5tiu4BCaDvgcfz7tx4vl5vo67xARFFX9N0Ggp0MWFV0QvKWrxQ7tOlnlHLbrWn4iV6MY86sSamQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1x2zj6yqff8ssrqgajtlg2crg886w26jdqstska","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"yNqwP9SHfAasnyccphcDj5Xp0ERMEuOhhPAGhnVPQgUoXMTzDNubq1i2LN+J28ZNATQJfhkIJAgykk59rYK6MQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1x2zj6yqff8ssrqgajtlg2crg886w26jdqstska","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","siblingqgajtlg2",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3Gdl+r5C0QzIMfl7AgC70yPC3Waetbx6W8A/pqXOp6O"},"signature":"2r+Qc3YA+NC4ypLEwad47ZeCRkf3QwmuwihE1zlrN7pBLWRU3Y25X3i35SzAWYlYA8aHWrTDWZhTjNsIYXII2A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1x2zj6yqff8ssrqgajtlg2crg886w26jdqstska","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["siblingqgajtlg2"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3Gdl+r5C0QzIMfl7AgC70yPC3Waetbx6W8A/pqXOp6O"},"signature":"Utjn2uqm4h5pezAWIbrKTgmfQNIwBRIo1upqZbIEehI+Swpgh/Ui/ZgE4jJuyP+B0Pzd8Iy/oT+AZfOsYoRF7A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1x2zj6yqff8ssrqgajtlg2crg886w26jdqstska","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1299","siblingqgajtlg2","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3Gdl+r5C0QzIMfl7AgC70yPC3Waetbx6W8A/pqXOp6O"},"signature":"MVI+1DdU2Y9rqjSoidjJav2uo8j2tEqh0b8H07uv2EQbOvHPTignwihht6NRGzlUIeeEfbxQPptjwmRwwf+56w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1x2zj6yqff8ssrqgajtlg2crg886w26jdqstska","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1299","1","1","g1x2zj6yqff8ssrqgajtlg2crg886w26jdqstska"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3Gdl+r5C0QzIMfl7AgC70yPC3Waetbx6W8A/pqXOp6O"},"signature":"HKiNXOxFyA+SGFs6HBgIExwCVx1ZQPzD7a6hoTSTSJIPTFdxLMzzYsvadPNB9P4IstTo5ziyrMheTMypsJj3qg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1g4jdp0s0uf8h9guxm4j9n3n8pl8gcefsk0lyyx","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"2dPmoNNC5ptqIVcWssObrNT7DBDZyvriqnkHPi/DwntyhxOS/FSQEmK3glkqZHlo0h72qapiYJoZhKrB3zvLcQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1g4jdp0s0uf8h9guxm4j9n3n8pl8gcefsk0lyyx","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","dishguxm4j9n",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av4Qq+WnA6SpfiLRMzahcyKVeVKKubhH4+8SaCVrnV89"},"signature":"WALosurp3yTuMii7dxppjXS8koOoPrKrTZ0eKYnjIbUXoRsmjUScjqYCBXSJmaa4SvvGD90cDlIrX7oO9OAq1Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1g4jdp0s0uf8h9guxm4j9n3n8pl8gcefsk0lyyx","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["dishguxm4j9n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av4Qq+WnA6SpfiLRMzahcyKVeVKKubhH4+8SaCVrnV89"},"signature":"1mCl2TXmCnrwrtrUId/ODVwgWtEyn8B0JoPDcCPyr1AWuRSwKeEliuJc1iQx6etC3JECHbAG2M6N4uRZ2/LuTg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1g4jdp0s0uf8h9guxm4j9n3n8pl8gcefsk0lyyx","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1300","dishguxm4j9n","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av4Qq+WnA6SpfiLRMzahcyKVeVKKubhH4+8SaCVrnV89"},"signature":"T0CVjWXX11Ef65Q2mkhNEKAI8AV4iG7XEXR+dcAMW9UGUgs0/lOMvhI5Ex5WxlqDUGuPlmsrcm5x3O5s7RiJ4A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1g4jdp0s0uf8h9guxm4j9n3n8pl8gcefsk0lyyx","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1300","1","1","g1g4jdp0s0uf8h9guxm4j9n3n8pl8gcefsk0lyyx"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av4Qq+WnA6SpfiLRMzahcyKVeVKKubhH4+8SaCVrnV89"},"signature":"+fZsDwU9W+0p1PEJAvsfFpQgeOA9j6ZFEiL4YMDk9W1mxzUaojCkhdAB8yVxlDwwbTlsIzWuPj+nBjA2dYiplg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g12mpkd6qrgrlfm04l7zvd655e5gy5zg52j9xwth","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"fJWbYR7kHXbC0uFvLDnPR7YR0UICaWK982Mtxcb0otEvuTK/AXEM7L7GF2UKQw0i/mItR5d8jUzbVlPFphvL8w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12mpkd6qrgrlfm04l7zvd655e5gy5zg52j9xwth","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","goat04l7zvd6",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/v3vpCEisVzm2eR/I2qSrlmekGKVQZTCfaPXhizIAf5"},"signature":"hbyDSevXDIbn/fYjk7P395PezhrdCsxKIDJD3Ee57bwuSSGB+1oyFsEL9VO2ONoqzZr33HCfcy42hpretMougQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12mpkd6qrgrlfm04l7zvd655e5gy5zg52j9xwth","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["goat04l7zvd6"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/v3vpCEisVzm2eR/I2qSrlmekGKVQZTCfaPXhizIAf5"},"signature":"tTCUGpsIXvRozqK13VRidK2TPKFStlH/XTL+NA5zpLdtvAIBILe3MgI0cI9ckQ/ktUZKnhWe9knfXjNyI3iGtA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12mpkd6qrgrlfm04l7zvd655e5gy5zg52j9xwth","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1301","goat04l7zvd6","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/v3vpCEisVzm2eR/I2qSrlmekGKVQZTCfaPXhizIAf5"},"signature":"dX5ltBekpjIt73dpaRUIgTOjtsGoJqr1zpIU+TYeVr84qe+Rv9xLy3Dh/0QpXIBYvMv+3XvVsXSvAZqJceWmwA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12mpkd6qrgrlfm04l7zvd655e5gy5zg52j9xwth","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1301","1","1","g12mpkd6qrgrlfm04l7zvd655e5gy5zg52j9xwth"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/v3vpCEisVzm2eR/I2qSrlmekGKVQZTCfaPXhizIAf5"},"signature":"LJ/zhIrdHfgltTjnhtIUH5sHiQtpDV0v19A9JywUPZclmgxkdZGuszPgWqfXofAFlftigW7xLY2N7zJZ+ly9sA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1jh29rlwdzf3t3zqvrfl9jnct5s42ts46s5plsr","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"oNxobhukhRfgGAkAGJHuSwvJ1yo0ySxkdJ/x2sMWLhJs+CI3476gJiX6DDSLNrtVeluVVRcBFr2XWzkoX3fKEQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jh29rlwdzf3t3zqvrfl9jnct5s42ts46s5plsr","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","stairszqvrfl9j",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqdSXEOEZ9y7uEC2oDtpbKhE59Sl7CdF+xFxhANxwkrK"},"signature":"yPp88EJHpUrtBzhljKMqn9w6+lbdUHETYSveOVTacI8S+WyEQHfAxhx2bJYXQPZUR4PZIdvXbNyT4DZC5U0vaQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jh29rlwdzf3t3zqvrfl9jnct5s42ts46s5plsr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["stairszqvrfl9j"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqdSXEOEZ9y7uEC2oDtpbKhE59Sl7CdF+xFxhANxwkrK"},"signature":"NvERcc5lOglgyR74D6HnEkKfZPHwwOkQji0LCwTM1oEHHY/TLQI8MFGry/4cFDhAlh/J8MBYdtwqrtapHTi0TA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jh29rlwdzf3t3zqvrfl9jnct5s42ts46s5plsr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1302","stairszqvrfl9j","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqdSXEOEZ9y7uEC2oDtpbKhE59Sl7CdF+xFxhANxwkrK"},"signature":"Q3CBCt9BA+0/05Gq1oPL44DGj9x8fQLbOsMS/IlF5vtcDKVRbNNWsINRzgU8+gxy7qeKFfFRUfnUgKa/VSZkQQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1jh29rlwdzf3t3zqvrfl9jnct5s42ts46s5plsr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1302","1","1","g1jh29rlwdzf3t3zqvrfl9jnct5s42ts46s5plsr"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqdSXEOEZ9y7uEC2oDtpbKhE59Sl7CdF+xFxhANxwkrK"},"signature":"yRhSQpoIsxPUsHAVL/ub13H/Oksh+FT6iVWZu3RKg0F1PYNUbthB/FuSCsRumuTsBcqM5+4/I1O0E+r2xTuOVA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1fvmdxasvds8demk8njk2epduze550rys2cv054","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"VgsWBEyghuhlTDO6bZE1SJbGLIG/XYtnKjM05sPaWMtB7y+XwDwdGsNdOTwkPzyR2YZ0WPri+lfxo7khu61omg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fvmdxasvds8demk8njk2epduze550rys2cv054","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","shiftmk8njk2e",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuCYcFeG2Y85MBByUQMmvJ/1xWcenSyaZSz1dCN4TAXJ"},"signature":"iIxORh0dTy6DvOXZDOghAUwGqmBRyeLqVTs0lfEc8XRhLHpnWLzNkwig4keKe0huaZIomTUVPqHnRFfx5lLs2g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fvmdxasvds8demk8njk2epduze550rys2cv054","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["shiftmk8njk2e"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuCYcFeG2Y85MBByUQMmvJ/1xWcenSyaZSz1dCN4TAXJ"},"signature":"dwAQZvjp7Rwsm51rOg7MKboD+gQ7F1qgbZI2dcHne7cQUy97LswjiZLOZ1tVtiCLG/CV9lZirH95FDz8zfahUw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fvmdxasvds8demk8njk2epduze550rys2cv054","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1303","shiftmk8njk2e","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuCYcFeG2Y85MBByUQMmvJ/1xWcenSyaZSz1dCN4TAXJ"},"signature":"FbcuTwGpGPl9pbKSUyo1kt+f8qyw+AS073JzqsbC49txbmsEk7BPpbzMSn+BH21DVFdMe3NqP59gmaCCn4RmZg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1fvmdxasvds8demk8njk2epduze550rys2cv054","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1303","1","1","g1fvmdxasvds8demk8njk2epduze550rys2cv054"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuCYcFeG2Y85MBByUQMmvJ/1xWcenSyaZSz1dCN4TAXJ"},"signature":"Ic7ZjebaBoVDZ/9e2QkGf37tXiDi6jpOwCY2GlGcav0Eejo598h4R+GihigOw5QGLrpnWmCdW3FR0NW2cXOL4A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g15mxnsrd72mxpemqm5w3jusv635vdq6swu5856f","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"NNVA+EFdbLMllbQnVfv3J+fNtOWIys9oXXH+BQvGtGcFp4h/tWcfYuptKdUJze9pmvVEqmaUU0rSwMtdaeC5gA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15mxnsrd72mxpemqm5w3jusv635vdq6swu5856f","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","creditmqm5w3ju",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A67zSXnvvuF4UGGv/PZ3r1G6llnxk7VPtlEBjovGkr5d"},"signature":"/2LY88tR5564Dh2HvN1rV6SjYxU/PARXXpM45XtHuKcrihRwmFYf7c4KMKmo0dD9Br3AeYqhBDpRpjmRTd3pQw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15mxnsrd72mxpemqm5w3jusv635vdq6swu5856f","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["creditmqm5w3ju"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A67zSXnvvuF4UGGv/PZ3r1G6llnxk7VPtlEBjovGkr5d"},"signature":"6fBxG6/FQA1AsakeM0TvaK8QuOZTFRm3Ch9e+3Pjuc9gVMPV3OUhFAjvku7/GsvdRbH2Og94UjuUoh4Mg2ca/g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15mxnsrd72mxpemqm5w3jusv635vdq6swu5856f","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1304","creditmqm5w3ju","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A67zSXnvvuF4UGGv/PZ3r1G6llnxk7VPtlEBjovGkr5d"},"signature":"/Ann+03OJ68c6OZVUe7WGB8di78gefuL17y6aOThMAFwCA0TuEg33n10Da7TJL6G/Jr0+hFLImbNNpPJFUagTA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15mxnsrd72mxpemqm5w3jusv635vdq6swu5856f","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1304","1","1","g15mxnsrd72mxpemqm5w3jusv635vdq6swu5856f"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A67zSXnvvuF4UGGv/PZ3r1G6llnxk7VPtlEBjovGkr5d"},"signature":"lFSzd/VOrUNZHeyFU9u1w8/+N+QvyMH0yB5YewryGCU9ovj2SoY7/9y+GuT7ruW23uuiSHESjgRnOE+cQpRLdg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1rudcffnkhahkf5wdujg5sm827sfs3h7jut25ap","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"QfxbaMViNsjM7WdFaRMiyO2cUlWsU4Jj/aAxavy2Bd0900AOEQ15aMjBaEMBIwK46UmaAPGyxWxBn2V0hqFFfA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1rudcffnkhahkf5wdujg5sm827sfs3h7jut25ap","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","leopard5wdujg5s",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArIQSWzHTstJ+xKYhK6umXnxINM3XKOj5rsUOqHv+W/T"},"signature":"DMbZ400eh14klhZqJ7ytA6AT83q0Hud7wdioi1GecZY0XFZENaHg4uFHgU6YycFhARPqnrXS6I1lQKfK8DDs+g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1rudcffnkhahkf5wdujg5sm827sfs3h7jut25ap","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["leopard5wdujg5s"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArIQSWzHTstJ+xKYhK6umXnxINM3XKOj5rsUOqHv+W/T"},"signature":"GpG2GurpnG9wivQzM7UZFlvf3bE385zfGmPndcreGmJSNQt/fvSD+2t0I7IsNPm8lLxBkx3qs1V0rgC1Z19OvA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1rudcffnkhahkf5wdujg5sm827sfs3h7jut25ap","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1305","leopard5wdujg5s","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArIQSWzHTstJ+xKYhK6umXnxINM3XKOj5rsUOqHv+W/T"},"signature":"wLnWgp1gT1XrNvILvb3SsB22oQCyuhYPjWk+JPNCZlIE4RhgZPe7RTepG0isCRusmqekr+hcFX42cf6rM0gtUQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1rudcffnkhahkf5wdujg5sm827sfs3h7jut25ap","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1305","1","1","g1rudcffnkhahkf5wdujg5sm827sfs3h7jut25ap"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArIQSWzHTstJ+xKYhK6umXnxINM3XKOj5rsUOqHv+W/T"},"signature":"wZ3oueSKk+8Q4zGQgXIaQK2HHwelSCpDYiLGHIavuF8pe5tj+bwW3tk1QpX4DzxcWL35HNc3rUACef9h1mifgQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1r0ad96at3u0gq3kew827sxja3xar5gcykh5vm2","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"dRSk/YYjUwexaiaVGeCTW9LJm9wrc0EaEaJ51s+ncSdmpNTd08/tScJ3lCjh3cqDXgvUl0m5eZZbejm+mw1H6A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1r0ad96at3u0gq3kew827sxja3xar5gcykh5vm2","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","practice3kew827s",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ai27TIFrgQ6VRoOtsO0HG+rfsJWx+FgSh6x57v/1N/+0"},"signature":"+Q16x4H7wxEO2GFICzatyz/2XA+MG89tYB85zjTdiN9ArCnrASnMOaEqjzj06CZyTXMZShvqjPQNPhWllRfXSg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1r0ad96at3u0gq3kew827sxja3xar5gcykh5vm2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["practice3kew827s"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ai27TIFrgQ6VRoOtsO0HG+rfsJWx+FgSh6x57v/1N/+0"},"signature":"uNk1KlpCP6JyB9z9vK3F6P1u1AetXObUPJaJtQCoa01tDypDSCfeSNpffYwE9nv3z9VVoTXx10cytkK8GpTX/Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1r0ad96at3u0gq3kew827sxja3xar5gcykh5vm2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1306","practice3kew827s","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ai27TIFrgQ6VRoOtsO0HG+rfsJWx+FgSh6x57v/1N/+0"},"signature":"QHeHv5CmQyDC7owTixbzyQAKLQ5TqG7HEZaUoTmPdpIbiyrFMIErGsEIfsi77cq+7FwWtkUcHQem3iE34JTWfA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1r0ad96at3u0gq3kew827sxja3xar5gcykh5vm2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1306","1","1","g1r0ad96at3u0gq3kew827sxja3xar5gcykh5vm2"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ai27TIFrgQ6VRoOtsO0HG+rfsJWx+FgSh6x57v/1N/+0"},"signature":"15QdAOJVH82Dqo4X6P1DsP7WOFzQ1NADMOpC6Ar4xwY7V0dGT0xGVgKibM5GPRV2mndPmPjasXAdB6yHSafSkw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1y6yjrvhj2p3ql6e4mdaqutptmnc93wn2c0lr4z","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"V5Ao75br6w1o3dabzgB80lfWI9s9CyI8f7qT4vafDpBCCSCyVcoxRzgeqlB4q89qaLEt1gTu7rTfRzEvEEotTg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1y6yjrvhj2p3ql6e4mdaqutptmnc93wn2c0lr4z","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","sun6e4mdaqu",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkulOrv0XqeoI1kcMYfT9OI9jVTcqzvd8unYUme1wOaJ"},"signature":"UESIDi6qIZkCKIiwMMacpzc8wVPQKFKOWy/w0KlvcYZkaD2Fhjbn9usv44HcIGnYMhQUznbqUBT2hs8BH/JwwQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1y6yjrvhj2p3ql6e4mdaqutptmnc93wn2c0lr4z","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["sun6e4mdaqu"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkulOrv0XqeoI1kcMYfT9OI9jVTcqzvd8unYUme1wOaJ"},"signature":"WUgnyexKWAPOuEoSxu3452RZwwhTEp9uqOp362bKjZJsD1Z8II8YRunC7jkQ5H3xs6+l+2Xblp+maJzRT+gnfg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1y6yjrvhj2p3ql6e4mdaqutptmnc93wn2c0lr4z","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1307","sun6e4mdaqu","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkulOrv0XqeoI1kcMYfT9OI9jVTcqzvd8unYUme1wOaJ"},"signature":"+Sj7y7HP1+0Iv3UvKeOtp5Pgz0+h/317CrzhTsV+M69yZL1dzmYGkh4zEY+3XSWXFHD9imUNQ2BKLh2wyU6xMg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1y6yjrvhj2p3ql6e4mdaqutptmnc93wn2c0lr4z","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1307","1","1","g1y6yjrvhj2p3ql6e4mdaqutptmnc93wn2c0lr4z"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkulOrv0XqeoI1kcMYfT9OI9jVTcqzvd8unYUme1wOaJ"},"signature":"UzesT2IgJcb8M5A/t/M26oMIcB4uo2az+bM47yXdXu0l8TeIHufRb90KrqTOQ7zE7/Upm3vG4O0qJdpcFtxygQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g153h07rpqhh0ypa642yrx5uhap83fsp3ktsewck","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"j+kDqmDY1PtCur+30BsLaDeQa2MdrXBaNuCpRQ6gQ08g9Go6KYDUj+ow3e05Ms+3gIT5ZpPu3QzsKv8T55wNMg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g153h07rpqhh0ypa642yrx5uhap83fsp3ktsewck","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","prospera642yrx5",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5PemTSoGI60fbA052tTX/KKbOwKlDrQhpEnHzA6wbIW"},"signature":"cJCQN9PnVnOJs3jLzeasmjXZKv4o+vtNhh++foz3igEz4pObYhBID11dohNIfjTVnZWkTlwKpSlOexlymHuohg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g153h07rpqhh0ypa642yrx5uhap83fsp3ktsewck","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["prospera642yrx5"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5PemTSoGI60fbA052tTX/KKbOwKlDrQhpEnHzA6wbIW"},"signature":"ZHeDeSFipBRrXGUvU5Hx7BesmT1C4Xr1m/uwLPvoUHQ5lEVO2GuvVIvrKy4o12kuQJjY+KPQKVZ5tOmgexC6+w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g153h07rpqhh0ypa642yrx5uhap83fsp3ktsewck","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1308","prospera642yrx5","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5PemTSoGI60fbA052tTX/KKbOwKlDrQhpEnHzA6wbIW"},"signature":"SdXgnxadGHvvJS2rkCcWoiHIRQE9Xa9cX2W7t9cBiVFhyUz2qno8IAzhNpEhYHM4AbwP6cfjW7p2wkHHHsuxow=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g153h07rpqhh0ypa642yrx5uhap83fsp3ktsewck","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1308","1","1","g153h07rpqhh0ypa642yrx5uhap83fsp3ktsewck"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5PemTSoGI60fbA052tTX/KKbOwKlDrQhpEnHzA6wbIW"},"signature":"vXqbP8DNYxUP4kl7n5Bpmr+9GKjDGowz58tWe+K/mRwxn72i6od383bILWBfSbySQnECcQ+wA8kJMt9wfJf3ow=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g156h9preh33zfec67pvqpu4egetcrrrd9wc253y","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"1mqICmzsEvnnfj3N6ZCZnz/fx9wnpoCarVSoxAek+V1i59iyrIisqQqPakccVZ0YtGqWpBPvrMQ0PFQq8xyFsw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g156h9preh33zfec67pvqpu4egetcrrrd9wc253y","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","otherc67pvqpu",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1/xG8C+hVsVW4bBSDbTTRZk7TDT4X6IhWXQS2rXviGA"},"signature":"774yv24cr/O3YyqZBjAyD4i1f6FDShoQ3ygSdmRDDyB6EP7kSA8MuF2yALbmmzCi1pkCSDLPVjVzdNyYBJylOg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g156h9preh33zfec67pvqpu4egetcrrrd9wc253y","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["otherc67pvqpu"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1/xG8C+hVsVW4bBSDbTTRZk7TDT4X6IhWXQS2rXviGA"},"signature":"EM1HnbjfBWLP28bWclFWJ7GBt5Nt0PUz/ji+O59ap7M1SVVI5B1KC+89Je0IG3p946EkdKv0qQdiSR2xfVMqTg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g156h9preh33zfec67pvqpu4egetcrrrd9wc253y","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1309","otherc67pvqpu","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1/xG8C+hVsVW4bBSDbTTRZk7TDT4X6IhWXQS2rXviGA"},"signature":"51nNdRIvSKupMkokvOj0UcklonDpc6ZRjUaoCe19v7UXDX3m9FD7P67+TulUpzDawK5QyJV7Gwu4jxNl7y5ClA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g156h9preh33zfec67pvqpu4egetcrrrd9wc253y","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1309","1","1","g156h9preh33zfec67pvqpu4egetcrrrd9wc253y"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A1/xG8C+hVsVW4bBSDbTTRZk7TDT4X6IhWXQS2rXviGA"},"signature":"4FMrC6qb/V+sxODetCrCOei+8W/eU5/PSk7iYb1MtZwUgzepIJxst6EqQileQEqweyUpM2UXpWvwqgfCxBgq1g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1s8ejppmfljttlwvdstydwna2h2qtzv897wv86x","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"2qhZDblsFQ1NB5tVf3tO6ZigkxVqI97m/wTzfFO6ugVa2DM92CqERnZJJm3iLW4/5nFXItecNm72stv44WVkCA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s8ejppmfljttlwvdstydwna2h2qtzv897wv86x","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","glarewvdstydw",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiDrzRCKUkGc8kLuKkEye0Qx8IwD2J5MGgXdjZaw/To6"},"signature":"fxZX7oPEqgQR9TBcjvgupNvJB7rvp+HKmayowLBDJDZOqxOmYCTn9pbdb1WH5oQ/dCwYKaIG7xAAaKOcA2xWOw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s8ejppmfljttlwvdstydwna2h2qtzv897wv86x","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["glarewvdstydw"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiDrzRCKUkGc8kLuKkEye0Qx8IwD2J5MGgXdjZaw/To6"},"signature":"D3DoO1J9g9wDX29oDVy45qNfIICxSMPpK8q/1Km1AC9U4QXvmBBl/XwLg/sP89gyxx2bN9fDzMIcxM093SZrZQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s8ejppmfljttlwvdstydwna2h2qtzv897wv86x","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1310","glarewvdstydw","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiDrzRCKUkGc8kLuKkEye0Qx8IwD2J5MGgXdjZaw/To6"},"signature":"NFWBsj4ZVO5HnKCqB+CuFH3OLFnxVzjIR1eMQcSgOcVUp5vlUnSi+lPhmuX85MUE9a0dJWTjn4KULXZQtoF4zg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s8ejppmfljttlwvdstydwna2h2qtzv897wv86x","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1310","1","1","g1s8ejppmfljttlwvdstydwna2h2qtzv897wv86x"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiDrzRCKUkGc8kLuKkEye0Qx8IwD2J5MGgXdjZaw/To6"},"signature":"krtGrQsjL32xSoAKwTx52MJs0qGjF3L8DCoz7D9a/SYhpWd/Oq7Kfbnef1qHyZupmn3qb6FaePpYeWy3WxPegw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1nc554yq34mclr8map7pyf55ahjlqffagwrdmha","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"WwjDyzhnysnGgAv1aiFPFAQ9C98mKYLvoC9zQmGJj6goX87iT2y5n4GkTqG5FNLA9YmOjdpzQFUJdLckBiuhIQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nc554yq34mclr8map7pyf55ahjlqffagwrdmha","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","drama8map7pyf",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+VUUfl5rkOhcWKJIHK2JiHTxuKNzxf0GWHxkgFfnoG5"},"signature":"Sms1sAXiY0AvRcV3Y0rY3bwXgxL/YC5Am7OnfRmxKrwC0PI28u19J+Cb4xYHy/oSOXI45/mhY0BCyrJZovbfag=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nc554yq34mclr8map7pyf55ahjlqffagwrdmha","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["drama8map7pyf"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+VUUfl5rkOhcWKJIHK2JiHTxuKNzxf0GWHxkgFfnoG5"},"signature":"4rMAObTKxzW9zoIdkqhQ2KpyF7u6UT88G1g+5/5yHqo8nbwbbO+s6ysSTKhI2FAHTros4sqnk7O1wQc2dMgL6Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nc554yq34mclr8map7pyf55ahjlqffagwrdmha","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1311","drama8map7pyf","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+VUUfl5rkOhcWKJIHK2JiHTxuKNzxf0GWHxkgFfnoG5"},"signature":"Oz+WhMhziE1lKJKEQGpz3WxLOGwvIEUVKFPMQjExf80plcEXf6AW7Fu9WTdopfL+cWD9MYh5Frqcv6tpUVV7Ag=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1nc554yq34mclr8map7pyf55ahjlqffagwrdmha","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1311","1","1","g1nc554yq34mclr8map7pyf55ahjlqffagwrdmha"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+VUUfl5rkOhcWKJIHK2JiHTxuKNzxf0GWHxkgFfnoG5"},"signature":"vA+8puSHzoKjwzLXM1b9OvaDF71tHsKHFZia6Xfsm5hN0A7f0OUCpquKF/3PI4C6prppzOsUKz8y8J7v1RWTPg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g15v90amd7sdnm65ds8x5tvtk45nt52y82qq6vgr","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"POyOyg3DlIhaKuQJ0zVPHY3/FOLo0b6nWE7jPRVSXrAR8NDkWs7V4Z43oi764EMgKexWh0zsV4LMsZ2OaxtQ2A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15v90amd7sdnm65ds8x5tvtk45nt52y82qq6vgr","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","popular5ds8x5tv",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhtLKakkQU4eA5pssNwYtV04yZ9VAUvWSEKf5m8RQAld"},"signature":"CtaK1Q0Nd4F8G8lsumnFbrhlHh0sVquNVVOjujR69wExa24XNMZx4uh9jEmhvGS22r9HKy5d/WhKOnti7GNdeQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15v90amd7sdnm65ds8x5tvtk45nt52y82qq6vgr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["popular5ds8x5tv"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhtLKakkQU4eA5pssNwYtV04yZ9VAUvWSEKf5m8RQAld"},"signature":"8ME9pV1+ulEysG8vEDGX9qZBlnnnzyfY2tPJ6PvDlKVi9EuFbvFP72UO53tSLbTshbvwlausQ0yqzQUs8Hjlkw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15v90amd7sdnm65ds8x5tvtk45nt52y82qq6vgr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1312","popular5ds8x5tv","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhtLKakkQU4eA5pssNwYtV04yZ9VAUvWSEKf5m8RQAld"},"signature":"iUdc6qioegZzE61IcyEervMo8yaztPhFXL55tF72+NpnYRQuIDNV2mB8MX8YZOgERXqh7TmFlEh5VSixYg4+tQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15v90amd7sdnm65ds8x5tvtk45nt52y82qq6vgr","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1312","1","1","g15v90amd7sdnm65ds8x5tvtk45nt52y82qq6vgr"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhtLKakkQU4eA5pssNwYtV04yZ9VAUvWSEKf5m8RQAld"},"signature":"W8oHxozfSSuP3eqK5QikjKWHLF7NdPBawSXzkoviUsViKBaJpkflv00V3UnHL+0bFdKIEKUOTWNd9/FgLnN6ag=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1zvnz0jay8vtep476uh8dg028f0lnshnmvt2mdx","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"te9SaVY58DzoKC8pAwBXMN4Uo0XNx+9nFcDGQXdpQXMOLPLqb3/XIMEpHua6MwJTn6PSOB9HaG94bYZbz2/A8w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1zvnz0jay8vtep476uh8dg028f0lnshnmvt2mdx","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","wave476uh8dg",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A53YdNof+H0pERy0MBZyB70dGZPpB++ajk7KRwwiEsED"},"signature":"fEGN3t+/POjRJaYJYdKqmvyq8m9NODihT/dnCBakj1dnkF8A2dB/Nkgo7hrf9jGJtuEyJ2Sirpkq53z1u6p+jw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1zvnz0jay8vtep476uh8dg028f0lnshnmvt2mdx","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["wave476uh8dg"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A53YdNof+H0pERy0MBZyB70dGZPpB++ajk7KRwwiEsED"},"signature":"2mvDILt1EDFa1BQOsvIXtgEn0TKyDCDnJa5idHVhxX5isjpa3WRgmYGvEOc450NW+9OCaUqAsooDHDHQE5ptiA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1zvnz0jay8vtep476uh8dg028f0lnshnmvt2mdx","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1313","wave476uh8dg","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A53YdNof+H0pERy0MBZyB70dGZPpB++ajk7KRwwiEsED"},"signature":"5REOEMsd9vtNqK61U47tCIGhui9QVO1u45cFxetl881ZaRvRs+iHXPfJU+c+6uxOq7jOx6Zf6bRiTv58o0N15A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1zvnz0jay8vtep476uh8dg028f0lnshnmvt2mdx","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1313","1","1","g1zvnz0jay8vtep476uh8dg028f0lnshnmvt2mdx"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A53YdNof+H0pERy0MBZyB70dGZPpB++ajk7KRwwiEsED"},"signature":"fzP7gBtcWM5yhUevEdo0oC7wCtgxFBn3WFMYAuv7kMJHyXrhVNt+WJdSJwIbC9P3GBhEPseW9eT4wsjuWY486w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1g0xkcxkez7yfeh8njm0qu38yf46rkt4g7w4la3","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"EFIdpVehZOkHOQr2SpZDzTuTpMRRjJ/S8CjpGcWbYrAd2lYh+IQz2P1Rz0bUY62h00EnW95MCCjRZOoMciKzmw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1g0xkcxkez7yfeh8njm0qu38yf46rkt4g7w4la3","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","roasth8njm0qu",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AigMfmYIfqciW66vux/eNjSUCuVhJMddsuJhSKFIL34N"},"signature":"le9KL+SmNfGe5a1fLQOgmf+1hPM+6SGn51VWHv02bDIGVFlU+XB5rYv5OemmEc5QSjgwM06Ce2laR2UlI/vsmw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1g0xkcxkez7yfeh8njm0qu38yf46rkt4g7w4la3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["roasth8njm0qu"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AigMfmYIfqciW66vux/eNjSUCuVhJMddsuJhSKFIL34N"},"signature":"X1F/FocPitBU3C/WYdBjy802GCkwnDJae6zwqWTsSEIeUdl7GzXpzjJX4KHQfuZKUItCAIFt9jVNpvSviob8pw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1g0xkcxkez7yfeh8njm0qu38yf46rkt4g7w4la3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1314","roasth8njm0qu","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AigMfmYIfqciW66vux/eNjSUCuVhJMddsuJhSKFIL34N"},"signature":"i3LcOxw78ej2vJvUXw0OFnuJmyLx2t80EPAeiu/BUDtel6e8uyL4j7EQuIGtISwrZYMtNjDh2mYWdWe58n1pQg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1g0xkcxkez7yfeh8njm0qu38yf46rkt4g7w4la3","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1314","1","1","g1g0xkcxkez7yfeh8njm0qu38yf46rkt4g7w4la3"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AigMfmYIfqciW66vux/eNjSUCuVhJMddsuJhSKFIL34N"},"signature":"V9dgFO7n47G1rVp5Y5j1mnUYA9nQj5H5rUqkGZzWG4d+L5CwYCIaWxPh/hTDFORQxX0iBLJKjfapUVBr+O7zjw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1xr4zwnzhlwxqy3un2z54qcmql2e5g23mdsvljt","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ozQCkJ4MPrap0UC+KTNWOeI7bFG4q0Yymn7i+tv3mv9cN6UnQY3xHEOiP8OF8H3ZwoROTJaXuP8JRjPKFVubFQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xr4zwnzhlwxqy3un2z54qcmql2e5g23mdsvljt","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","tumble3un2z54q",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjGyUrRN2508KAY4adj4rRm8VPcJcKdxVuJoNwt/loAo"},"signature":"j7jAOLzechsAkBduCTaiR+KYdIRkQ/bAkEMtyIurOQg9ICsfysyrnQ9QfEnVyu/QLfs05ovA6Zeas0ml8erm1g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xr4zwnzhlwxqy3un2z54qcmql2e5g23mdsvljt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["tumble3un2z54q"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjGyUrRN2508KAY4adj4rRm8VPcJcKdxVuJoNwt/loAo"},"signature":"sHusC8o1pBjPqLy/gU1styYcMRZuZG1Px7maMcON7sBU2Oj4iaDpABIUSYKD2KRSvXhlxWOAaivkImxkyvFm7A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xr4zwnzhlwxqy3un2z54qcmql2e5g23mdsvljt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1315","tumble3un2z54q","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjGyUrRN2508KAY4adj4rRm8VPcJcKdxVuJoNwt/loAo"},"signature":"We1NyuT1CIWL+pu6KWmQREmkcu0mNh0HUTLQ1uTt7GBpi60Aw9DA8yoF6ryGFXFY6/Ozwe4kvYIUnhth4uCcpQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xr4zwnzhlwxqy3un2z54qcmql2e5g23mdsvljt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1315","1","1","g1xr4zwnzhlwxqy3un2z54qcmql2e5g23mdsvljt"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjGyUrRN2508KAY4adj4rRm8VPcJcKdxVuJoNwt/loAo"},"signature":"BOpCIUfwXT6gomi23w6YHpV1a8n3jO/PJpZJDV0peApFcou5qyWsksPR7IMsid3ODVSjakXNDwUFwE1ayc6h4g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1qck9k4cvfqr48nutvfsemea5w6yn80uvdyxjyy","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ck3psWWhfcRajCHXFMcXEbgFIGpn98bz2tMRb0CkKUZHc0ivy3w78yD3c2fM/8VTooLP1zWjuxT8CFDpTgt/ng=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qck9k4cvfqr48nutvfsemea5w6yn80uvdyxjyy","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","meadownutvfsem",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ax/tuS8U7Vf+MxRnb3TClUahmuiM7hL9jw2OjNZ4VSSG"},"signature":"KV0J/eVfr/WP2DGXAvOZ1Fn/Ubh5yNZozsgxXDdwZZw5O3hC+WHlTJBWZkFHT0KtHJj31aaamke0Wz2zPSjJKg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qck9k4cvfqr48nutvfsemea5w6yn80uvdyxjyy","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["meadownutvfsem"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ax/tuS8U7Vf+MxRnb3TClUahmuiM7hL9jw2OjNZ4VSSG"},"signature":"nXY2LetPof42XZBtS2HL3buEBPD4VTH0e2i+0LqVq2tT0iM3gXGpfbVSF8upMFjXFpQCVdLaaoIg2JEhB9lQYQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qck9k4cvfqr48nutvfsemea5w6yn80uvdyxjyy","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1316","meadownutvfsem","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ax/tuS8U7Vf+MxRnb3TClUahmuiM7hL9jw2OjNZ4VSSG"},"signature":"9B7TLtk8MKWD9X57nuwNk0O9JY0Ue1YxXRtbBDP1mhZWXriAUBDGLGohy2vjkn95odouDMRvhv/+83v163OHjg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qck9k4cvfqr48nutvfsemea5w6yn80uvdyxjyy","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1316","1","1","g1qck9k4cvfqr48nutvfsemea5w6yn80uvdyxjyy"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ax/tuS8U7Vf+MxRnb3TClUahmuiM7hL9jw2OjNZ4VSSG"},"signature":"T3TQDIKJ1bsZRCGlhUnuoxcKZ//qpVolVaBfSg0yS+5JEKOn/jSDYfbmR5+PMMEmyuncyMCEnSg7YlotH+krCg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g12l5ucws52gekrvavjacjlpjmjss0drzlqqapsz","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"rk419BpPwjP4sj76FhlMcrX3yw/BUXWxsV/M4PdVm4o4WN073rt1R4AFVAEo+mtsqt79tCieRgt4BVFQqzlXdw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12l5ucws52gekrvavjacjlpjmjss0drzlqqapsz","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","verbvavjacjl",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6b9kuni8HPw8vALqYeOfgaGL+2buUEgcnaZPnU7l+XT"},"signature":"iaT7697LXzRPmDYuy6BA7hXFvWqzeIVnbqGQlNOBgSAKYuq4Fa/WM1DNWHd4Rwy/Qm7N5jXdFGWDAGZB5rUl6Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12l5ucws52gekrvavjacjlpjmjss0drzlqqapsz","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["verbvavjacjl"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6b9kuni8HPw8vALqYeOfgaGL+2buUEgcnaZPnU7l+XT"},"signature":"r9gNALMse45OYeCP8MN4e8PKmONVzuCn8EfffY8tHSQ4xscHrx8jxYC4w7CIKb4sNsVCPwYeNIEbAkmSbTlouA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12l5ucws52gekrvavjacjlpjmjss0drzlqqapsz","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1317","verbvavjacjl","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6b9kuni8HPw8vALqYeOfgaGL+2buUEgcnaZPnU7l+XT"},"signature":"WVfxJ7AbaYTpCq1QBgvRT7N643/jhhkswd6jt4LLWE4BDer+X+0yRF8uKk2Y5n8UJeMhCu2yUsXNlk4ZkcOrzQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12l5ucws52gekrvavjacjlpjmjss0drzlqqapsz","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1317","1","1","g12l5ucws52gekrvavjacjlpjmjss0drzlqqapsz"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6b9kuni8HPw8vALqYeOfgaGL+2buUEgcnaZPnU7l+XT"},"signature":"XjdWLF8xfrfK0Fnmn8wL+jsOVs2aMca3C34uu6m8rEQSgSOJlaEKgeBtT/VHzOqcBmro8X2d4s2xPGloQxThUQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1cn2mq3kfqkskmegmtjctse07f0jsz24tq3ntrh","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"mmdenKXzLHAv9rnftC2WSztnJ4He3Nq5ihciKj7yBQhQmhIjJarBcSAzxf3msSAwm5oqHOPPWqogeSCLwkOYhw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1cn2mq3kfqkskmegmtjctse07f0jsz24tq3ntrh","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","intactegmtjcts",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"An+Vc1aF/UP2O3xPFtWYD2BQqtKIub1DKt18AcF+O6f1"},"signature":"peraDhVBP+bwQSxvWC6OS2UItErDVbFHmnliLCwuVhYccL3jkaGtduoi/pe1rVdO2k0FtVttNgq86CIwN1df2Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1cn2mq3kfqkskmegmtjctse07f0jsz24tq3ntrh","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["intactegmtjcts"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"An+Vc1aF/UP2O3xPFtWYD2BQqtKIub1DKt18AcF+O6f1"},"signature":"8i4lInJOsD/poeOutz9vZa78cEt2m0NIWhoEX8E1ksJTLOlgakyg1hQRgjHrLadlwiCX5PiupBam8PO1T6cKvg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1cn2mq3kfqkskmegmtjctse07f0jsz24tq3ntrh","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1318","intactegmtjcts","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"An+Vc1aF/UP2O3xPFtWYD2BQqtKIub1DKt18AcF+O6f1"},"signature":"fD39m/kcCRccC4hCloEx4YA2oHI7/v5vTkAtBUT5vOgc8cXW5AB/jlcPBX3dRAZrCKIb88f+h6NlowTkBNwmDg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1cn2mq3kfqkskmegmtjctse07f0jsz24tq3ntrh","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1318","1","1","g1cn2mq3kfqkskmegmtjctse07f0jsz24tq3ntrh"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"An+Vc1aF/UP2O3xPFtWYD2BQqtKIub1DKt18AcF+O6f1"},"signature":"CkIeVxH8bS1hso9khn9tCAr0kpSNptG529o7St5DawRVaXyemXg3URchWpkaLO97jr4Bns4Q9HYL6Zeuv+uqFg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g198w5e7v92vgapdspnr9uc7p3khudyzmtyya5ej","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"j+9kB1aGkkzgydzIjzvZRmA0OzI+N7rCtrMvdYboBBYteZpMolIZ/KbmVB8/MF6n6if6FeX/gVZJBf9O7DoGGw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g198w5e7v92vgapdspnr9uc7p3khudyzmtyya5ej","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","unfairdspnr9uc",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5kwx+QUlFZd/jvENC7HJYSuZQ37ExoC5hl53GM8qhyo"},"signature":"Oypx8WGODNSansLLMO4TrSf+xj+kZImMqdIGaxkJURsbLbo0xb9Ih92AiqzNbqxQKzYTdvblyoaI0K/qD3kQTw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g198w5e7v92vgapdspnr9uc7p3khudyzmtyya5ej","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["unfairdspnr9uc"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5kwx+QUlFZd/jvENC7HJYSuZQ37ExoC5hl53GM8qhyo"},"signature":"O/k/FKYlzGQ+e3ybVVrtPUYILpdWavuPq0e0wpB6OVoqfBGOxmmpzUqPJXWeNDwEZ1TfhLRm7jF1w/u7LUrNGw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g198w5e7v92vgapdspnr9uc7p3khudyzmtyya5ej","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1319","unfairdspnr9uc","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5kwx+QUlFZd/jvENC7HJYSuZQ37ExoC5hl53GM8qhyo"},"signature":"t4vn1MwsWhaSN54rZ5SyCMNz/eTNf5w8gU2cBBbe3MknE4mpGdTVppG8Mic1kNArFdwEIYdsEDlLHefi/U0PrA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g198w5e7v92vgapdspnr9uc7p3khudyzmtyya5ej","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1319","1","1","g198w5e7v92vgapdspnr9uc7p3khudyzmtyya5ej"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5kwx+QUlFZd/jvENC7HJYSuZQ37ExoC5hl53GM8qhyo"},"signature":"VLCfrl69vx9z1jubAsrfXD89oOXcazDjVB0jzgG5zIgUvV8SND/6/dRmovzKOe4yIG6Vyfv8PbCFSawbF5Nh7w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g15lpcjaqm6yjh7u8t6d236caj2l62qspqdyjhs2","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"fsl4iEhn5cgQ6gNugKCx1IqrqCEM4ImwuLlQtNNO5jxWCMTGvMq7ju3J/05au4w5UqKU3XO12Xblkqo4Tc2gCA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15lpcjaqm6yjh7u8t6d236caj2l62qspqdyjhs2","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","multiplyu8t6d236",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8rWkeiXMY5RN+aJd6MjyV+265vF1zVP8fqGUc3i0yXP"},"signature":"FaZ3MuM+r5lmRyOwAV/y6md0pnjCMrxSc5IzJWJmBgx0ISZ6Q3v3+gQ52moxD3f/fpnQgmxnfLRdU+DRIqW7kw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15lpcjaqm6yjh7u8t6d236caj2l62qspqdyjhs2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["multiplyu8t6d236"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8rWkeiXMY5RN+aJd6MjyV+265vF1zVP8fqGUc3i0yXP"},"signature":"KQzjBdKrn35+LWjzfK1ycstfvAfXElV35Sj26LLCoqYgbDCLby91CDacltD2z2iztGdcNt9Li4TXEMQ37HSF6Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15lpcjaqm6yjh7u8t6d236caj2l62qspqdyjhs2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1320","multiplyu8t6d236","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8rWkeiXMY5RN+aJd6MjyV+265vF1zVP8fqGUc3i0yXP"},"signature":"vlFbI7tpjkRGnvYvvrU7JjunW+Plu4ouxdl7jA3TTNZ65cXY+SanDf9wBuBXyLgHegrL3r5N7Fhnt5HTFyq7RA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g15lpcjaqm6yjh7u8t6d236caj2l62qspqdyjhs2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1320","1","1","g15lpcjaqm6yjh7u8t6d236caj2l62qspqdyjhs2"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8rWkeiXMY5RN+aJd6MjyV+265vF1zVP8fqGUc3i0yXP"},"signature":"R5I+WreyJFwm2U9wfQqBfFjrLznttQ1qpK49ifQml+Ycy6/WxTggfGjVkJCQU/Z33XuCpZLk9vnn8XyEOiD+Vg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1s7zsl8gannxqccjn8adkn37s8qp2agzvz02qmm","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"3IAsK75Gs+ErglD6RSfkVT54spdvtfjE0ak/iI9VSK08hHYwTZlD6v0JDD4xrJEICiIdGU66P77TfAvqhsyO0g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s7zsl8gannxqccjn8adkn37s8qp2agzvz02qmm","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","disagreecjn8adkn",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhECPp+HVEkwT+5HXHbsp+cq+YTLHk8LReN2tmGeXeHU"},"signature":"lm2X+PLpbas4tcooo4hVLUe4uFs1L5SUUo3PQ5OM8jk8zfOoBpDVqWGNn/b77B+uFjOay0EMSI+Y+UNy2Uy/mg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s7zsl8gannxqccjn8adkn37s8qp2agzvz02qmm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["disagreecjn8adkn"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhECPp+HVEkwT+5HXHbsp+cq+YTLHk8LReN2tmGeXeHU"},"signature":"KnMDwtQKgwWSQBqnW/twBLhhlnp8KnrVLHMY3D5rQU4OIflwyuy/YKfzzrVu4E3X2KPPBBlZcQSxmtId4FU3Vg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s7zsl8gannxqccjn8adkn37s8qp2agzvz02qmm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1321","disagreecjn8adkn","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhECPp+HVEkwT+5HXHbsp+cq+YTLHk8LReN2tmGeXeHU"},"signature":"d+BbDQMZa7C5okkiceWLXR4Emrc4GH/eTJb54SlvHjk+Hf1m/WVQFT0i7R8yBIsAVBM4+TUVgNIhc5+t8EPhmQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s7zsl8gannxqccjn8adkn37s8qp2agzvz02qmm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1321","1","1","g1s7zsl8gannxqccjn8adkn37s8qp2agzvz02qmm"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhECPp+HVEkwT+5HXHbsp+cq+YTLHk8LReN2tmGeXeHU"},"signature":"vLVBBVt/FBp25996Sa4NqY6Re2o3cXkdnJvb8kC6M5tnbho54gXP1IxoNLaj7piEDrWnHuW9U7xuqenXQABr0w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1hz09wepn2ygnyg57anzt9m2zkx493e3w7q2mc8","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"duaFoNU7ctn1F2dTBmJKCl6Kk7s4dec21L4nwh3+DwJGxzveNxk37hp0RDbNcdzGkaGoWu161q3gCM24JkDrbw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hz09wepn2ygnyg57anzt9m2zkx493e3w7q2mc8","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","dumbg57anzt9",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4cTjeA5KjNuzV95rjxBWaMPVgVLPGWJN4mFYGEXtnBP"},"signature":"m8+8oj9qxZigc+Ldqt0V9KzNdE94Prujdlf51ghih+tkDau2FsAIvaLcK7Ul1Sw+OXN/VJII53QQKVXyWoDrNQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hz09wepn2ygnyg57anzt9m2zkx493e3w7q2mc8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["dumbg57anzt9"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4cTjeA5KjNuzV95rjxBWaMPVgVLPGWJN4mFYGEXtnBP"},"signature":"3uQwNKTFdrrrGe02vWru5YUPau9u73G0rCebIkhmBk8eR7nZk+0oUOQtOiK2B7chT9ceF2GhpSAdjnKxZOI1FA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hz09wepn2ygnyg57anzt9m2zkx493e3w7q2mc8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1322","dumbg57anzt9","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4cTjeA5KjNuzV95rjxBWaMPVgVLPGWJN4mFYGEXtnBP"},"signature":"NhIKzo91bEU9xuFhFdMbEqDqROoN3BDsRB2raw0m8GBCdw5w+pHMzi+MLrrAD0MuLR2FlRArMV9qykYXoAlodQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1hz09wepn2ygnyg57anzt9m2zkx493e3w7q2mc8","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1322","1","1","g1hz09wepn2ygnyg57anzt9m2zkx493e3w7q2mc8"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4cTjeA5KjNuzV95rjxBWaMPVgVLPGWJN4mFYGEXtnBP"},"signature":"UDxuPIp/2zLXrZou6XGSBzpCaEKTYP9YxDHFYgAthVMqWix6L+soCBW9iUMmPlkbq69dJdr0JxD0jUPgT7MPig=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1lvy59kaguxt5dqtwyvae7vxx53v2yx0fpdupmm","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"3x9qePzsWICmOCGCeNJVyKSqj1FlhNyyw2Z7CFCx8ZkwbaeQUR82Fvjt0S8m1ZzZBM7bNbfZzOYecHugsXe6VA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lvy59kaguxt5dqtwyvae7vxx53v2yx0fpdupmm","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","dangerqtwyvae7",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atupsu3o3iw1PnLyK5otdDJgt0ifx/SkOwGlpTRBvWUB"},"signature":"EFwstcDweqy1/rGyZm4vXwCDE9DhmyC/sthbYGMbccpYGfHuqmpOV+5d/JqXsidUOIKYH22EfTX8l4arbcfeGw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lvy59kaguxt5dqtwyvae7vxx53v2yx0fpdupmm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["dangerqtwyvae7"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atupsu3o3iw1PnLyK5otdDJgt0ifx/SkOwGlpTRBvWUB"},"signature":"v2P3n5MBc4hTNDt1vpx7jO1ZIfna8J7nTGAjYbBufIMMfgw/d0zxooj9OiA4yu4HzRi0pkOFTVnM7BSVKERiuQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lvy59kaguxt5dqtwyvae7vxx53v2yx0fpdupmm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1323","dangerqtwyvae7","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atupsu3o3iw1PnLyK5otdDJgt0ifx/SkOwGlpTRBvWUB"},"signature":"JfY1O5fS77ji84YYaOQyTrs8TBbxW01CUEgeIbBAUfE+fWiOISooz2HPUYtNqbebLcFR39Uan7Z5WdlXM0l1cw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1lvy59kaguxt5dqtwyvae7vxx53v2yx0fpdupmm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1323","1","1","g1lvy59kaguxt5dqtwyvae7vxx53v2yx0fpdupmm"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Atupsu3o3iw1PnLyK5otdDJgt0ifx/SkOwGlpTRBvWUB"},"signature":"+2OJT0rgbq5FchVTavhkh4VEsiy1UGHsTKqvolkeQblXu8KOQ1FW/Mv8mKezVYfCt88u7jrc9GqJXdAk4nUrzQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g163pe8q7qyk70cg8ymu0skx49e3w90mdgqtcz9n","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"i73qBgD6Ab+11+1kYlcn5Ss8kxEGeasC9O15fBTXH8g1RPGlr2xMacYDfij9w1aG6j7GA6EmSt6qSU6MHgEgzA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g163pe8q7qyk70cg8ymu0skx49e3w90mdgqtcz9n","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","singg8ymu0sk",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AivO8zJ9rL3wqwJb3oRGxO3mdgsi/up+tlSALH0Tbm9b"},"signature":"1i+wqRxXTZ3la1DrYNm4wqLtqGbIQaZasDp2qIiaJURhOSdHK/emSmu1XBi7sUqb5ScJLPXhO59r2EL7Z1TN8w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g163pe8q7qyk70cg8ymu0skx49e3w90mdgqtcz9n","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["singg8ymu0sk"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AivO8zJ9rL3wqwJb3oRGxO3mdgsi/up+tlSALH0Tbm9b"},"signature":"MMN9ljwAVoeQfbFmtiK5th8RMZd3oFXslMVVDD+zKAkup+10FRA3ox0qaK0urhNgf/4aRoTdJKXNA1+keUsuGg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g163pe8q7qyk70cg8ymu0skx49e3w90mdgqtcz9n","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1324","singg8ymu0sk","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AivO8zJ9rL3wqwJb3oRGxO3mdgsi/up+tlSALH0Tbm9b"},"signature":"IivKqxrQxoNviIC5e9yDTsgw39K8gU+f2cRJaxd5iGwhdq1zPGfPFHq3u4A9wOqnnnWR2kHumz2f5CaOPbKxmQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g163pe8q7qyk70cg8ymu0skx49e3w90mdgqtcz9n","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1324","1","1","g163pe8q7qyk70cg8ymu0skx49e3w90mdgqtcz9n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AivO8zJ9rL3wqwJb3oRGxO3mdgsi/up+tlSALH0Tbm9b"},"signature":"uNh5ptpFwDHvZwZ1iJvqeC0zzeJxNLddc8t2/ej791gOaZMt0U4ZQF0EIHjkuYRFl7qdSdEA6ToH7jhPlZPHsA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g120cadfxmc8qrdvw4dfz3m8afn4neccva4xq3vq","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"hkDXN9zQNRU0Up71w8r52X0Lw/ZSmH2hkyQrUhiKKVlqmO+emL9j8lG7V8xXR6D2A4zmYLBJwL4Thjfu7mgbGA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g120cadfxmc8qrdvw4dfz3m8afn4neccva4xq3vq","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","spacevw4dfz3m",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+IS+2IGF7WVfCzajqW7DoMv01dpok5UGGHwhzEyt67F"},"signature":"dQKpSb0rUM5X4IfBn1KdfxmhvYQ0owA7ei9LBwNIXQ5JhY8mKe3/fmw1l/yXOuds9o+5LDjt6gt179f5Ni6C8A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g120cadfxmc8qrdvw4dfz3m8afn4neccva4xq3vq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["spacevw4dfz3m"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+IS+2IGF7WVfCzajqW7DoMv01dpok5UGGHwhzEyt67F"},"signature":"TYJFTnPmpaSAq1F1y0B3kScq9V99pwdDKZNGmWNERI5q1stralLGkIfW2W2Lnxz+3360B7J8IXO0Kajm0S6/Uw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g120cadfxmc8qrdvw4dfz3m8afn4neccva4xq3vq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1325","spacevw4dfz3m","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+IS+2IGF7WVfCzajqW7DoMv01dpok5UGGHwhzEyt67F"},"signature":"zTT8d6GCbWyvLC/Oce2/1TstvmNVBpZoZ9UaP/hKo4IYsIL+mTXSlK97n/xHl2DetkQSx9lMh8/QkXmWuS6Blg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g120cadfxmc8qrdvw4dfz3m8afn4neccva4xq3vq","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1325","1","1","g120cadfxmc8qrdvw4dfz3m8afn4neccva4xq3vq"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+IS+2IGF7WVfCzajqW7DoMv01dpok5UGGHwhzEyt67F"},"signature":"6SPuBxUUJTa9zFAzfXkuch4o0Y+HH9ugo9D/w5hWU3Ea0ER20opOLUj0Fso43Jp0VB6KRWb9Z28P83hZPGokgQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1ll9xchz9gyum2ddjte8rptx6qa2cujuws6294l","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ke0vpWIAbLEZh/kwxLqCFRt6/+fSJdZ+E45/dLRfbywgnijmcGkzaCEWNFDu+iVVIC+xhMGjmBehJrG45fwzoQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ll9xchz9gyum2ddjte8rptx6qa2cujuws6294l","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","earnddjte8rp",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/1wFpIli+bBsx5LH1WQEOryFmFEqtyG9Dese4nRoCon"},"signature":"1eQdJAx8Vh2QKF5O3euJBAFUz4GsAKjgvde3tHHVslV/5uleSHwCveC8pusJwn0d1ShyjZT0dB83WynGlDKXew=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ll9xchz9gyum2ddjte8rptx6qa2cujuws6294l","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["earnddjte8rp"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/1wFpIli+bBsx5LH1WQEOryFmFEqtyG9Dese4nRoCon"},"signature":"M3eIGtaoTdCmMv4QPlPHzwZGzI86oexrVnzK/ZrKy7BYHoNsdOvmXRuCHeOGogntLujqpi2oIyB2oo7yMlKaZw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ll9xchz9gyum2ddjte8rptx6qa2cujuws6294l","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1326","earnddjte8rp","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/1wFpIli+bBsx5LH1WQEOryFmFEqtyG9Dese4nRoCon"},"signature":"ELI6l7GrN1Evxy/4gRv5PUeOiauXSOtoC3K6WE3yUKUJbVt9dIxmfEVRZ2YJXjLNY1eRcX9CMaEwB5LrkQzAEQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ll9xchz9gyum2ddjte8rptx6qa2cujuws6294l","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1326","1","1","g1ll9xchz9gyum2ddjte8rptx6qa2cujuws6294l"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/1wFpIli+bBsx5LH1WQEOryFmFEqtyG9Dese4nRoCon"},"signature":"4vjHr/PWnLtL/ghIJ9M6IkCrqDq5/qlAX0LbVpyYOZwa76gs+nOaInSmkfm834mbxrNWXjihDp5HLVlIQW3D8Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1ltfw77y24hs44fd5627xajmcgpk2mc688550yx","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"+3ywHVLCPNtZ+JudqMfUDgnic/S1gMVNYOrLXtj/ewwL+DmK3sa8+nh6Y6s9fPAv7K0vprAHLglU9pRm0MbXVQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ltfw77y24hs44fd5627xajmcgpk2mc688550yx","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","flockfd5627xa",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4uLh2vdWRJbBlLPYRisyIPnif/lJygJhuApIp6IxIW1"},"signature":"4KEl/YQOvgWf3fM7InfNl2TQvMgyC29vteVN+5gKGEcH60540X1wSr8bSzQCnfovxqurFoPUtO4lpNSVBeqTAg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ltfw77y24hs44fd5627xajmcgpk2mc688550yx","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["flockfd5627xa"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4uLh2vdWRJbBlLPYRisyIPnif/lJygJhuApIp6IxIW1"},"signature":"q9lTx2sWT0Og4QfrxgQgf3yjsBb62uN9DwOPLHan6FQ7Pk4m09sZs5DfGzNKb97/QXvoRNEItYiICHIt3cfMUA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ltfw77y24hs44fd5627xajmcgpk2mc688550yx","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1327","flockfd5627xa","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4uLh2vdWRJbBlLPYRisyIPnif/lJygJhuApIp6IxIW1"},"signature":"Kz6aUxAvVqko6hm9GC9OzAom8RxMWg2SxyU2KpI7x4dYRcoKSM5gEHGP7Mdu7E65OYRPfDfEJ0sOZbIOriiQPw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ltfw77y24hs44fd5627xajmcgpk2mc688550yx","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1327","1","1","g1ltfw77y24hs44fd5627xajmcgpk2mc688550yx"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4uLh2vdWRJbBlLPYRisyIPnif/lJygJhuApIp6IxIW1"},"signature":"/T/wvfgJZrbcpL8g2b7zgsE1OY+GD5wEFrzcwcvZDfgY+PG4lmP40QW9aZXEO/CrVTOtSlNgobamIOQCmAOnWw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g170uzc794dglv0cye2prht6q43zs5w99sl4wjgt","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"V3ctQoNoaNSjKcxstk68x8F20iPLTqxdwU9uKvvH46Y7t1yBQTm7jX2iN0T5xZpSb07e6B7yrDhf5Fhe24aewg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g170uzc794dglv0cye2prht6q43zs5w99sl4wjgt","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","uppercye2prht",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5r0+JyFc/uTBgHnyUJ4ZUmDQ7FWKeMz0StwDVrT1YcI"},"signature":"VsSN0k2MVv8fxLqYudMDmYeFLBxa13c7mtsAVoJCjyUkRImkLxqmd2wdyOaJQTOxEJgRWTLf4/YBOBFbSRGeYA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g170uzc794dglv0cye2prht6q43zs5w99sl4wjgt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["uppercye2prht"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5r0+JyFc/uTBgHnyUJ4ZUmDQ7FWKeMz0StwDVrT1YcI"},"signature":"sAKfXgabkL3yGFH4IjSU4xQU8l1WjgctBSm/4DRB5zNRBi3ZDnQxyBPW6YDQdOBMPv8+YvP75WGj0gdfKRwzRw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g170uzc794dglv0cye2prht6q43zs5w99sl4wjgt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1328","uppercye2prht","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5r0+JyFc/uTBgHnyUJ4ZUmDQ7FWKeMz0StwDVrT1YcI"},"signature":"dMNoIeeXo6aza3KFbftOo2O1KgWlDqUzTm8fJc5LQKggTUtlHIs6ncVVl8H/ZMcMOflM3SvQ0W5mfpdAHv+img=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g170uzc794dglv0cye2prht6q43zs5w99sl4wjgt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1328","1","1","g170uzc794dglv0cye2prht6q43zs5w99sl4wjgt"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5r0+JyFc/uTBgHnyUJ4ZUmDQ7FWKeMz0StwDVrT1YcI"},"signature":"97evb+801sFe2UKayN4BKmrbnNvem/Ijjii5hnncltopAxOjlO3cmUBZLVL3Gyd33BuZvDt9WEWq1FjPMhJcwA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g189ygc5d5twf2lk3tajkvtkd30zaqnmu5tus6fd","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Q9Vv4hf7SQoQNF/idxlg//8AI4clc4c9ozR4klzgTcBrcYerH+5LZ4/vAaGR9gLkRMW+5RoBH3RA8ESi5YQDwA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g189ygc5d5twf2lk3tajkvtkd30zaqnmu5tus6fd","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","horsek3tajkvt",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A60KHxI+TimegwR5dXI7x1kBNF7GLKNjYTf6BKQqBFK+"},"signature":"4Su2VtKoiFesxz7wBEIOdawV7xCJVB0iF/XMW2iSzDN8jvs5B1lk87inr2aTtsqAsxHaXfH68OGkLhUMzpaGeg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g189ygc5d5twf2lk3tajkvtkd30zaqnmu5tus6fd","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["horsek3tajkvt"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A60KHxI+TimegwR5dXI7x1kBNF7GLKNjYTf6BKQqBFK+"},"signature":"Yn+9mQkg+MgbHKru4gFiuUPt7hWKWoVjMHHrPou15qof4z01WcZE9dT4+k1qA6ayZ+hHawzUzOIQv3uj/JO+mw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g189ygc5d5twf2lk3tajkvtkd30zaqnmu5tus6fd","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1329","horsek3tajkvt","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A60KHxI+TimegwR5dXI7x1kBNF7GLKNjYTf6BKQqBFK+"},"signature":"KTnW9LI4pl7Me5uti1lwTluVS9Dk6/fgmjDW/ZimABUvPH6vF59El5wa6ybzTqtWK4sqLMz98gHOkHYFrL5OUw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g189ygc5d5twf2lk3tajkvtkd30zaqnmu5tus6fd","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1329","1","1","g189ygc5d5twf2lk3tajkvtkd30zaqnmu5tus6fd"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A60KHxI+TimegwR5dXI7x1kBNF7GLKNjYTf6BKQqBFK+"},"signature":"3knd0ZlnjulzFzq54XJq8DgPowKgUEsuJEMX7qJe2lJhkyOErn8TnSoRRr7sHPq1WQ/kQ9gl0TFbhD/ayHPpNQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1qxk4zm2066wr5nud7jwxey7j2fh4jhmsvwh56j","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"5XaDFlHqavxwya9SdzhrWQTBZhW+Qy6QqXec2bBUWEEVicoBoGKuwLSwsHng0AEwetwrbswfOpG5CeVa/I1YBg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qxk4zm2066wr5nud7jwxey7j2fh4jhmsvwh56j","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","largenud7jwxe",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7VVzVkCWoMvEJw25i/O/fDzeBnSmW+MrvHewkMzEznV"},"signature":"8Vfx//i1RoK2rfgce9gFGEELgnSa9mAqcKK/1WzJw9ZtkYRscpwUTxWcWNlHd8ZHTG18Budiox/Z5jfJYkXWNw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qxk4zm2066wr5nud7jwxey7j2fh4jhmsvwh56j","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["largenud7jwxe"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7VVzVkCWoMvEJw25i/O/fDzeBnSmW+MrvHewkMzEznV"},"signature":"YNm2cAS+WHffNaam+8PmMP4+olX94gx+FgKaU1L+3FByd6jtNBCcoWQAj8NYfgjWRnJQpqXQQiwI/scQ1QBVaQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qxk4zm2066wr5nud7jwxey7j2fh4jhmsvwh56j","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1330","largenud7jwxe","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7VVzVkCWoMvEJw25i/O/fDzeBnSmW+MrvHewkMzEznV"},"signature":"+UABZy1gdSw7lnO8RxjgQhhVBQ2YmJp5pfjdPCDFJYNhltkuiqfUvpgHd8Z5idsBpm5LwTjPZwgRxhzHlzCEFg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qxk4zm2066wr5nud7jwxey7j2fh4jhmsvwh56j","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1330","1","1","g1qxk4zm2066wr5nud7jwxey7j2fh4jhmsvwh56j"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7VVzVkCWoMvEJw25i/O/fDzeBnSmW+MrvHewkMzEznV"},"signature":"KVfzgiepIX5sfywt3m9VvxjUNJIEep6cE/lkici9DAofdW5ldII4My3iO5HmYX525f9GFd4xKOhBFOOxJU8/Rw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1s0uc0safdfkffuyqnsc2lkmjhexvn7ax4flr0n","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"8zwPgNhz92MsENaanjbwYPfRnsUs+u6QBGuB96gmRjMCcQRB0wT3v3n5pgwNnQlFEow7at5Eudy5X0HIYurxew=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s0uc0safdfkffuyqnsc2lkmjhexvn7ax4flr0n","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","boiluyqnsc2l",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqIHzA2T/m1mq5SLAQqDiLQLHUKzmRMwN4386f7pEWHj"},"signature":"ZLCgeZeBMiOPBowXT1EQuYDEB4WN6sN5MzG4Sz8LwBMwaQ1bbok9GtukNJAZj7zEYK/Inxt/Ny8atOGl5gp+pQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s0uc0safdfkffuyqnsc2lkmjhexvn7ax4flr0n","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["boiluyqnsc2l"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqIHzA2T/m1mq5SLAQqDiLQLHUKzmRMwN4386f7pEWHj"},"signature":"FNyvwJ3kCCGRqX8WBk2pjl69gYnJJIk1MhHGjJ/q9poaxqVfs/gnM+HxvmQl3pL/01FMrTcu9NSx8fBvtzcUHw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s0uc0safdfkffuyqnsc2lkmjhexvn7ax4flr0n","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1331","boiluyqnsc2l","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqIHzA2T/m1mq5SLAQqDiLQLHUKzmRMwN4386f7pEWHj"},"signature":"RCY3EmnpiXLgQsytifUW2G1fh0Ls6rLNpejkGD6OApA/EVFQcub5mvxcT85fnOfK9iwuqfc/c8BV3T/wiuFy9Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s0uc0safdfkffuyqnsc2lkmjhexvn7ax4flr0n","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1331","1","1","g1s0uc0safdfkffuyqnsc2lkmjhexvn7ax4flr0n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqIHzA2T/m1mq5SLAQqDiLQLHUKzmRMwN4386f7pEWHj"},"signature":"e9t/RSN7Sddisb8P4vX8NQFn0uOxDIaSTEG6YF9WPJEaW2HMCRHRWtzZ95hQOh/jxq63K0MaX5XhzQn3UjiVIw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1qrx6mzejdv4cqj983ee94httl884cklmly0kuf","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"3KQsKTulbH1jyDtyIzWtFt9FB8F7foFtOeoGkGiYfhl9soQl5Z7M177nmvV4Zd7CbNqAEjOQjVHU6UkehEM6qA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qrx6mzejdv4cqj983ee94httl884cklmly0kuf","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","weirdj983ee94",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AsppaPwt3PBxmaMx4ka4jcpZFUd0uZBPYK53DsiBg7pq"},"signature":"fEKVKqQweCrC48TYa9BJbFc16+FqQ+niriNpk3GwqDNtu9yFTAZU0Dz1GIvSf+CK9xZ9a0Z7/ciGol6GWR85Aw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qrx6mzejdv4cqj983ee94httl884cklmly0kuf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["weirdj983ee94"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AsppaPwt3PBxmaMx4ka4jcpZFUd0uZBPYK53DsiBg7pq"},"signature":"xO1BU72TM36Ooy5InF/cEJLZ1MCqfcQCEbaSZaaxRiVk7S4RixrDFQV+VIQJYNpHWZdQCiqgbltMLEa9EO9djw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qrx6mzejdv4cqj983ee94httl884cklmly0kuf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1332","weirdj983ee94","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AsppaPwt3PBxmaMx4ka4jcpZFUd0uZBPYK53DsiBg7pq"},"signature":"sny+E/MbDww7N4DBTWYkPxAWaJ3LKsDanwlLiWPU0yExMzl1Ru5II4kd3wBwpf7Cy+AmrLYfvopZOYEdAfmnLw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1qrx6mzejdv4cqj983ee94httl884cklmly0kuf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1332","1","1","g1qrx6mzejdv4cqj983ee94httl884cklmly0kuf"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AsppaPwt3PBxmaMx4ka4jcpZFUd0uZBPYK53DsiBg7pq"},"signature":"pw4g8+cy8wETm7nypzBIC1IDMq3JwYUm23OUuCQoiKMwhb8ESw6PS2moQFxGPrdz9mqiAyScpOkYwWtHHI/B1Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1mg8fluzwzpectu7q6742tjv65atj7s0cr22yn2","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"zoEzWmvKPGTsI1P4WG5587umeShaZSD+dnshT4MgpDpL0LQIHNd9rTHTj2gOszMKWFbQJqyZStQ8Fxnpv0kHDQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1mg8fluzwzpectu7q6742tjv65atj7s0cr22yn2","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","thumbu7q6742t",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aql0eG2U1sGriaJ7Dur34/JxCC9h0Zt6JRxuvh4x8hL+"},"signature":"nR2IyXL8ym+OH3ATp3Yx/8p7FjUTTlHkGw33QiDH1as5PB7vT6Gd8QtIIeW+nfMRGRIC5iL1cPtCydFA4ckqBQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1mg8fluzwzpectu7q6742tjv65atj7s0cr22yn2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["thumbu7q6742t"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aql0eG2U1sGriaJ7Dur34/JxCC9h0Zt6JRxuvh4x8hL+"},"signature":"7GxMVl0YY8SiSjzdhQfgDmmOR6nCG/fjt7Y3yitSV3By9BrMLKVvz4ISlp+caaPH8NrwZXGmThxPbs71/oBf5Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1mg8fluzwzpectu7q6742tjv65atj7s0cr22yn2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1333","thumbu7q6742t","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aql0eG2U1sGriaJ7Dur34/JxCC9h0Zt6JRxuvh4x8hL+"},"signature":"U+CyLyO4kUn30283tq6ZkqjHvyNsk9P2kx5zK7ebCBscpmZDZYjA+5giaIBaDMzQD6O7U4NwkXjQkilIAmrXnQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1mg8fluzwzpectu7q6742tjv65atj7s0cr22yn2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1333","1","1","g1mg8fluzwzpectu7q6742tjv65atj7s0cr22yn2"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aql0eG2U1sGriaJ7Dur34/JxCC9h0Zt6JRxuvh4x8hL+"},"signature":"ZMCHlQ5IHc5Y0oWtBOej5eYe6lmiURsrZn8ffVkOOXxppal5+g5zHf5wDMuD+RdSZt0b0ZsNva0O6C9f+Hpdkw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1s5ql8d2jdzs9teakd42jpzv724mmcrcjlmf2a2","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"HN+5ats4bDe5osjQoKV4KZlSyWcXme5N/Ms7hl7SGnYVaUn8Ki/+6Ac4Q4TXFArUQXjJ1XysnfJgs/VVXYpfqA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s5ql8d2jdzs9teakd42jpzv724mmcrcjlmf2a2","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","treeeakd42jp",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+YsRNH1huZPtMOuBjapPRZcEuZ4azy8yg5vVnANBcSO"},"signature":"i90n0K8rzemoDvu1YxXhp/3q7zqf0QBbxlX7VzJkDuc7abqRnWSy9MZbqK8zqCGm6OfhsIBoDEJLkUGE5lrpoA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s5ql8d2jdzs9teakd42jpzv724mmcrcjlmf2a2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["treeeakd42jp"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+YsRNH1huZPtMOuBjapPRZcEuZ4azy8yg5vVnANBcSO"},"signature":"1FGdd+lc1HGet7SupmYiosUq82kzTQrdSmaC8Jg2/BZfYIqdLsUV4671HqBZyrc7ZJu1OzlgcUdhz0ts+7CNIg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s5ql8d2jdzs9teakd42jpzv724mmcrcjlmf2a2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1334","treeeakd42jp","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+YsRNH1huZPtMOuBjapPRZcEuZ4azy8yg5vVnANBcSO"},"signature":"wgMzmyL1Sb7zlfuvp3O0KJAN/BpEWmQ6WWzsJoVfCL9fGrbzBSmmkxgdc3ULXxOsTXLPM+zdYkoXOidKRNju3g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1s5ql8d2jdzs9teakd42jpzv724mmcrcjlmf2a2","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1334","1","1","g1s5ql8d2jdzs9teakd42jpzv724mmcrcjlmf2a2"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A+YsRNH1huZPtMOuBjapPRZcEuZ4azy8yg5vVnANBcSO"},"signature":"NaMv8zOPlYwoHWYeJjP1zmyWdzkaZBmSV6C7MfFQOpcPeyNJQ+RmdZR16l7T+9zI7rOkwoIUmHqdOQQqEvzo4g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g19e0msfnd3rgewllp8gjjpqnefcf62kcd7xzuqe","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"7aY5VVGp2esbpQcT/yRUcv8wdbNLyCFifbCjdwxoBV4VNJS4K0XH/RdDAtjSYmDu7WjsCWMr/eioaraC24whbg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19e0msfnd3rgewllp8gjjpqnefcf62kcd7xzuqe","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","bravellp8gjjp",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqbPH/0uLF5Hs0tvc6VavLf4kKOy98atla5cb5qEFrZN"},"signature":"EY3vPh07vWC0BkFdFeHPStqpCprMONGF6JSaaFj/PCs2uZS+HCUAGfBlbH95jFrsypDcK0ZmDj+Fl/MHgQs23A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19e0msfnd3rgewllp8gjjpqnefcf62kcd7xzuqe","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["bravellp8gjjp"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqbPH/0uLF5Hs0tvc6VavLf4kKOy98atla5cb5qEFrZN"},"signature":"rbRMZ4lq1oCqzMeMkHErIs48EuhNBIxFZlWxSqJFv8lnh8UG2y6m6kihsbkBdlG9HWNyB/lvZapduP7NcivlSw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19e0msfnd3rgewllp8gjjpqnefcf62kcd7xzuqe","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1335","bravellp8gjjp","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqbPH/0uLF5Hs0tvc6VavLf4kKOy98atla5cb5qEFrZN"},"signature":"JDK+POXCkO0L2SqppqAhRSlWxd3hLADWWofQBgD3PO87gYt5RGTqylMYuA+tW0+F2uVxd0BghIx6NIra6GpHdQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19e0msfnd3rgewllp8gjjpqnefcf62kcd7xzuqe","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1335","1","1","g19e0msfnd3rgewllp8gjjpqnefcf62kcd7xzuqe"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AqbPH/0uLF5Hs0tvc6VavLf4kKOy98atla5cb5qEFrZN"},"signature":"NjSOZm0TR68oYoraWn/8X2ShbzCrYuY7NC5AW6j2mo4eHRjzz4+tRK1xyOV0TS0lNWGcB2NQsTGXkWbmX1mnhA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g146nnh4pvdkmmsnj0rlswk6fqh5c5glg568f328","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"v9UG1i/dVXJ7Kh9Bjc4MgKsXY4BQpEBVI41wjHevC6Er2OwzCyr3aoJJtKhJk2/CdSJYKmCY16OkvA/jpqqGtw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g146nnh4pvdkmmsnj0rlswk6fqh5c5glg568f328","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","forknj0rlswk",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4sI+U8dLphRvDsRnjMVAybcmmpqCPNrDvuAP+EfluOU"},"signature":"g8LDPkPo3X6DjEasINzAJG/Fn9eHGpSZnn/kKmgYfvgyhMWQBYmq9GF5jwNMt3pZpDTckCS5t3J5PI5S64AJ9Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g146nnh4pvdkmmsnj0rlswk6fqh5c5glg568f328","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["forknj0rlswk"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4sI+U8dLphRvDsRnjMVAybcmmpqCPNrDvuAP+EfluOU"},"signature":"acyYLsFX2M7AYw3qxKiMI6PJnotz9HcQRjbmcbZdCj1TyXheu9GGs8qUEPxmOFqBU5NZuGbR2RN7NOkv/shWcA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g146nnh4pvdkmmsnj0rlswk6fqh5c5glg568f328","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1336","forknj0rlswk","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4sI+U8dLphRvDsRnjMVAybcmmpqCPNrDvuAP+EfluOU"},"signature":"IxZ1TvRXe6Zkjj6EAiEqSqNbi1TGXjt7QRoNzftnRjhX3QnU89eWvSbTwXIa5sEyUW1GtkB0BnTgJ+QdhyylpA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g146nnh4pvdkmmsnj0rlswk6fqh5c5glg568f328","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1336","1","1","g146nnh4pvdkmmsnj0rlswk6fqh5c5glg568f328"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4sI+U8dLphRvDsRnjMVAybcmmpqCPNrDvuAP+EfluOU"},"signature":"gpFIxjIcg2/0UjioyLzJhbGSVuIr5TtguJh8oubdPBcpvLQWHcg5qgx7gK+J+kAbzAAdHTu8GXOaqw+b7M0giw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1mxtwy0m58kkyan6v9rkulezrwhtnnmkv0j28kt","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"YCy3RHCl/6d8ZNzxaEHcRAg/RyVejsFS7I6l+e/aE8U97QP2O5yeZ8VDEoiaPSuznrLTY3FwHtXLsszxvTNa7A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1mxtwy0m58kkyan6v9rkulezrwhtnnmkv0j28kt","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","exoticn6v9rkul",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ao1ahhz5ji08uVZ7vyTRcduxC1Sl8XBKdgheA5lBWmaI"},"signature":"FrW/cbF3fUFfORTNhy5Kektsdxp/gvbuwTuwCDfjv+BsYcnqErjBpa/TJ0sD6xAlsxmp/OaHG79K9hBPnzhoIA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1mxtwy0m58kkyan6v9rkulezrwhtnnmkv0j28kt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["exoticn6v9rkul"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ao1ahhz5ji08uVZ7vyTRcduxC1Sl8XBKdgheA5lBWmaI"},"signature":"NoCn8bGFdXCEbxsO/CcKuHbgQMLhHc7M2vzwaQ5qT/0bwK5Y6TvuJCGVYiwtr728Nfv3OhyMhfFMzHKIaAoIeg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1mxtwy0m58kkyan6v9rkulezrwhtnnmkv0j28kt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1337","exoticn6v9rkul","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ao1ahhz5ji08uVZ7vyTRcduxC1Sl8XBKdgheA5lBWmaI"},"signature":"sBkrhZxy5llBWVO1dg/0Ggy0ZX1obNp8yv9/pxR0poEO8ceeUnsmUaChq6nkv143EOacGADSvft9VMUFMNMZ4g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1mxtwy0m58kkyan6v9rkulezrwhtnnmkv0j28kt","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1337","1","1","g1mxtwy0m58kkyan6v9rkulezrwhtnnmkv0j28kt"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ao1ahhz5ji08uVZ7vyTRcduxC1Sl8XBKdgheA5lBWmaI"},"signature":"yPzwoBsSRLBOxZ1b6iKUukttAZhEb+9qZRMlunFNkalpuP5gKes+q2cWjVT9APOxIeVvUCEZFOWOnfKAj3e8Og=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g19h59zgdm6w4taflqgh86jjphunr7lkxqjn7vdm","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"pUd0H8RvOyEaEbIg0Euhj3fbnTH5jxj1UB2IqgxGuvQ9VPvZosl8OKtINyuWm4Ew0TC8V6vNRHWLqlBOkeVR+A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19h59zgdm6w4taflqgh86jjphunr7lkxqjn7vdm","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","potteryflqgh86j",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4aUf0uRjKfwNO13nrvwJZxyMiEttFP2GUg+4KP6fV5R"},"signature":"qAaHwcpXs46rpLfQbPyWYcWCc54NJQlVNIYhVEpMaFEIqkhhFVjpZsLSf6l3kB+sLaIQDLVtvahcZfk1VkEEkw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19h59zgdm6w4taflqgh86jjphunr7lkxqjn7vdm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["potteryflqgh86j"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4aUf0uRjKfwNO13nrvwJZxyMiEttFP2GUg+4KP6fV5R"},"signature":"GUk4A0kMHp4WCJWZTOakbb57M0vqByROTiuO+vxdTNsQbC0U3e7SjenOhUL8J/Y0OharQwk/oEeXEh06ufuShg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19h59zgdm6w4taflqgh86jjphunr7lkxqjn7vdm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1338","potteryflqgh86j","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4aUf0uRjKfwNO13nrvwJZxyMiEttFP2GUg+4KP6fV5R"},"signature":"9Tx8/fCRgLfZwVdoa7zzlyCcwac/I5cENPvof9C7G3hXtfABklB/oBTUzFNmB07Oat9sPa/nNpdiIPltZNRypg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19h59zgdm6w4taflqgh86jjphunr7lkxqjn7vdm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1338","1","1","g19h59zgdm6w4taflqgh86jjphunr7lkxqjn7vdm"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4aUf0uRjKfwNO13nrvwJZxyMiEttFP2GUg+4KP6fV5R"},"signature":"OADsOSM0X6bEkaMDGpD8c0tgUxZH+/PApnRV7Ui8SX4TaNbCFYDmEGdVX7/QyNkhmn364TnM1e70VHHi1iuGcg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1u4gn3mlyh8p3acv4cnj7gd0tzm44zwpu5j9psp","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Q03t4NSQUIsUOFNQUjkKSoEebTk3UbluALeDFVWf0xxjG/R6lg5f47KE0NzrFJWcJ877bDFKFX7Z1h2S6CawOg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u4gn3mlyh8p3acv4cnj7gd0tzm44zwpu5j9psp","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","corncv4cnj7g",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtVqcUVAGQkiNwNcp0zvcwC+OaG0gyrdBFAvcba9NwsG"},"signature":"TsO7tGF/AIBhm4S213srE8FA5YGwGZQ9vnfYigXo2jFkKMlJw7MSUg782vcxc9nHolvWqvKu2NpTnO1SEYgg6w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u4gn3mlyh8p3acv4cnj7gd0tzm44zwpu5j9psp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["corncv4cnj7g"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtVqcUVAGQkiNwNcp0zvcwC+OaG0gyrdBFAvcba9NwsG"},"signature":"TE6Md3TT2+PyjmjdLIEh0S2Z3g5QlXVrkYaTP0kuOl5UkAMY1jCSBy3QWfcYBsc3CJuoSVsujylCCxvted78bg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u4gn3mlyh8p3acv4cnj7gd0tzm44zwpu5j9psp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1339","corncv4cnj7g","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtVqcUVAGQkiNwNcp0zvcwC+OaG0gyrdBFAvcba9NwsG"},"signature":"GYQSYDs+6P8bzExd/vqZuF68F5EM39UPzLUQZMi3XiExDE6or4nsCCqCGLugLhvbiDHFoS5uvSkZf+2sf8Bpng=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1u4gn3mlyh8p3acv4cnj7gd0tzm44zwpu5j9psp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1339","1","1","g1u4gn3mlyh8p3acv4cnj7gd0tzm44zwpu5j9psp"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AtVqcUVAGQkiNwNcp0zvcwC+OaG0gyrdBFAvcba9NwsG"},"signature":"NR/2G/E+qfiGTAT4MjSsq9xwH7au5gY2dViYoJqXJdYuhPv/XRmY3kn2OyaILhrDglDRd+S/0FZDSLQ+4LPhFA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g17gmnlrs9wt8zlyxp6rgr32a4lz2yntm5j5yp6x","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"v90EIc4TulFJ/aH50LWgm4HTLmYCXADQxskdesCUE+8NYxeepZrhMrHO2tkw8YulMyZ2cTk0Tg9NcVVpvDcxQA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17gmnlrs9wt8zlyxp6rgr32a4lz2yntm5j5yp6x","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","ecologyyxp6rgr3",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxRIxbpYhQg+3mPXx8dA7XeUdY2McDL4xcp6Lo5yQ2Qx"},"signature":"DzjOlK5r3XEl2s3Pk2HVnWIMow2Oqlw4rP/zJxqoY5wDBXbwSstpD4SRFuG1VAER9xF3PyYiwmlKAgyhKUuv7g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17gmnlrs9wt8zlyxp6rgr32a4lz2yntm5j5yp6x","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["ecologyyxp6rgr3"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxRIxbpYhQg+3mPXx8dA7XeUdY2McDL4xcp6Lo5yQ2Qx"},"signature":"Ntp1WQmYLbjWZPa9G7QNYJ8ruzF5hoAbsjIp5SHYv+pzjUpgkL2oKfjld3hR4b3/ma54Was/YBzxNQz8wQDKaw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17gmnlrs9wt8zlyxp6rgr32a4lz2yntm5j5yp6x","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1340","ecologyyxp6rgr3","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxRIxbpYhQg+3mPXx8dA7XeUdY2McDL4xcp6Lo5yQ2Qx"},"signature":"IIW+MpXHRXlJH4kxFBmYPjyhMgjPYhccrxpDtg4FaEM2rezpxv9/fQ6qdR5+/Gz151FmhQ0UjjTw0/ii4qFEQQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g17gmnlrs9wt8zlyxp6rgr32a4lz2yntm5j5yp6x","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1340","1","1","g17gmnlrs9wt8zlyxp6rgr32a4lz2yntm5j5yp6x"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxRIxbpYhQg+3mPXx8dA7XeUdY2McDL4xcp6Lo5yQ2Qx"},"signature":"Ar+Uz2hiI23y78LIuP5M6OPvvsWqNB8C4Wkz3lQJMV1k1EjKKPMuQ/FjOhfztJm0tbB/QWRxfynK6cTUIc0v0A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1xrldqsljlet6cym9c9dzsh8rd448y4g450r52d","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"wl/qSF3cjfLodJOMXCfLRwWqpDAxQh4rS9bvi2l3j5IKVCt1jg4to3NnwEBLa+SD5s8cLMukv3n5figL8e1j/w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xrldqsljlet6cym9c9dzsh8rd448y4g450r52d","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","capableym9c9dzs",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Awxat6O7qas1eDpCX/gzjYiaLgfSzhSkUGjo+VSEd4+w"},"signature":"+/dRJhCj2RbTF9bs3nIHrlVneFBuwhnoi1R3EWoiPNVnwNYaHzOZV/LHeXi4K/Xq1uMqod+TAp40PYiaEfhvKw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xrldqsljlet6cym9c9dzsh8rd448y4g450r52d","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["capableym9c9dzs"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Awxat6O7qas1eDpCX/gzjYiaLgfSzhSkUGjo+VSEd4+w"},"signature":"4cJ4uAC8Cd85xHjKTOYX9v7a7qKWy8Szd2ag0iSrVfp+pa0GB2crNW/uEu0+bxNgnnSMUYd/8d+lunmXiDgHdg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xrldqsljlet6cym9c9dzsh8rd448y4g450r52d","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1341","capableym9c9dzs","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Awxat6O7qas1eDpCX/gzjYiaLgfSzhSkUGjo+VSEd4+w"},"signature":"hxE4gtSWa7oNyl0tbJDKD5Vl2KiJoDrH+6dIwadW+gA9qs5kgZSyh5mIEBra/wEWPip1a3OoihW9VZ2iQ1E8aA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xrldqsljlet6cym9c9dzsh8rd448y4g450r52d","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1341","1","1","g1xrldqsljlet6cym9c9dzsh8rd448y4g450r52d"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Awxat6O7qas1eDpCX/gzjYiaLgfSzhSkUGjo+VSEd4+w"},"signature":"TQKvI1okn6CvXs43ohF7xuYHs8NKYJLb78kcV9ykYvkbKkoZk3WCvYoJH7Y9zHHaMkuRI+ppfWSxCiMU+kx47A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1j2ea4l3qrwsu6enk2e72hhfe3eat6t7kw2d5ur","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"e+MadDzGuuWczBnwvAU8TTPM8MVuchnvFvOHKQfp3rcujgr7qYskZe1p2XpU6S/yXDUXhEruxPVKAkOlESIR8g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1j2ea4l3qrwsu6enk2e72hhfe3eat6t7kw2d5ur","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","exileenk2e72h",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Au73skimILlWEeQODiYyoqiIqrJzcYrI5g3kW+XtDlzV"},"signature":"B3UltfTZSejIj0EPneC5en9zGHheyMh7NAzXbSSrJz1KNPTOdJvzSWYJCU6f1FO/7MqV4VrA0oa1xjnHlkogOg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1j2ea4l3qrwsu6enk2e72hhfe3eat6t7kw2d5ur","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["exileenk2e72h"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Au73skimILlWEeQODiYyoqiIqrJzcYrI5g3kW+XtDlzV"},"signature":"kuo8LSEcgOqZOYp4FZcu50PWK8q6o1X3K2Q0mdLjLZ98yhBoUEwFD1ADqWlCTxb8GwRgBRlcba5Qj3ojJkilcA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1j2ea4l3qrwsu6enk2e72hhfe3eat6t7kw2d5ur","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1342","exileenk2e72h","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Au73skimILlWEeQODiYyoqiIqrJzcYrI5g3kW+XtDlzV"},"signature":"/LjyAJKOmPEuZ9LKz4shfUphz8ZPkEZDHS4IbJWk+E87viIIbVDoyIknoe9qSB/5rN4dceXm8wx/Tg4gVTQdIA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1j2ea4l3qrwsu6enk2e72hhfe3eat6t7kw2d5ur","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1342","1","1","g1j2ea4l3qrwsu6enk2e72hhfe3eat6t7kw2d5ur"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Au73skimILlWEeQODiYyoqiIqrJzcYrI5g3kW+XtDlzV"},"signature":"RDC4cJ/4VJ2OTChD2uwgv1pV3AvV1Ixu3U2b1KJrNcNINiAbhk2CUvnf89FpJ6yqqjUuhwRBJMu5NyXabrjYQg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1a080ldpncjwffvl93swdxjj620v6deppe9jhq4","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Rw2a78g0Jd5CtXuty+nhtK1X2UqJiC/AK2vGS1ghAewbjGzRguHSM+sl77eiIxTxR/nPx/2b9obPJHND1Io+Jw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1a080ldpncjwffvl93swdxjj620v6deppe9jhq4","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","poemvl93swdx",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnpisnvP+s1TQmQEr7AkUjFWx/sEZpfUvvwu5Z2zG4Sh"},"signature":"IS72ArqKmSudDXOgSnoHrUQYzIh5ZeN7sa+AHigWvRBggFgLowRbYQdfqNj2DikoN8tYyXAtc7H7rs/meYhCDw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1a080ldpncjwffvl93swdxjj620v6deppe9jhq4","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["poemvl93swdx"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnpisnvP+s1TQmQEr7AkUjFWx/sEZpfUvvwu5Z2zG4Sh"},"signature":"3cucxXI6Z5I/fgPhRgY7ec5hSRGriG/CJBwrQSdinAki3WtrwgzP+2orfBEeWG6Sfq4a9lN2MrGAv9YNsZZBbw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1a080ldpncjwffvl93swdxjj620v6deppe9jhq4","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1343","poemvl93swdx","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnpisnvP+s1TQmQEr7AkUjFWx/sEZpfUvvwu5Z2zG4Sh"},"signature":"hZR+CqujaD+TOMjj6bKtcWSlelZbTW3n18J0NNIcYAcr3FbTnd/viLDKSKMjlaZtbapmax/ML6l4IQmervQv2A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1a080ldpncjwffvl93swdxjj620v6deppe9jhq4","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1343","1","1","g1a080ldpncjwffvl93swdxjj620v6deppe9jhq4"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnpisnvP+s1TQmQEr7AkUjFWx/sEZpfUvvwu5Z2zG4Sh"},"signature":"VeweL2hwFdNHL3xxItK49bSuuWZS/1KWXzpa9q4a+URSAKvsnOvpcIA6qiQwsK22h6rR+93hLbF5/xvcRNnLMA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g155xf4k953dpzwmkjyh6pmgu9qc07mjgygezgnz","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"AO0q8gOC+o9ZDdkTA8JkygKaDgfmaggjxD9Ou/nTggkMVJNGhs6TvltttTavfJAu8/qyHGj/Lniu9608jWJvGA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g155xf4k953dpzwmkjyh6pmgu9qc07mjgygezgnz","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","justmkjyh6pm",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Al+Pu3y8POaLBh+bRaMAZ/z8AXKKRcOJvQQ+ibKMRhlM"},"signature":"YAG32w6ZK0CQ68aZGs3/E2xbfxWMEdIhMAOrPCkQ674awXf27alIMp+BHSYkSOM8yg8smwUR5jicrEMaYtbvWA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g155xf4k953dpzwmkjyh6pmgu9qc07mjgygezgnz","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["justmkjyh6pm"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Al+Pu3y8POaLBh+bRaMAZ/z8AXKKRcOJvQQ+ibKMRhlM"},"signature":"oF1GbWWcWKSkfA0t1DHPGm5COn7h0Z6ZAZpz6HLtoZAp6Dc1DB4tHkwWLuRsYY/cp6K8lFMNC/F1vSgkBFPgtA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g155xf4k953dpzwmkjyh6pmgu9qc07mjgygezgnz","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1344","justmkjyh6pm","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Al+Pu3y8POaLBh+bRaMAZ/z8AXKKRcOJvQQ+ibKMRhlM"},"signature":"LFrn8rp8ce74ouX91rOM2abritvGKZIG6PHQdDbQNS5hKsgyZa1pL/oimY7t7qHFQZDuaYl+YumqaWlWfa04rw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g155xf4k953dpzwmkjyh6pmgu9qc07mjgygezgnz","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1344","1","1","g155xf4k953dpzwmkjyh6pmgu9qc07mjgygezgnz"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Al+Pu3y8POaLBh+bRaMAZ/z8AXKKRcOJvQQ+ibKMRhlM"},"signature":"Q42UteIN5DJ863bRkV/nPr9XWGdJnfKFgZfTi6deJt4Mf+tJnrUoS+96DP6bD75V2FSCa/uPxHr2EmQRnV0C+Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1suxlzw3p8lkqf3zqtan9p396rtjuzeqpw5w9la","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Ujf6+WTm+KtpfrCruSZa7emeNeAHHpU+rrAR8mBQjCA2z7JLzsQjWhtwy6C54wJtFo3MXmrfvRmhvzTJd0Cd/Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1suxlzw3p8lkqf3zqtan9p396rtjuzeqpw5w9la","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","spot3zqtan9p",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyYBvWNp+un5DlFhfhXUbxMenibev7fM/wDm/igqvTQ4"},"signature":"ZxKHhxPKm8X1tFCcYTNQ3NG4Y3Asevd+D/r31KXwSftoL3HkqVz9JRfkag/UPNU31AdMojQ4OomVBBVDiQNuqg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1suxlzw3p8lkqf3zqtan9p396rtjuzeqpw5w9la","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["spot3zqtan9p"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyYBvWNp+un5DlFhfhXUbxMenibev7fM/wDm/igqvTQ4"},"signature":"t1ypWgUw0qo/PuFvlHAXh61HivaH2rNDkKWatePC9MZnIjZ55WmIIELV+J9FA69BQr3G7ZGEKXgKLL7Nzt3t/A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1suxlzw3p8lkqf3zqtan9p396rtjuzeqpw5w9la","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1345","spot3zqtan9p","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyYBvWNp+un5DlFhfhXUbxMenibev7fM/wDm/igqvTQ4"},"signature":"5qZ9OaGvxK1ZemXwB1XmuErhKt4UQcY7Jur5p41uoHpDeC7735oqDUzo/4ocbDyqyZo9JuTVYZoV7HLph2YMcg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1suxlzw3p8lkqf3zqtan9p396rtjuzeqpw5w9la","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1345","1","1","g1suxlzw3p8lkqf3zqtan9p396rtjuzeqpw5w9la"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyYBvWNp+un5DlFhfhXUbxMenibev7fM/wDm/igqvTQ4"},"signature":"7kkNjMkSA3wLbFgkNhpxMg0/TfwUNsErLqrNP1784q1b92kYquJNoI2sezY3ybBDgAHFu4RrWvzlR/8ZQlrLPg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g18rylnts40q4g5jpexy062606g9vtac4zdfr4h9","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"kQqE9bx1khx4LPz2oneZWLI9dbh+FWNZUzBqCurxrbgKpYM4puWaLQ+fIT1UyXoqcvpfJAODr1JKCnmn4uv1jg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18rylnts40q4g5jpexy062606g9vtac4zdfr4h9","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","traveljpexy062",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4za3FuGZxXXrZgvOmkBRS5Oi9w4SKH9Y0OqVqmP8SOA"},"signature":"nL0vvtCnD0sEwJO1JvPQ8eoD3wHN44xT9lrALDGxQtxSjdekVwmE6OtdxvZ6AjtDvafBkC6W/GmHUcGvz9EwRg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18rylnts40q4g5jpexy062606g9vtac4zdfr4h9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["traveljpexy062"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4za3FuGZxXXrZgvOmkBRS5Oi9w4SKH9Y0OqVqmP8SOA"},"signature":"9CCuuI5qT6TmNZ82VKD9e77a3ZUgZ63dp8sTtLony91o5VEzYwIIIT6WvEA0k53InQ6twNULlzhWEv2EUf1bAA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18rylnts40q4g5jpexy062606g9vtac4zdfr4h9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1346","traveljpexy062","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4za3FuGZxXXrZgvOmkBRS5Oi9w4SKH9Y0OqVqmP8SOA"},"signature":"etwKsdJybBtXFTJefV06ZPdPbyVRljQbGoMwcqCCjc42L0Gi0HToTiid0l1YLLn4LQxhy3L1ECoNQbuRaU1YIw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g18rylnts40q4g5jpexy062606g9vtac4zdfr4h9","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1346","1","1","g18rylnts40q4g5jpexy062606g9vtac4zdfr4h9"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4za3FuGZxXXrZgvOmkBRS5Oi9w4SKH9Y0OqVqmP8SOA"},"signature":"OUf2ZBO/heT8DLSU/OESAYhaa/QjwEfgf8TMEHF2Rf1iQHqccHrMafChUGurXm/1WxeyDu/xC7n+BlL0IILt1g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1cf9cezlnrjlc0dc4e7jcr2va97jhgzkgx0t6wd","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"F8tSI4KL2rn1OBa9jB0zW70rgEl8fiI4cjSsOgCqf0IUYSAY3U4KFYFFaGJ2FJY/tM0/vgW48zRcXesxok11+w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1cf9cezlnrjlc0dc4e7jcr2va97jhgzkgx0t6wd","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","zerodc4e7jcr",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0Pm2agMv9WzHOGqahsw25m3shyPfE/Yzd25JyW1aDhp"},"signature":"Y7LHaOTlP/Dspw7PyemOYs3RjQrgikwxNzExrb/qQYMmKjb3QCXecAfqgzxjEvMdx6E1KZoytaB+6p1qh4ziJg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1cf9cezlnrjlc0dc4e7jcr2va97jhgzkgx0t6wd","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["zerodc4e7jcr"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0Pm2agMv9WzHOGqahsw25m3shyPfE/Yzd25JyW1aDhp"},"signature":"1H8BM8O4+5p2NXJjTwRPkLyk3Qt88BXrRcpAmtIDvKpiP5WgjRWCQZEZpiTv7VolDa3Dsi+IoRKHG2ysHeMl9A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1cf9cezlnrjlc0dc4e7jcr2va97jhgzkgx0t6wd","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1347","zerodc4e7jcr","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0Pm2agMv9WzHOGqahsw25m3shyPfE/Yzd25JyW1aDhp"},"signature":"rxda99/c4BU6PuXyNd9YbR2LPC+ph+eAhxAXyTWOtE9d2YKXH/fN6Qghb/4eqexc0DMp9pQoEv6GYyZMG1bWlw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1cf9cezlnrjlc0dc4e7jcr2va97jhgzkgx0t6wd","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1347","1","1","g1cf9cezlnrjlc0dc4e7jcr2va97jhgzkgx0t6wd"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0Pm2agMv9WzHOGqahsw25m3shyPfE/Yzd25JyW1aDhp"},"signature":"wpnMyiL/ZWxTF8jpNt36Y/RAFW9w4arFt1mjKeSD0FQw4Jpedo6BWj6jhlm+sEvE1LaTn1Jtm48I+Ll51yJdXA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1l4ny6yv0gjklfnw5gkzwffsylzu0gt23w56htn","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"QtY8KtuoAOEjqGynB1w3F2NqFYk1OfZCwN/3M2XBSKIE2z1pr3lQVXlGNoKO3qoEs2uYTlx/hSz6q4eDAobSIw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1l4ny6yv0gjklfnw5gkzwffsylzu0gt23w56htn","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","scoutnw5gkzwf",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8CniCsjlP9VAKcmelB+3QtYKFojiqWa+nnMzIkhP3LU"},"signature":"yWDsp/WKd4tH87LWmP0WjVcg8GU1aRDwdaf0OCutk0JzQ+x7ITIDOrhWeJOGOrsfccO0FETlTLXm4+wORocY4Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1l4ny6yv0gjklfnw5gkzwffsylzu0gt23w56htn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["scoutnw5gkzwf"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8CniCsjlP9VAKcmelB+3QtYKFojiqWa+nnMzIkhP3LU"},"signature":"SOA2CC8M3Novj1BI9qQED9KgqiEYF6eL1z4l+7KlxHF+J/8hFL9Bg5mdDBs3YBGo/aEuBd+8h7tfnRO3gLOzXA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1l4ny6yv0gjklfnw5gkzwffsylzu0gt23w56htn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1348","scoutnw5gkzwf","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8CniCsjlP9VAKcmelB+3QtYKFojiqWa+nnMzIkhP3LU"},"signature":"JD47xgDKkWXXeEXfgKPgGlguaubkn2UmS9uNmQr6EZ8C1IF7b7DZDNTvYy1xxWJn24T5OXNClSgLZpos4zFQBg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1l4ny6yv0gjklfnw5gkzwffsylzu0gt23w56htn","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1348","1","1","g1l4ny6yv0gjklfnw5gkzwffsylzu0gt23w56htn"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A8CniCsjlP9VAKcmelB+3QtYKFojiqWa+nnMzIkhP3LU"},"signature":"NZZlj0G3MAdjfK++dWYBheRiHYokVrTndXnX2kfbqt5i2L6qQcS9AvIe4SykKfKxiNxoTc+4u99JZLMJFY3wGA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g159jd42tn9hqqj095s6mykt4cc5nqrlg4d7uyjx","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ASJ7llriQkVTZbGcJXInF2m7uIilvyrUfIyywKOioEcX81G8Dwchd3+6vXkp4bj35HPFgLOuCZ5yOkp8GQq39w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g159jd42tn9hqqj095s6mykt4cc5nqrlg4d7uyjx","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","museum095s6myk",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A455EA654ipEc4mVIdIF5DwAAbZA4zcvMfbzTUEsVzjr"},"signature":"FSnQTiqSF69RURvd9n/zoUY2epcVZhSnZ0XgvUiCXfRqvALS6gdBabtRv2dNY34TSWaGsslVnf/K3gCy3bKiig=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g159jd42tn9hqqj095s6mykt4cc5nqrlg4d7uyjx","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["museum095s6myk"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A455EA654ipEc4mVIdIF5DwAAbZA4zcvMfbzTUEsVzjr"},"signature":"Mr3bm9ZXFN30lL9Eri9RzYxpSjFbj0wstjcTT+c6ggcZmipQHUqcmliqBMeO6ONy2hnkAUeO/Vj5EyQc5nEWEQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g159jd42tn9hqqj095s6mykt4cc5nqrlg4d7uyjx","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1349","museum095s6myk","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A455EA654ipEc4mVIdIF5DwAAbZA4zcvMfbzTUEsVzjr"},"signature":"lWEiT3DQvW+nRpCfHa58X0Xo323CkQeOHKjF0U9uotcZEEMFiyJTveO/jp13H352TGmOO9GukdpPwr8SdBojcg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g159jd42tn9hqqj095s6mykt4cc5nqrlg4d7uyjx","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1349","1","1","g159jd42tn9hqqj095s6mykt4cc5nqrlg4d7uyjx"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A455EA654ipEc4mVIdIF5DwAAbZA4zcvMfbzTUEsVzjr"},"signature":"mjwC3jQCTpi50LFe+hKpC8OBRI6+HQS2p46Nft3tyatkxSzCxbK0Px9Y0rdxuX9BtV34V2+NowwBBGxhDvYDKA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g149e2qyr3gpd56f75sgxa52235ywjfwpqu396pm","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"LZ6Bbr6lkjJg0SvIkmSm1j80IVv+JuY+Ojfe+dUPz3cTKJpoSkqXawutVdvHAkRECPwU55k3l42PnjNbFBujZw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g149e2qyr3gpd56f75sgxa52235ywjfwpqu396pm","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","cricketf75sgxa5",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5G/mymF70wEOXTjKvZnuxZZNAFaZ1F8yU+OP++hXnJI"},"signature":"3p70UXqV2PpY5Nnxl+SYo6AEvGwbOPOKuqY5RDI5WdkKAyzXltGSEzwYNbprfrm+6hfpw0gQ5/U7GvWym0OYIA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g149e2qyr3gpd56f75sgxa52235ywjfwpqu396pm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["cricketf75sgxa5"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5G/mymF70wEOXTjKvZnuxZZNAFaZ1F8yU+OP++hXnJI"},"signature":"b+dggJYhXVBL+gogL7+BfTQmwl1yi+SqL47/Tmpe43dgFMB7OB2wgwJl0u44PU2lQEpwQy/Hs+qFAf2888tV8g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g149e2qyr3gpd56f75sgxa52235ywjfwpqu396pm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1350","cricketf75sgxa5","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5G/mymF70wEOXTjKvZnuxZZNAFaZ1F8yU+OP++hXnJI"},"signature":"EoiVAYKbTcYE0DDct4vv7CFlHYJgTIpfjG8ObW/mJmxHfKR87uF5e/RivBpHlG+EtshSxZn5AmI1nZD07yJQgQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g149e2qyr3gpd56f75sgxa52235ywjfwpqu396pm","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1350","1","1","g149e2qyr3gpd56f75sgxa52235ywjfwpqu396pm"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5G/mymF70wEOXTjKvZnuxZZNAFaZ1F8yU+OP++hXnJI"},"signature":"BjRWvYoRBtewTvmGcKoKaGGDKvb3AK7zQjSbjlyDqlhTdgge1i1wT4DNqvifGWM/7+PQsVeu3wcT3EQm4VjdUA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1my6lskes77maq0qnvaczg3da5sas2qn9eg0rre","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"TqRPmtADskRppiqRoDMXOWRLMPycB5Sp6e2jkNsH2OYRRf+uyQOrshmhuzQf0Hp7wG84k2QpZEcgEDV/bQfB8Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1my6lskes77maq0qnvaczg3da5sas2qn9eg0rre","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","caution0qnvaczg",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuC7yKnAyiWDF6PY4qX+d4/6XYxAwGjKuOmQfiLbzhNq"},"signature":"1qOVsVxHXm/Iigv3b/Sw5JZ3xzDlSTjyksl9pMsHnG1htcrMdgCNMiHiV77ZMORqn3B5Yq0buxW6IEuQItvTag=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1my6lskes77maq0qnvaczg3da5sas2qn9eg0rre","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["caution0qnvaczg"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuC7yKnAyiWDF6PY4qX+d4/6XYxAwGjKuOmQfiLbzhNq"},"signature":"m/4AmpfAplH1tm4AXoQEzr1Nw/NL0dkB1kxR3ZCyK0YaP85eQYMTcrx9C4q73bxCCE6lMxJavKTCtFxhWEjtOA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1my6lskes77maq0qnvaczg3da5sas2qn9eg0rre","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1351","caution0qnvaczg","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuC7yKnAyiWDF6PY4qX+d4/6XYxAwGjKuOmQfiLbzhNq"},"signature":"GqAc3kFDhnKdgH2Y+Hm6XOnCD+ya5vXbRUYYEZJlazYldmLDaA8/wf3U6K8PC3etDGM8nGgPzya2lmRh8O319w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1my6lskes77maq0qnvaczg3da5sas2qn9eg0rre","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1351","1","1","g1my6lskes77maq0qnvaczg3da5sas2qn9eg0rre"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AuC7yKnAyiWDF6PY4qX+d4/6XYxAwGjKuOmQfiLbzhNq"},"signature":"Ik/Y0FKsoQXBCmPubqzUhjGFhyrC8XhMbaQVoATYiHJA4EBea2soUePjVN1IhPZHHfOxp4qP0+GZ5inKhXYBSw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g103kmgm67t840tjmqhe2pm0qu47rs8emj83ch7c","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"PZuORkTfUAwdg5hAAtyqvdm4GPXm2KKEut10qque/XEgpHuBvf1OIp4GasHSqdwAH2SLgVsny3MEn1vJPCa5KQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g103kmgm67t840tjmqhe2pm0qu47rs8emj83ch7c","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","offjmqhe2pm",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwD97wgPgL2DNvNBk/In2pmslCyJx/a5CTsG5pcQBkVI"},"signature":"UDtqkYH60ARNKNEcTkkmcLi/osq5RE2meAkXr1tJCGAt038SYE8RvLVRW2o49950yhU6fvOeQTafoaQGHghHYw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g103kmgm67t840tjmqhe2pm0qu47rs8emj83ch7c","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["offjmqhe2pm"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwD97wgPgL2DNvNBk/In2pmslCyJx/a5CTsG5pcQBkVI"},"signature":"zX9qIS5C61wde5nfqmdu8XoZSxwh9CU6VWHTQYPId/ATMmhPb2eoI1hvrI5+c9cFn2tY5u0D/Q79PyQYqz4ciQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g103kmgm67t840tjmqhe2pm0qu47rs8emj83ch7c","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1352","offjmqhe2pm","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwD97wgPgL2DNvNBk/In2pmslCyJx/a5CTsG5pcQBkVI"},"signature":"62Kg2iy3N7oAnBxrr3TkR4pPyjlmZ00Abp3O0IvLyPkqypHSvQ2Ze7lHz87zIrPkLcGf5/898DhdbOkcRvx2tw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g103kmgm67t840tjmqhe2pm0qu47rs8emj83ch7c","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1352","1","1","g103kmgm67t840tjmqhe2pm0qu47rs8emj83ch7c"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwD97wgPgL2DNvNBk/In2pmslCyJx/a5CTsG5pcQBkVI"},"signature":"0Y8nJBkDKVzaI5+pvtxY4iiKcI4+lPz+l3TlTGATpvV4gQjwoUTIoJfDgKyibTkLKlJJVtAx10vlB/elFqlTqg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1vv4azkx5qcdndzqu9tmyu678vac9xkujc2zsxd","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"i3bl9S/bSx26Vz2lhZAmfa2unn47sJHFvHg/Viegws8bYCm1/uu+/iWBUQu1xq3mmRGfeh+oGKwpjQHMdE9pGw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vv4azkx5qcdndzqu9tmyu678vac9xkujc2zsxd","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","skinzqu9tmyu",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlaAAW9pfGiCul4UuegHF0ojyPGmYVHZjXzpQZWqhGB/"},"signature":"MGvvewdvGYWNdQIHNKY7ebmf1tO7Gv3cgwpgJ6kzIy9M3ibfwVMy01PSBeyJP3WAEidM2j54qimmLnS3rDTwXA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vv4azkx5qcdndzqu9tmyu678vac9xkujc2zsxd","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["skinzqu9tmyu"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlaAAW9pfGiCul4UuegHF0ojyPGmYVHZjXzpQZWqhGB/"},"signature":"4ItS1bjHcft41Za5Z1LUIWOwkuCyN77uenNRyS3tu28JrMeM0MTGjwV8eBCEymVSF3BYn2yXMz/fedQO1vagqQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vv4azkx5qcdndzqu9tmyu678vac9xkujc2zsxd","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1353","skinzqu9tmyu","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlaAAW9pfGiCul4UuegHF0ojyPGmYVHZjXzpQZWqhGB/"},"signature":"F6frcKxo+VO9J15sJ3u2YTaqrYYdN5zGzjrCYIyp/vBnjDZd6MKaGLHD3FQXtDfGaFw7uKI9cPp5sQkDcT7rNg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1vv4azkx5qcdndzqu9tmyu678vac9xkujc2zsxd","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1353","1","1","g1vv4azkx5qcdndzqu9tmyu678vac9xkujc2zsxd"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlaAAW9pfGiCul4UuegHF0ojyPGmYVHZjXzpQZWqhGB/"},"signature":"W7n6R9OHMNxr/IcW3zcmPEV69tAkenua7W4j66eykVA2hbKjZK6fL/o+iywKsFrDiA6TLBZdlx9u4CoiBBQYAQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1xu7xaet7arlfwyrzs8wxv3u63hkamj56c50vjw","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"A1JRejNYs/0N9tYPzZjdNq4DRN2zdZccxMu1IXdS8YgBWjNNIuQhSW3XAo0W69vvFlQ8lyn/o73/qy59HS7YaA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xu7xaet7arlfwyrzs8wxv3u63hkamj56c50vjw","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","writeyrzs8wxv",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0qAYwR8CH0HQiAzIGSkt4Tyovn4e5FaSVjLkp/Cubfs"},"signature":"J0b5B+tB4hz7DtT8vgP4ID+4WpDbAV8iYkdhgCRhBFBA5ohVtDmMBDUOfsCbDHkeOVq1A+vH3WVwgxYPd71i1g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xu7xaet7arlfwyrzs8wxv3u63hkamj56c50vjw","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["writeyrzs8wxv"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0qAYwR8CH0HQiAzIGSkt4Tyovn4e5FaSVjLkp/Cubfs"},"signature":"Wjl/+HLB8UZv7vWAmtnLps166DPhnwTwsFNIWbwI4n0cMbcfki8vubLe2GmP+Szb1iRMQwc3Rjf1Rj5j5+Gc5Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xu7xaet7arlfwyrzs8wxv3u63hkamj56c50vjw","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1354","writeyrzs8wxv","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0qAYwR8CH0HQiAzIGSkt4Tyovn4e5FaSVjLkp/Cubfs"},"signature":"6lwn/qGpmL1O897pcUk6D15PqneNGPh+1kKwNr5x69ECiEmvhtCAPpoXFZeDjM14ZgnuZvK01FoVhQwR+dizfQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1xu7xaet7arlfwyrzs8wxv3u63hkamj56c50vjw","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1354","1","1","g1xu7xaet7arlfwyrzs8wxv3u63hkamj56c50vjw"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0qAYwR8CH0HQiAzIGSkt4Tyovn4e5FaSVjLkp/Cubfs"},"signature":"qV5C2Y/11EmQADaMbplP7dOwUOuw6vVFEfWdolkd3Hc6Xs0XQlMeZF7dW7kK84TnAmksoFleLWy+gr4MuRC/sQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g12qvvrz45xluke5ufq9elpaq8ht3jgsr6lup2ey","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ML3MdKrdIwNDWPtLUSG+URyhAvHNTx4n3Vr4+ZlquKcIRLbSOQG78FwonNgqcfwqtFt68ooOy9M8NWr921UgZQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12qvvrz45xluke5ufq9elpaq8ht3jgsr6lup2ey","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","coast5ufq9elp",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9KkWnSGJ9nVexJrLyuNtzyAyFWdTZIEdJlEa5yKgo27"},"signature":"6aFVVQAvoGMIbsXb0Njlp9a004kiGXGLiLVpGJ2FAa4SN1mTSxziBN9sKTg9vQ4iNipm2vs4lKg4+cBwqnvXRw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12qvvrz45xluke5ufq9elpaq8ht3jgsr6lup2ey","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["coast5ufq9elp"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9KkWnSGJ9nVexJrLyuNtzyAyFWdTZIEdJlEa5yKgo27"},"signature":"RnFCh4LdUw2MLHWhJYuas/ir7W7pvYO4p22e5wBuTus7JGq+MYXAS6EeQ3FPtFXo3/vS90T2nUyYBfDAdTR1ew=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12qvvrz45xluke5ufq9elpaq8ht3jgsr6lup2ey","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1355","coast5ufq9elp","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9KkWnSGJ9nVexJrLyuNtzyAyFWdTZIEdJlEa5yKgo27"},"signature":"wbRaUXDvkh1eEG9RRMPByupmsz4Y8pQq0b4GDNer+xlG0ofOq2uzEKv1fNeJN4oMKTAEFUWp8lcsygELiQQW+A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g12qvvrz45xluke5ufq9elpaq8ht3jgsr6lup2ey","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1355","1","1","g12qvvrz45xluke5ufq9elpaq8ht3jgsr6lup2ey"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A9KkWnSGJ9nVexJrLyuNtzyAyFWdTZIEdJlEa5yKgo27"},"signature":"3hA/Ci2sWl4xlWNNMPr8GBUQiYGCQM052jyJ7H9ataQgthjw2HWBmVo4Q3XZHYGdA6Rl29EbbC8CJvFeJgkQHg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g19qy6eeuft75ce734z9wjedu4env2uzjmu0ruuu","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"XQpZ9LEsG/fpKfax3HUhaMtla+/SYlI9xj4HsZ7iCux2CEMiNXT441aWNIr72Jy5ikL0Is8qOViEapEcp7kfkg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19qy6eeuft75ce734z9wjedu4env2uzjmu0ruuu","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","scan734z9wje",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aq/c4r3unU/1OE1yB6oAE4OIrgrIslGB3gQTAHhg2RcE"},"signature":"2FDvb94Bca6Q1brbYlfMk62IOapk8anKtNu67fwkeNdfl9AOO6KaVjQ+zqrzORvc4B5i2gzpUNokduj7hXlTyw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19qy6eeuft75ce734z9wjedu4env2uzjmu0ruuu","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["scan734z9wje"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aq/c4r3unU/1OE1yB6oAE4OIrgrIslGB3gQTAHhg2RcE"},"signature":"lxfF+92KzD3FY3HL4VTg2cqW69kjtWlxU+QNoRwOKGNPRgqkNlOR7Uoze0FLRovNsT9Bz0OSNLOvo+HVoJpLog=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19qy6eeuft75ce734z9wjedu4env2uzjmu0ruuu","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1356","scan734z9wje","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aq/c4r3unU/1OE1yB6oAE4OIrgrIslGB3gQTAHhg2RcE"},"signature":"sHjtl/HSYdtXHf+9tgkcynprJ2w7dkTsV4ekrUzSCbE2bYj38/9LPFfn/Xe6dVhm1fDMlz59u4K1FB/lnX6DYA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g19qy6eeuft75ce734z9wjedu4env2uzjmu0ruuu","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1356","1","1","g19qy6eeuft75ce734z9wjedu4env2uzjmu0ruuu"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Aq/c4r3unU/1OE1yB6oAE4OIrgrIslGB3gQTAHhg2RcE"},"signature":"3fcPtMbu8pL/RNtq1bt4qUNnN2Ix/bPdY36R2+513fJGChOPnAZJL2BG0jpyk0DitCtflEzzBiW8yFV8yxm5DA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g16yl7lp5574pc66txwz30a3wd24msl3ndwlc6eu","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"ykLDbe9enUqK2FiQsfps5ldykFRk5EXGslqpjgaQu+p1M7StY19wpuYKZsWdvosgh+XwO0HTwuBqEJdsM81axQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16yl7lp5574pc66txwz30a3wd24msl3ndwlc6eu","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","such6txwz30a",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4vaNuvc1tiCx5D4RFuVnNArm4onLHtgsss95wn5Qvcb"},"signature":"pRKHRkPgPI4OjEy8FvDyxqHuQwOvtqiKYl7UCvuEZ7ttGealBuJIIbZyVj6o8mEdRmt7IuU5IlzmYWSwE9p7wA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16yl7lp5574pc66txwz30a3wd24msl3ndwlc6eu","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["such6txwz30a"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4vaNuvc1tiCx5D4RFuVnNArm4onLHtgsss95wn5Qvcb"},"signature":"jOUv2U54aB1mtmGmhn+4J7+vL56hAikrrtvBx8CiJhNMvLpxF7rScma8Ww0Q+scPAw6MVuhLpBoOFcdTI5K1Iw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16yl7lp5574pc66txwz30a3wd24msl3ndwlc6eu","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1357","such6txwz30a","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4vaNuvc1tiCx5D4RFuVnNArm4onLHtgsss95wn5Qvcb"},"signature":"jXRheni6XGDBqSUU+xMV2h3HlW6721MUB/m0jhYPSPFiCuY49rpAPn1DXopk6lCvecKosgLx+N5WA7ZHQIkg6A=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16yl7lp5574pc66txwz30a3wd24msl3ndwlc6eu","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1357","1","1","g16yl7lp5574pc66txwz30a3wd24msl3ndwlc6eu"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4vaNuvc1tiCx5D4RFuVnNArm4onLHtgsss95wn5Qvcb"},"signature":"4MqgX7Rjn0I/7RnrkDsp5vHaCeTMUU13O5z2hLC6LZoN4e/2O2p0dVYPMGtMrRY2dbota5BK+lQ2lQ12Qpob0g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1gg23unnnyms2lgy6utnje0pfy5v5lrvycv4ecp","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"Ugl/+lFqkLh25Wu/5vcxUD2ep11jzmp6ETKgJOhRgRFgmsZqVbRfzMaHXFI/PLUJezM9NG0mrlwwpwXJ1l4rZA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gg23unnnyms2lgy6utnje0pfy5v5lrvycv4ecp","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","runwaygy6utnje",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av68Ohx2aLeVUQ7JgWYHNC4G5eqaBKga52jKI1FdE75+"},"signature":"rvJbncyM8/NO6lnclW+2i4jBYQ8eG7hZtbeNGsTbddpU0rh58w9S4h3iyukbjxr/QFCgJkVEP295D0Poha/4kQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gg23unnnyms2lgy6utnje0pfy5v5lrvycv4ecp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["runwaygy6utnje"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av68Ohx2aLeVUQ7JgWYHNC4G5eqaBKga52jKI1FdE75+"},"signature":"EWim9eygpG0JC+1O+vtCsLdUjLr2khowKt8hRiUdMqRWjABt3ry6Goi6Q8ucAJk7jA4K9RfdfSAYzqUkWkH1GQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gg23unnnyms2lgy6utnje0pfy5v5lrvycv4ecp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1358","runwaygy6utnje","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av68Ohx2aLeVUQ7JgWYHNC4G5eqaBKga52jKI1FdE75+"},"signature":"fks18UW1WJvzv1/qY+kat4yq9N5pQAn38kHOjm4SgTNPNNGhu0kXy6FvwqLRFy4UX3R1waRYojU2UDdieaNG1Q=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1gg23unnnyms2lgy6utnje0pfy5v5lrvycv4ecp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1358","1","1","g1gg23unnnyms2lgy6utnje0pfy5v5lrvycv4ecp"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Av68Ohx2aLeVUQ7JgWYHNC4G5eqaBKga52jKI1FdE75+"},"signature":"pl/BbawRDK4t1Qk3FlZAP5H6emphx+GJYkS6HEWb7v8zZHR6+pYhXlpRfpOWfT/Kd8PNTbn8e7HbmhtxJzdjRA=="}],"memo":""}
{"msg":[{"@type":"/bank.MsgSend","from_address":"g122n67es9vzs0rmharsggfr4sdkd45aysnuzf7m","to_address":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","amount":"12000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ArADVPfUBrZVmlqmZWPWucRTe9gkJ9wJFyTszJoU5Ebi"},"signature":"o+hS2Pcwb+PnS6mdDz2LnJtXo0oXRx3TwLDJz1K4RPhWsQtobTynkxdi8NkGGWgnm+9tu2Q08eSZxAzNPn1qJw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1msunflj7ljm5wvznc4w9lghe8z9q0js2xah4yp","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"he/1y3n/g90WIczn4w4OpQhnSkNVVMLgH7tE41zVqyVHvzfwMwEhKDorIcA0itFJF8iw0wTNLgs0DgnfyoERiw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","send":"","pkg_path":"gno.land/r/demo/tong","func":"Transfer","args":["g122n67es9vzs0rmharsggfr4sdkd45aysnuzf7m","2"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A09whvkfsR4pCSEYMMt/do4mD9Zf76Dzs9/kOirITiy0"},"signature":"Q7Rr1gtPNo3wJSgzodyfpsRTOtd52VdoR7oc99Gy8FgOCEHAUeBa6aysfd7Dkxf68XWjn7wD7WIV2vWd4TawDA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1msunflj7ljm5wvznc4w9lghe8z9q0js2xah4yp","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","visitvznc4w9l",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7B+Z8Picfc0Ql2RQZoQfo/XRg9r/rNNBU3f4cg0NSBz"},"signature":"3rxj+rk+LjT3UWY4h68QaSBdpQ/n4bNfSj9kHEgx9S8wyKBhDG9+oYETsvZ/cZ/VAcZBfJm71ErQVEE5xEfwqg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1msunflj7ljm5wvznc4w9lghe8z9q0js2xah4yp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["visitvznc4w9l"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7B+Z8Picfc0Ql2RQZoQfo/XRg9r/rNNBU3f4cg0NSBz"},"signature":"axs3tDysr6xvCoJdWtS+RZur27ZSzeqL7axp7Wx0pJ8fZ+vjOgkrgGqpYX0+wd8SGmaQ0QZ5BJCCFnkB4DxlHw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1msunflj7ljm5wvznc4w9lghe8z9q0js2xah4yp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1359","visitvznc4w9l","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7B+Z8Picfc0Ql2RQZoQfo/XRg9r/rNNBU3f4cg0NSBz"},"signature":"RQRSRe5I+T2Y85v88HvZKlq7XpB97sEc0YNl0N9EYM1/B1BIdbwoD8rp/u60cd9BoWmHcAPn7meKc1zKMR6ijw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1msunflj7ljm5wvznc4w9lghe8z9q0js2xah4yp","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1359","1","1","g1msunflj7ljm5wvznc4w9lghe8z9q0js2xah4yp"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7B+Z8Picfc0Ql2RQZoQfo/XRg9r/rNNBU3f4cg0NSBz"},"signature":"Ipgs9JMj1P3cPhXeIcQYvRFnyji9xhLIaTP6PhlK3lp6ilipkYiTSfwGmsC810hZYr6UWYLA5WJqf7tHv+u9wg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1zntgluqmd8npxcfgdfkt3c7d0kt5v2vmrpf66u","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"simoYlcIlkR2ZusBxE5Lhn1zd+Z9LIgbOE2xCH0ZQxQ7JXyvUSlUnb/UCvxyPSPHt2D6dooagfwIWwIIUuQ5Nw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1zntgluqmd8npxcfgdfkt3c7d0kt5v2vmrpf66u","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","suspectcfgdfkt3",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0kWVus36uWfHn+0fho2U087oTz024KOiy3qZVBmlQbF"},"signature":"xVpgVi9s5XOxrF7q2+99OU5pM25dbhB5e6UDsBh0Dwwg/u/PS8GCiZMruU5NmodfsjY4P8UAf50XtRegf8F2LA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1zntgluqmd8npxcfgdfkt3c7d0kt5v2vmrpf66u","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["suspectcfgdfkt3"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0kWVus36uWfHn+0fho2U087oTz024KOiy3qZVBmlQbF"},"signature":"sb3+3X8Go7DmDmtbtXcuswQjrObtpKqmtBOab1BfuIVJYf1a64jV7r8r2kaW3NDnRjh3QCgTp1kmf5auSKgg0g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1zntgluqmd8npxcfgdfkt3c7d0kt5v2vmrpf66u","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1360","suspectcfgdfkt3","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0kWVus36uWfHn+0fho2U087oTz024KOiy3qZVBmlQbF"},"signature":"LM9DqN6+IdhHMsqXWK0Kvrn+0mw9IjnOd4vBkX9QZtVeLlxrTdBl2XLTU8AWtqc3+WG5zxP+IVgs4I41V8OsPA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1zntgluqmd8npxcfgdfkt3c7d0kt5v2vmrpf66u","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1360","1","1","g1zntgluqmd8npxcfgdfkt3c7d0kt5v2vmrpf66u"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A0kWVus36uWfHn+0fho2U087oTz024KOiy3qZVBmlQbF"},"signature":"43/ualYYM3NWOO8doZs5gBB2fdtHdCp/b2FDbgCZeKxG/TqGUUgI9wFs/hbnDHt4khcSitIJBDEcw25xhFvlGQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1tfn3wk223raqlp2u7yzke2m0ygslyytcefu5cf","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"M3vsHi5+SbCwfjst4ZKccpJqy6kDVZ6TGcQgVaIdY4FCIrQP27h4K3jHAVJgiU45mcOiB3CnzHZt0wOhtgruLw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1tfn3wk223raqlp2u7yzke2m0ygslyytcefu5cf","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","supremep2u7yzke",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7esdqoL/gfRP5rvydtXJZpsHWxEftIVFwNjKHG1+QiY"},"signature":"q7vbixPuS0a5dCwBYSmYaOHr+FyjusoTARSis7ZAuTcUpxbw/ndR9KgB8icL4cIlgpT9zuvdzVDgRsobnWJb1g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1tfn3wk223raqlp2u7yzke2m0ygslyytcefu5cf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["supremep2u7yzke"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7esdqoL/gfRP5rvydtXJZpsHWxEftIVFwNjKHG1+QiY"},"signature":"ohFd3TAy9lxUI8NEcPrxT44uu6o4CeVOobjn/FJbJP1heJ3p3EJQlViVciyR3tbObk9jd4XYF3HvRi3FaaLX2g=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1tfn3wk223raqlp2u7yzke2m0ygslyytcefu5cf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1361","supremep2u7yzke","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7esdqoL/gfRP5rvydtXJZpsHWxEftIVFwNjKHG1+QiY"},"signature":"1bh1T7k3gNRTJPKFkKcgsfcpHsFpHONWV3AmBGEK91tnYnckDe5pgxFmGXDEFB/d5G6qKQF7obZTNQT2ugRDSg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1tfn3wk223raqlp2u7yzke2m0ygslyytcefu5cf","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1361","1","1","g1tfn3wk223raqlp2u7yzke2m0ygslyytcefu5cf"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A7esdqoL/gfRP5rvydtXJZpsHWxEftIVFwNjKHG1+QiY"},"signature":"LIE3gGAAHQAgVD5lyGBCKBKh/AsQAvNAnl1v2KPOXIF0cspVbnwPw8Sitee2iZhrZhnbKhe4HPYHeDLStH3fXw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1064cq9xawpqfzmwqwpfnlkkq8htzdhlzj9czux","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"w5CjmWeU6s7m6KZq5DGJDKKvhzHxCha3LJJx/U+uI5wOlnxxQTrFkRqA8cKX0HrbVL9hfT9pAfutA5FeKsDbmA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1064cq9xawpqfzmwqwpfnlkkq8htzdhlzj9czux","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","drymwqwpfnl",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6Dz2xH//Uz8MAgkij03FJzxrq0eqZTbWw2zNQMEXtiS"},"signature":"E55I826+dKtbtcFSHYetXzdnP11Yv48kMaKw1RQ7wetgnPsf6qoWFFGP5Wf/a4dPwVasNxGhknncqEaH/eiXfw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1064cq9xawpqfzmwqwpfnlkkq8htzdhlzj9czux","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["drymwqwpfnl"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6Dz2xH//Uz8MAgkij03FJzxrq0eqZTbWw2zNQMEXtiS"},"signature":"esoIj6KdYtgk0r8a+jzODdNnZunLNi0XNEOPFWjKrfQbx547xAJm05JT65gl2I41W86y8kt4km9KuAU9FlrmJA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1064cq9xawpqfzmwqwpfnlkkq8htzdhlzj9czux","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1362","drymwqwpfnl","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6Dz2xH//Uz8MAgkij03FJzxrq0eqZTbWw2zNQMEXtiS"},"signature":"LItPuRcbXvCZFmMUFztZhR4Zqs/uSQwRhfhTm/uQxNExJo6+1+UWvW2zi+foY6dNzS0498c07A0ht8L4CzepVg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g1064cq9xawpqfzmwqwpfnlkkq8htzdhlzj9czux","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1362","1","1","g1064cq9xawpqfzmwqwpfnlkkq8htzdhlzj9czux"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A6Dz2xH//Uz8MAgkij03FJzxrq0eqZTbWw2zNQMEXtiS"},"signature":"7BvVDN3gvvFhfzAPq2O5Gxui9qah8KfUEJ4J+3QOzr0XraiWATR0NYCueYnQwo311gClctyLh4iKPSJ9nnli7w=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g13p8dnz9363q8m5tnhlxpsvc4vkeafaer07hz4l","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"29nXvmjglDtt0VK3smbZfulmJm6H5m0aIG9+Npcx5rh/pno8fHn4gxz6P3KrAxJdm3rlFbk++YAm6ADlrWs1Eg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g13p8dnz9363q8m5tnhlxpsvc4vkeafaer07hz4l","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","claw5tnhlxps",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgfdtYQBtEvnw4moOaad0orfjJDvuT1E4f7mOHY6Q9to"},"signature":"Do/243oQgMonGIEBoeZAFroaL6ug/aj3p3tDQI5WQ2gb8sLL6VocyUG/Q2UzcO8wvQaxHi2ruz+tE4Maxg5cdQ=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g13p8dnz9363q8m5tnhlxpsvc4vkeafaer07hz4l","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateBoard","args":["claw5tnhlxps"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgfdtYQBtEvnw4moOaad0orfjJDvuT1E4f7mOHY6Q9to"},"signature":"ZJvrmO/USNc7OwcKH3z3NyKa7I+BjaPVCoQ0mkaaRhpnMb7g5sZ9SrPQLD3BqgYwMfh8CvSl5Nx3yYlm5R0cfg=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g13p8dnz9363q8m5tnhlxpsvc4vkeafaer07hz4l","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1363","claw5tnhlxps","This is a demo of Gno smart contract programming.  This document was\nconstructed by Gno onto a smart contract hosted on the data Realm\nname [\"gno.land/r/boards\"](https://gno.land/r/boards/)\n([github](https://github.com/gnolang/gno/tree/master/examples/gno.land/r/boards)).\n\n\n\n## Build `gnokey`, create your account, and interact with Gno.\n\nNOTE: Where you see `--remote gno.land:36657` here, that flag can be replaced\nwith `--remote localhost:26657` for local testnets.\n\n### Build `gnokey`.\n\n```bash\ngit clone git@github.com:gnolang/gno.git\ncd ./gno\nmake\n```\n\n### Generate a seed/mnemonic code.\n\n```bash\n./build/gnokey generate\n```\n\nNOTE: You can generate 24 words with any good bip39 generator.\n\n### Create a new account using your mnemonic.\n\n```bash\n./build/gnokey add KEYNAME --recover\n```\n\nNOTE: `KEYNAME` is your key identifier, and should be changed.\n\n### Verify that you can see your account locally.\n\n```bash\n./build/gnokey list\n```\n\n## Interact with the blockchain:\n\n### Get your current balance, account number, and sequence number.\n\n```bash\n./build/gnokey query auth/accounts/ACCOUNT_ADDR --remote gno.land:36657\n```\n\nNOTE: you can retrieve your `ACCOUNT_ADDR` with `./build/gnokey list`.\n\n### Acquire testnet tokens using the official faucet.\n\nGo to https://gno.land/faucet\n\n### Create a board with a smart contract call.\n\nNOTE: `BOARDNAME` will be the slug of the board, and should be changed.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateBoard\" --args \"BOARDNAME\" --gas-fee \"1000000ugnot\" --gas-wanted \"2000000\" --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateBoard\n\nNext, query for the permanent board ID by querying (you need this to create a new post):\n\n```bash\n./build/gnokey query \"vm/qeval\" --data \"gno.land/r/boards\nGetBoardIDFromName(\\\"BOARDNAME\\\")\" --remote gno.land:36657\n```\n\n### Create a post of a board with a smart contract call.\n\nNOTE: If a board was created successfully, your SEQUENCE_NUMBER would have increased.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateThread\" --args BOARD_ID --args \"Hello gno.land\" --args\\#file \"./examples/gno.land/r/boards/example_post.md\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateThread\n\n### Create a comment to a post.\n\n```bash\n./build/gnokey maketx call KEYNAME --pkgpath \"gno.land/r/boards\" --func \"CreateReply\" --args \"BOARD_ID\" --args \"1\" --args \"1\" --args \"Nice to meet you too.\" --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid testchain --remote gno.land:36657\n```\n\nInteractive documentation: https://gno.land/r/boards?help\u0026__func=CreateReply\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\nBOARDNAME/1\" --remote gno.land:36657\n```\n\n### Render page with optional path expression.\n\nThe contents of `https://gno.land/r/boards:` and `https://gno.land/r/boards:gnolang` are rendered by calling\nthe `Render(path string)` function like so:\n\n```bash\n./build/gnokey query \"vm/qrender\" --data \"gno.land/r/boards\ngnolang\"\n```\n\n## Starting a local `gnoland` node:\n\n### Add test account.\n\n```bash\n./build/gnokey add test1 --recover\n```\n\nUse this mneonic:\n\u003e source bonus chronic canvas draft south burst lottery vacant surface solve popular case indicate oppose farm nothing bullet exhibit title speed wink action roast\n\n### Start `gnoland` node.\n\n```bash\n./build/gnoland\n```\n\nNOTE: This can be reset with `make reset`\n\n### Publish the \"gno.land/p/demo/avl\" package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/p/demo/avl\" --pkgdir \"examples/gno.land/p/demo/avl\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 2000000 --broadcast true --chainid dev --remote localhost:26657\n```\n\n### Publish the \"gno.land/r/boards\" realm package.\n\n```bash\n./build/gnokey maketx addpkg test1 --pkgpath \"gno.land/r/boards\" --pkgdir \"examples/gno.land/r/boards\" --deposit 100000000ugnot --gas-fee 1000000ugnot --gas-wanted 300000000 --broadcast true --chainid dev --remote localhost:26657\n```\n"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgfdtYQBtEvnw4moOaad0orfjJDvuT1E4f7mOHY6Q9to"},"signature":"AfM9u3wYdJ2PFz3jzVY1fqwnMuM5GqtWLLvRbYHmG88B2Y17zOC67dsh4HKDZjSwSq/p0u4TIXwRBLAV7vcynw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g13p8dnz9363q8m5tnhlxpsvc4vkeafaer07hz4l","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateReply","args":["1363","1","1","g13p8dnz9363q8m5tnhlxpsvc4vkeafaer07hz4l"]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgfdtYQBtEvnw4moOaad0orfjJDvuT1E4f7mOHY6Q9to"},"signature":"EtNxgEfaZwoHzwPcsoWUy6chGe5TT9A8DjBgK0UO1B4dh8szvyC5j36xWdkja5wtNDI+QiZhtxliyo0cMj2kuA=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g16687h7uv5eugze949eemawcqymkr4nxacnxp57","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"5MvznTtR7TPMyQb6lXfBB6Zg+7gwrXH3/sQMkOO6z7RpNC6Y9t3Io6KvCliMODCU7lOwcUqXyjuzz4owWO/rEw=="}],"memo":""}
{"msg":[{"@type":"/vm.m_call","caller":"g16687h7uv5eugze949eemawcqymkr4nxacnxp57","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","clicke949eema",""]}],"fee":{"gas_wanted":"4000000","gas_fee":"10000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AiAxQtp9s80tISxlmKr6KWWf3BzsNtwph62+Fjm9sbQC"},"signature":"sodlepQpPtesBXNmX3yuesl5nIEC1gNldhWyuBUJ1U9hpYNvFOaz2MS7HbVKg6rcor67Yg25M09DW+fXXq4yqA=="}],"memo":""}
