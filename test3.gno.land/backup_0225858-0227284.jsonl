{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1h5w7hnqkxp7c23qqp8rs62slvdczsjzyfxsye4","package":{"Name":"dogsa","Path":"gno.land/r/demo/dogsa","Files":[{"Name":"GRC20.gno","Body":"package dogsa\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tdogsa  *grc20.AdminToken\r\n\tadmin std.Address = \"g1h5w7hnqkxp7c23qqp8rs62slvdczsjzyfxsye4\"\r\n)\r\n\r\nfunc init() {\r\n\tdogsa = grc20.NewAdminToken(\"dogsaToken\", \"dogsa\", 6)\r\n\tdogsa.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn dogsa.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := dogsa.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := dogsa.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tdogsa.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tdogsa.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tdogsa.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tdogsa.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tdogsa.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn dogsa.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := dogsa.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjPXBMIiQC2a6BTtklbriXGcthjkO9yMNbFqu9suf50Q"},"signature":"YGD1hYek0Nxd6c6cOY3UvEXW5+6w9i5Mb3XnRO+JEXNfoKSR6NLEvwrnvukTg8La8eT0uMU6FC2/L/8EYKTx/w=="}],"memo":"Deployed through play.gno.land"},"blockNum":"225989"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g16rmggz0l4nz59rkc2vlh4cw8ef23ept68mtdpq","package":{"Name":"jason","Path":"gno.land/r/demo/jason","Files":[{"Name":"GRC20.gno","Body":"package jason\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tjason *grc20.AdminToken\r\n\tadmin std.Address = \"g16rmggz0l4nz59rkc2vlh4cw8ef23ept68mtdpq\"\r\n)\r\n\r\nfunc init() {\r\n\tjason = grc20.NewAdminToken(\"jasonToken\", \"jason\", 6)\r\n\tjason.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn jason.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := jason.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := jason.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tjason.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tjason.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tjason.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tjason.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tjason.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn jason.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := jason.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmcXTFv17XpwB2kRQRK9RhPeRWM0LlFJqLSFTinWvrmH"},"signature":"8TRlROaQwNQnuoaquYZNZsMPuBbsQnkBRiwo+k8WwPFaneak+yJCul/feCroK6F7QtJ3zWltY9ZenAawlsEjXw=="}],"memo":"Deployed through play.gno.land"},"blockNum":"226208"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1p6wtprf8wl2s5z08s0tmn7snxlq0tdjvv46tm9","send":"","pkg_path":"gno.land/p/demo/hello","func":"Render","args":["oasd"]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AzKti/XiFTeigS2l358qt7i7UIfEeHD8HjiNZPR5DUlD"},"signature":"iMbWi3Y6V0tD3Jmbx95YpWwAm7Nd/T3gLRCgxml1Oi00j1/pjYUhPxEUKdaofb20Wa1LTpMbhnYpFnpMpCSlNQ=="}],"memo":"Deployed through play.gno.land"},"blockNum":"226462"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1f748xee7gpwldyrz4xea3nk6hw24lfya49fus8","package":{"Name":"cryptopunkstar","Path":"gno.land/p/demo2/cryptopunkstar","Files":[{"Name":"package.gno","Body":"// xryptopunkstar\n\npackage cryptopunkstar\n\n\nvar MsgOfPkg = \"this is a public NFTs\"\nvar msgOfPkg = \"this is a private NFTS\"\n\nfunc GetPrivVar() string {\n\treturn msgOfPkg\n}\n\nfunc Gnome(name string) string {\n\treturn \"greetings \" + name + \", welcome to the gnoland\"\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AsfGYP4d45M3jSq3Cs02mX9XC3pIVzEkSG91ZXpsKZ2s"},"signature":"3Q1A+iJQzJDCVbdrgRVlMNloyFn3TYRMEibFH0j4VU1d2wrpEP9rzlBeSOtKwjLZ43bGfLIHUagpe/2YwyYHIA=="}],"memo":"Deployed through play.gno.land"},"blockNum":"226648"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1fp2ph05q34ed4q5tppurenh3as6r6dfkrhtgrw","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","don",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyFH5Cz+z3N5u2DBm96p8Uj/3SLA2Ct+l5MSNhZnmGWw"},"signature":"1JAftpH22PxS80+bBZ+yb5q5YxcT1nlqkpE9gsaUy2U1vMj4Z5cD2acRE7WGUBX0eozMyZAuqi5nkCMVyOph4w=="}],"memo":""},"blockNum":"227019"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1fp2ph05q34ed4q5tppurenh3as6r6dfkrhtgrw","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","don",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyFH5Cz+z3N5u2DBm96p8Uj/3SLA2Ct+l5MSNhZnmGWw"},"signature":"lekgmnNHM6HlVmm/7Q8sFSlHI62QW9cO1c/4y3ZL1Rg9PtZUcbW6pMgNhFXacVUX9onoctL20L7B3aE543ektQ=="}],"memo":""},"blockNum":"227021"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1fp2ph05q34ed4q5tppurenh3as6r6dfkrhtgrw","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","don",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyFH5Cz+z3N5u2DBm96p8Uj/3SLA2Ct+l5MSNhZnmGWw"},"signature":"DI/K85DdqE964Z/FpccYzZQQPuugHyEW2PRMIRrRao85G6lVCU6n9xfcJCfNKkrORViK4LCZdzS+5ijAG3Sc3w=="}],"memo":""},"blockNum":"227023"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1fp2ph05q34ed4q5tppurenh3as6r6dfkrhtgrw","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1","Hello","hey"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AyFH5Cz+z3N5u2DBm96p8Uj/3SLA2Ct+l5MSNhZnmGWw"},"signature":"T+smnJExbQmFrrw21e10KdV/0plWtOlaGYbEarHGRno/nnfWu/NWCby0K9bsQIJZHJVqh2KmZCv4nIM8JS+Vhw=="}],"memo":""},"blockNum":"227025"}
