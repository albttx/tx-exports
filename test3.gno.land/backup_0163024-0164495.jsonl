{"tx":{"msg":[{"@type":"/bank.MsgSend","from_address":"g13enw4ph4jwh2mqv07pxcsesyam5605cydps77n","to_address":"g1x4kv73whjuntyssmk86h0jx75k8e743qjnu92h","amount":"5000000000ugnot"}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A3JoC0+RVv9CQsgf4X359CS2cPelnoPDiVtGW/ppfqfN"},"signature":"vSTZ6cuA+DqtHqTa3YFCCS4hlfo51Fy74gR+rtu9J1Akl7V2dTPFfrv4LUX3oRmKRXT2kj7mYU29v9kJDKticw=="}],"memo":""},"blockNum":"163037"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv","package":{"Name":"GRX","Path":"gno.land/p/GRXToken/GRX","Files":[{"Name":"GRC20.gno","Body":"package grx\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tgrx  *grc20.AdminToken\r\n\tadmin std.Address = \"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv\"\r\n)\r\n\r\nfunc init() {\r\n\tgrx = grc20.NewAdminToken(\"GRX\", \"GRX\", 6)\r\n\tgrx.Mint(admin, 2445000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn grx.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := grx.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := grx.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrx.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrx.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrx.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrx.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrx.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn grx.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := grx.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApmOGUpRN1SOVOjRIKgydIwYIiQuY2cHxlAb1mh58my9"},"signature":"3DA1KWz0Q9OWcusDTQJ7kXrVqQFBMQ0R8IXLnWgRRLwsoCJA6GtmzbQuBpsIwgBRSlIg/Ygz15rX/VDSlnYHdg=="}],"memo":""},"blockNum":"163569"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv","package":{"Name":"GRX","Path":"gno.land/p/GRXToken/GRX","Files":[{"Name":"GRC20.gno","Body":"package grx\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tgrx  *grc20.AdminToken\r\n\tadmin std.Address = \"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv\"\r\n)\r\n\r\nfunc init() {\r\n\tgrx = grc20.NewAdminToken(\"GRXToken\", \"GRX\", 6)\r\n\tgrx.Mint(admin, 2445000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn grx.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := grx.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := grx.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrx.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrx.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrx.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrx.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrx.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn grx.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := grx.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApmOGUpRN1SOVOjRIKgydIwYIiQuY2cHxlAb1mh58my9"},"signature":"qKUBssQiiBIsaaAfHCq3VE7rgPtqp7AaHfkxeOtneH9Q4Nk7soOt0v4d0LRPl/iZlY+vTQrSjK6YAu0BxHeAXQ=="}],"memo":""},"blockNum":"163571"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv","package":{"Name":"GRX","Path":"gno.land/p/GRXToken/GRX","Files":[{"Name":"GRC20.gno","Body":"package AdminToken\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tgrx  *grc20.AdminToken\r\n\tadmin std.Address = \"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv\"\r\n)\r\n\r\nfunc init() {\r\n\tgrx = grc20.NewAdminToken(\"GRXToken\", \"GRX\", 6)\r\n\tgrx.Mint(admin, 2445000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn grx.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := grx.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := grx.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrx.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrx.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrx.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrx.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrx.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn grx.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := grx.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApmOGUpRN1SOVOjRIKgydIwYIiQuY2cHxlAb1mh58my9"},"signature":"Z8s1Wf2rHFpvJ0YgdUugWg3v8IbGrARFhiRsYOXuRwQkW1W/YXt2BP06rI6UYj/FmMKhRI8rGZ6Wtc8lVSO6Tg=="}],"memo":""},"blockNum":"163574"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv","package":{"Name":"GRX","Path":"gno.land/p/GRXToken/GRX","Files":[{"Name":"GRC20.gno","Body":"package AdminToken\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tgrx  *grc20.AdminToken\r\n\tadmin std.Address = \"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv\"\r\n)\r\n\r\nfunc init() {\r\n\tgrx = grc20.NewAdminToken(\"Grx\", \"GRX\", 6)\r\n\tgrx.Mint(admin, 2445000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn grx.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := grx.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := grx.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrx.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrx.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrx.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrx.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrx.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn grx.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := grx.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApmOGUpRN1SOVOjRIKgydIwYIiQuY2cHxlAb1mh58my9"},"signature":"BnrD7SUkToSjl4b7g/VYJN+nfvpmCqQpXlqYD+7bQ7Y/9BKaiLM9WRGlUQ3O7A1gK9V1W6VP8fuWa5H+8uFwJA=="}],"memo":""},"blockNum":"163581"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv","package":{"Name":"GRX","Path":"gno.land/p/GRXToken/GRX","Files":[{"Name":"GRC20.gno","Body":"package grass\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tgrass  *grc20.AdminToken\r\n\tadmin std.Address = \"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv\"\r\n)\r\n\r\nfunc init() {\r\n\tgrass = grc20.NewAdminToken(\"Grass\", \"GRASS\", 6)\r\n\tgrass.Mint(admin, 2445000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn grass.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := grass.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := grass.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrass.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrass.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn grass.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := grass.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApmOGUpRN1SOVOjRIKgydIwYIiQuY2cHxlAb1mh58my9"},"signature":"V1iOJJp+VI/CM2gUCYs2ZHb6Uy1ycMW7MKU+ieAxlPlx6PXD1yASNJjMgETQuciR2GUw1RSIDyH2F/Zfx89cww=="}],"memo":""},"blockNum":"163586"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv","package":{"Name":"GRX","Path":"gno.land/p/GRXToken/GRX","Files":[{"Name":"GRC20.gno","Body":"package grass\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tgrass  *grc20.AdminToken\r\n\tadmin std.Address = \"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv\"\r\n)\r\n\r\nfunc init() {\r\n\tgrass = grc20.NewAdminToken(\"Grass\", \"GRASS\", 6)\r\n\tgrass.Mint(admin, 2445000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn grass.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := grass.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := grass.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrass.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrass.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn grass.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := grass.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApmOGUpRN1SOVOjRIKgydIwYIiQuY2cHxlAb1mh58my9"},"signature":"ARcon0PEMTwjJZU66WloALBtbiDY1vL5hio6GEyLI3dxWTut2wx+I7U6mi1kWQon6G/T1VPJaywpp1u1gVHKCA=="}],"memo":""},"blockNum":"163591"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv","package":{"Name":"Grass","Path":"gno.land/p/GreenGrass/Grass","Files":[{"Name":"GRC20.gno","Body":"package grass\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tgrass  *grc20.AdminToken\r\n\tadmin std.Address = \"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv\"\r\n)\r\n\r\nfunc init() {\r\n\tgrass = grc20.NewAdminToken(\"Grass\", \"GRASS\", 6)\r\n\tgrass.Mint(admin, 2445000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn grass.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := grass.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := grass.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrass.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrass.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn grass.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := grass.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApmOGUpRN1SOVOjRIKgydIwYIiQuY2cHxlAb1mh58my9"},"signature":"EeXdszbL/K8tHv5fYCsKBuvA8oEAUT6aKGHN4KbGmGkYOuZZNKFk4uLkXdMkGYd7v1R2++tQcqvUUoWRviK6pQ=="}],"memo":""},"blockNum":"163604"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv","package":{"Name":"GRX","Path":"gno.land/p/GRXToken/GRX","Files":[{"Name":"GRC20.gno","Body":"package grass\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tgrass  *grc20.AdminToken\r\n\tadmin std.Address = \"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv\"\r\n)\r\n\r\nfunc init() {\r\n\tgrass = grc20.NewAdminToken(\"Grass\", \"GRASS\", 6)\r\n\tgrass.Mint(admin, 2445000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn grass.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := grass.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := grass.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrass.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrass.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn grass.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := grass.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"},{"Name":"Grass.gno","Body":"package grass\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tgrass  *grc20.AdminToken\r\n\tadmin std.Address = \"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv\"\r\n)\r\n\r\nfunc init() {\r\n\tgrass = grc20.NewAdminToken(\"Grass\", \"GRASS\", 6)\r\n\tgrass.Mint(admin, 2445000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn grass.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := grass.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := grass.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrass.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrass.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn grass.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := grass.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApmOGUpRN1SOVOjRIKgydIwYIiQuY2cHxlAb1mh58my9"},"signature":"0wLHisP37R9h5ak6qK8AmP+jDZaqT1QJ3PujZgznT5g0DL08us2n8zwtqqgNAlQZKWXehhIpOn+1QD6JzpaVyw=="}],"memo":""},"blockNum":"163615"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv","package":{"Name":"grass","Path":"gno.land/r/demo/grass","Files":[{"Name":"GRC20.gno","Body":"package grass\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tgrass  *grc20.AdminToken\r\n\tadmin std.Address = \"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv\"\r\n)\r\n\r\nfunc init() {\r\n\tgrass = grc20.NewAdminToken(\"grassToken\", \"grass\", 6)\r\n\tgrass.Mint(admin, 2443000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn grass.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := grass.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := grass.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrass.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrass.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn grass.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := grass.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApmOGUpRN1SOVOjRIKgydIwYIiQuY2cHxlAb1mh58my9"},"signature":"3NTBGO/qIMIHxnvn0iDacIAswJwWONeumKYu/Na+6nMxQ/bLsZdknTcImDv/Nw1F6ozDQkSsYnM0DaocYaIyMQ=="}],"memo":""},"blockNum":"163621"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv","package":{"Name":"grass","Path":"gno.land/r/demo/grass","Files":[{"Name":"GRC20.gno","Body":"package grass\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tgrass  *grc20.AdminToken\r\n\tadmin std.Address = \"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv\"\r\n)\r\n\r\nfunc init() {\r\n\tgrass = grc20.NewAdminToken(\"Grass\", \"grass\", 6)\r\n\tgrass.Mint(admin, 2443000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn grass.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := grass.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := grass.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrass.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrass.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn grass.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := grass.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApmOGUpRN1SOVOjRIKgydIwYIiQuY2cHxlAb1mh58my9"},"signature":"inejMHNON4iE9A+gUkuxNVpGJcI98DW/WVcW1la8KrZVNp3SBXkC3HSfFjoeuv8EEzntukd/cD04j7Sub4LY1Q=="}],"memo":""},"blockNum":"163637"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv","package":{"Name":"grass","Path":"gno.land/r/demo/grass","Files":[{"Name":"Grass.gno","Body":"package grass\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tgrass  *grc20.AdminToken\r\n\tadmin std.Address = \"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv\"\r\n)\r\n\r\nfunc init() {\r\n\tgrass = grc20.NewAdminToken(\"Grass\", \"GRASS\", 6)\r\n\tgrass.Mint(admin, 2445000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn grass.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := grass.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := grass.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgrass.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrass.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgrass.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn grass.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := grass.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApmOGUpRN1SOVOjRIKgydIwYIiQuY2cHxlAb1mh58my9"},"signature":"IipUTQX98PY7FWSBy0kZSn5U0m5qUfWzhGVGNplYhN8dc2wBradqSrPHrTvtobDi3dQkll/XJYZUb1vUokE13A=="}],"memo":""},"blockNum":"163640"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv","package":{"Name":"skull","Path":"gno.land/p/demo/skull","Files":[{"Name":"GRC20.gno","Body":"package skull\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tskull  *grc20.AdminToken\r\n\tadmin std.Address = \"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv\"\r\n)\r\n\r\nfunc init() {\r\n\tskull = grc20.NewAdminToken(\"Skull\", \"skull\", 6)\r\n\tskull.Mint(admin, 44000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn skull.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := skull.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := skull.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tskull.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tskull.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tskull.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tskull.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tskull.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn skull.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := skull.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApmOGUpRN1SOVOjRIKgydIwYIiQuY2cHxlAb1mh58my9"},"signature":"JRQsiN1Sz72ST3+V69rDDSkoL0Tjahv7uU7TopY3O5VshEP7exxtCyyFujfOK8YFauq5y0ObCisQ8LvbtS7NDA=="}],"memo":""},"blockNum":"163646"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv","package":{"Name":"skull","Path":"gno.land/r/demo/skull","Files":[{"Name":"GRC20.gno","Body":"package skull\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tskull  *grc20.AdminToken\r\n\tadmin std.Address = \"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv\"\r\n)\r\n\r\nfunc init() {\r\n\tskull = grc20.NewAdminToken(\"Skull\", \"skull\", 6)\r\n\tskull.Mint(admin, 44000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn skull.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := skull.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := skull.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tskull.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tskull.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tskull.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tskull.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tskull.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn skull.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := skull.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApmOGUpRN1SOVOjRIKgydIwYIiQuY2cHxlAb1mh58my9"},"signature":"zz/Nr06SgQuH7xgIdCQq97P0eJChmcHtUikHC72SqF9HjOviTE46hglWGhCcs4tmim1XW3moAHRFU8LGX3bArg=="}],"memo":""},"blockNum":"163667"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv","send":"","pkg_path":"gno.land/r/demo/skull","func":"Transfer","args":["g19n7904gdgt6q5cuccenxp2t9a73y5emftdvtq6","500"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApmOGUpRN1SOVOjRIKgydIwYIiQuY2cHxlAb1mh58my9"},"signature":"uC1m6Dzds/S9TWHvQ2MsfrGWm2bu0CQWsIErbIfiXzgfif4zP9d6zCvauGoUCLnUMIaUdxUC9ZcnR9UNEhMpIg=="}],"memo":""},"blockNum":"163678"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv","send":"","pkg_path":"gno.land/r/demo/skull","func":"Transfer","args":["g14qvahvnnllzwl9ehn3mkph248uapsehwgfe4pt","500"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApmOGUpRN1SOVOjRIKgydIwYIiQuY2cHxlAb1mh58my9"},"signature":"1UllzkwVJihN279U9KQ4geqoVd25pw62Vg1Oof5A3b9Gqmx6lpB2C6E38DDzQI3O3veQzpez4XkiMkmD9xC34g=="}],"memo":""},"blockNum":"163680"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv","send":"","pkg_path":"gno.land/r/demo/skull","func":"Transfer","args":["g1c4f5pn9zatmyxrndncv3zsq8qmk33vf4g9gm7h","500"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApmOGUpRN1SOVOjRIKgydIwYIiQuY2cHxlAb1mh58my9"},"signature":"CUpond0Usi8+AiS9binsjQgfcukGxRsnfSd9QqRyBYNOkt7V4d4FTCHnd7vmDjry31Qp98hnhO84aTNdyEGROQ=="}],"memo":""},"blockNum":"163683"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv","send":"","pkg_path":"gno.land/r/demo/skull","func":"Transfer","args":["g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5","500"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApmOGUpRN1SOVOjRIKgydIwYIiQuY2cHxlAb1mh58my9"},"signature":"jFbAspFPHQ9rkWKWXUyVSEYGUTUTQdQAB7J1KMMBAwl/Xdc71mib9Yj0V/4HwXSTktR9bSLki2eRtS1Fu4vH5A=="}],"memo":""},"blockNum":"163686"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv","send":"","pkg_path":"gno.land/r/demo/skull","func":"Transfer","args":["g1ffzxha57dh0qgv9ma5v393ur0zexfvp6lsjpae","500"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApmOGUpRN1SOVOjRIKgydIwYIiQuY2cHxlAb1mh58my9"},"signature":"GDaQ7Rm5EvKh7sU6e9TJ2upDgNXitvYL8BluEaL4S5pvYTiOR291TVVCBizMuBB3216Z+nlGJ1/PQpK0Cfwrmg=="}],"memo":""},"blockNum":"163689"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv","send":"","pkg_path":"gno.land/r/demo/skull","func":"Transfer","args":["g1yszty4hqramkkl42kappn9fyungdu8cmsg76y8","500"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApmOGUpRN1SOVOjRIKgydIwYIiQuY2cHxlAb1mh58my9"},"signature":"u17zbR4en+uLJ1XoOQLB9LEbmRP+Mqrlr4JTDfVVa6hMblO0P9KDG38EudNVjkNQ1OuVN8p1uwrVMZKYRRqqKw=="}],"memo":""},"blockNum":"163691"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g148vmqxzgp4yc996pasredy3v9sw8sxzsgem0qv","send":"","pkg_path":"gno.land/r/demo/skull","func":"Transfer","args":["g13enw4ph4jwh2mqv07pxcsesyam5605cydps77n","500"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"ApmOGUpRN1SOVOjRIKgydIwYIiQuY2cHxlAb1mh58my9"},"signature":"lv1RtJj2ebQaxsPuukRV3TyYyPdpm0t5K+pGVwgDAGZLcilydveBdeebfSPHVcPgbmUzVDzPy12po6atuM81uA=="}],"memo":""},"blockNum":"163693"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1dnw432lpm4jfn6vejn2jn7ds3vmhvdsgwh6ffx","package":{"Name":"pockers","Path":"gno.land/p/demo/pockers","Files":[{"Name":"pockers.gno","Body":"package pockers\n\nimport (\n\t\"std\"\n\t\"strings\"\n\n\t\"gno.land/p/demo/grc/grc20\"\n\t\"gno.land/p/demo/ufmt\"\n\t\"gno.land/r/demo/users\"\n)\n\nvar (\n\tpockers  *grc20.AdminToken\n\tadmin std.Address = \"g1dnw432lpm4jfn6vejn2jn7ds3vmhvdsgwh6ffx\"\n)\n\nfunc init() {\n\tpockers = grc20.NewAdminToken(\"pockers\", \"POCKER\", 6)\n\tpockers.Mint(admin, 1000000000) // @administrator\n}\n\n// method proxies as public functions.\n//\n\n// getters.\n\nfunc TotalSupply() uint64 {\n\treturn pockers.TotalSupply()\n}\n\nfunc BalanceOf(owner users.AddressOrName) uint64 {\n\tbalance, err := pockers.BalanceOf(owner.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\n\tallowance, err := pockers.Allowance(owner.Resolve(), spender.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn allowance\n}\n\n// setters.\n\nfunc Transfer(to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tpockers.Transfer(caller, to.Resolve(), amount)\n}\n\nfunc Approve(spender users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tpockers.Approve(caller, spender.Resolve(), amount)\n}\n\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tpockers.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\n}\n\n// administration.\n\nfunc Mint(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\tpockers.Mint(address.Resolve(), amount)\n}\n\nfunc Burn(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\tpockers.Burn(address.Resolve(), amount)\n}\n\n// render.\n//\n\nfunc Render(path string) string {\n\tparts := strings.Split(path, \"/\")\n\tc := len(parts)\n\n\tswitch {\n\tcase path == \"\":\n\t\treturn pockers.RenderHome()\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\n\t\towner := users.AddressOrName(parts[1])\n\t\tbalance, _ := pockers.BalanceOf(owner.Resolve())\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\n\tdefault:\n\t\treturn \"404\\n\"\n\t}\n}\n\nfunc assertIsAdmin(address std.Address) {\n\tif address != admin {\n\t\tpanic(\"restricted access\")\n\t}\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnDNj8Dza+tSibwG0Y13CP/w2xs59C60edv+cq2DYxFS"},"signature":"uDjgmMq3UUoNSQ7myYrqBU+Zn7Eez0PSu8iHFijrVSFT3sNfVEmMXP/op6N+JLaMMJkcO3lVAUDbRpRP1JfGUA=="}],"memo":""},"blockNum":"163717"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1dnw432lpm4jfn6vejn2jn7ds3vmhvdsgwh6ffx","package":{"Name":"pockers","Path":"gno.land/r/demo/pockers","Files":[{"Name":"pockers.gno","Body":"package pockers\n\nimport (\n\t\"std\"\n\t\"strings\"\n\n\t\"gno.land/p/demo/grc/grc20\"\n\t\"gno.land/p/demo/ufmt\"\n\t\"gno.land/r/demo/users\"\n)\n\nvar (\n\tpockers  *grc20.AdminToken\n\tadmin std.Address = \"g1dnw432lpm4jfn6vejn2jn7ds3vmhvdsgwh6ffx\"\n)\n\nfunc init() {\n\tpockers = grc20.NewAdminToken(\"pockers\", \"POCKER\", 6)\n\tpockers.Mint(admin, 1000000000) // @administrator\n}\n\n// method proxies as public functions.\n//\n\n// getters.\n\nfunc TotalSupply() uint64 {\n\treturn pockers.TotalSupply()\n}\n\nfunc BalanceOf(owner users.AddressOrName) uint64 {\n\tbalance, err := pockers.BalanceOf(owner.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn balance\n}\n\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\n\tallowance, err := pockers.Allowance(owner.Resolve(), spender.Resolve())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn allowance\n}\n\n// setters.\n\nfunc Transfer(to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tpockers.Transfer(caller, to.Resolve(), amount)\n}\n\nfunc Approve(spender users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tpockers.Approve(caller, spender.Resolve(), amount)\n}\n\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tpockers.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\n}\n\n// administration.\n\nfunc Mint(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\tpockers.Mint(address.Resolve(), amount)\n}\n\nfunc Burn(address users.AddressOrName, amount uint64) {\n\tcaller := std.GetOrigCaller()\n\tassertIsAdmin(caller)\n\tpockers.Burn(address.Resolve(), amount)\n}\n\n// render.\n//\n\nfunc Render(path string) string {\n\tparts := strings.Split(path, \"/\")\n\tc := len(parts)\n\n\tswitch {\n\tcase path == \"\":\n\t\treturn pockers.RenderHome()\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\n\t\towner := users.AddressOrName(parts[1])\n\t\tbalance, _ := pockers.BalanceOf(owner.Resolve())\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\n\tdefault:\n\t\treturn \"404\\n\"\n\t}\n}\n\nfunc assertIsAdmin(address std.Address) {\n\tif address != admin {\n\t\tpanic(\"restricted access\")\n\t}\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AnDNj8Dza+tSibwG0Y13CP/w2xs59C60edv+cq2DYxFS"},"signature":"O/zTnRBx8kAazIvMUNGpEXVqBc/C+ACKUVn7EEymr7Vb1Pl9lKSr6h08+UXn+an8puCyuUHmxwVXATObC7bYjQ=="}],"memo":""},"blockNum":"163721"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g164f4ra5ppdu7l9hfje9m5jn6lxvumywn98xgyf","package":{"Name":"2023","Path":"gno.land/p/kiwi2023/2023","Files":[{"Name":"package.gno","Body":"package hello\n\nfunc Render(path string) string {\n  return \"sang89vh\"\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5SHMhEbqywPL0K93uJ1NlonLxROGjN/zp2aK38DMDP1"},"signature":"vSdMPUcbYdFlB88s6tYNetvto6kCE4iTShHWhACSColSAliqrjADn0kCdAD/R+5M5CVYZTmJQ0HZ6GsiJFlCGA=="}],"memo":""},"blockNum":"163854"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g164f4ra5ppdu7l9hfje9m5jn6lxvumywn98xgyf","package":{"Name":"2023","Path":"gno.land/p/kiwi2023/2023","Files":[{"Name":"package.gno","Body":"package sang89vh\n\nfunc Render(path string) string {\n  return \"sang89vh\"\n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5SHMhEbqywPL0K93uJ1NlonLxROGjN/zp2aK38DMDP1"},"signature":"n9wWu6MrBejZyrL562aKdjJMYTTFhjrMqOHhleaVPTYQutgLJYZzTXpO5+1znzxtB2VdWrBcnWvKOwvIP64A6g=="}],"memo":""},"blockNum":"163856"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g164f4ra5ppdu7l9hfje9m5jn6lxvumywn98xgyf","package":{"Name":"2023","Path":"gno.land/p/kiwi2023/2023","Files":[{"Name":"package.gno","Body":"package main\n\nfunc main() {\n \n}\n"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A5SHMhEbqywPL0K93uJ1NlonLxROGjN/zp2aK38DMDP1"},"signature":"NYC1D6mtKbVHeh/QBvwIXKJUEbPZYuz1VlHCO92jfhs9rVzrkjTpJN2XJhzN3rTwYlc2k68bCpPAqEA7+tifvQ=="}],"memo":""},"blockNum":"163858"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1v8afdxc0e5qvs4zax4p90g0xleea529h7sq3vh","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"DlEGzRtmvi1ikviKrG12q65d0pM0m8ABMO+RI0tGaaMEbQZ98q4zYNiByck+5fytY0fEvRHSqWBYVtc50o2IKw=="}],"memo":""},"blockNum":"164210"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1ypfzd4gdgkyg0hglmhr5szmqf000wcmlpp0t09","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"bZYpBSL+ITm4lnwXHyUNb/Z4pgFtnJxnGGyQGOAaEb8ovKWfnqBRr+Y/2RpUXtvYuY8TBEKrL5ipx7K8fi9LpQ=="}],"memo":""},"blockNum":"164317"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1gzec8c55gm9t7dupuz46arccrutpvuyqsgxa2h","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"2GWrd5f8vL2MEdqpmAAyV9B2v6AHzOx8mIlYgyBK8zsy4wueBgSV0tsxNDUHzP2ERRihwd+64BlU13kZsheFaQ=="}],"memo":""},"blockNum":"164371"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1gzec8c55gm9t7dupuz46arccrutpvuyqsgxa2h","package":{"Name":"what","Path":"gno.land/r/demo/what","Files":[{"Name":"GRC20.gno","Body":"package what\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\twhat  *grc20.AdminToken\r\n\tadmin std.Address = \"g1gzec8c55gm9t7dupuz46arccrutpvuyqsgxa2h\"\r\n)\r\n\r\nfunc init() {\r\n\twhat = grc20.NewAdminToken(\"what\", \"what\", 6)\r\n\twhat.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn what.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := what.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := what.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\twhat.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\twhat.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\twhat.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\twhat.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\twhat.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn what.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := what.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4d1RkPxP9WzZ9lmBvxGQdg3XFETxIhq/yTO1TsgHzBr"},"signature":"DoJ/uFkVMOErmtHz4XY9KTP13u9BcORIOpMSqjwbPlEXP6qDnfn0Isv8WpAf/vPsV+tSFOaSL0+mGtpRIKT9Gw=="}],"memo":""},"blockNum":"164384"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1gzec8c55gm9t7dupuz46arccrutpvuyqsgxa2h","send":"","pkg_path":"gno.land/r/demo/what","func":"Transfer","args":["g1pacq6s009g7j67rgj4cvep3fcfvwhka0d9a2ny","500000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A4d1RkPxP9WzZ9lmBvxGQdg3XFETxIhq/yTO1TsgHzBr"},"signature":"7dRjItLGdelAJvTbLWR4AoZg2QuBUgYU8/nPyQCLULp6dO0sU7qM6UPF7+u0GYiW2QmUCgCbpxCpKPsDGP//Fg=="}],"memo":""},"blockNum":"164391"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1dgztjqjvaa6fh7qqwewhqsnc9ny2dz33yllk8d","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"H9jmfnJC4U3rsUV2YGhNTDqnsD1owwvrAUhpD5A4irw6MzqejaeuXjR8U2ntPrT1J5It4q7cTopuscZuFNCjQQ=="}],"memo":""},"blockNum":"164405"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1j64awfs3k26num2djh0gqzledyuezrc8639vjn","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"W6FnRjZnxICaEAHMmLwteLdvp3TufNeTCLlZVWf0GlwSjU43KuF6aLZ0sQegaOttBj5HkZb+f8N+4YitCXYhfA=="}],"memo":""},"blockNum":"164417"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1fqqn77pcjfrsj9k693zxdj4ye3mnjgw9pz0awe","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"lHdZM65tgqi8fp90WDyMkj994//1vsthucU/iHj9Ka1RnW5BJh1tIdm6Rh0Q+b571mgvcW31SMV+541HVM7HwA=="}],"memo":""},"blockNum":"164465"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1fqqn77pcjfrsj9k693zxdj4ye3mnjgw9pz0awe","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","wooom",""]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhYpGdDkXoHN4CdQ0DvuvZxBzWGi29wKq8mjenLPqkFI"},"signature":"6YDPMbyUfckV0FC3MZ6Hr5XaHoin0akIS3yj6MhkpGElwrNvhzaAMohLlXJxzNzkj+/EnR7kBNbLpUscG4EpwQ=="}],"memo":""},"blockNum":"164467"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1fqqn77pcjfrsj9k693zxdj4ye3mnjgw9pz0awe","send":"200000000ugnot","pkg_path":"gno.land/r/demo/users","func":"Register","args":["","wooom","Salalalali"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhYpGdDkXoHN4CdQ0DvuvZxBzWGi29wKq8mjenLPqkFI"},"signature":"NyMq+ekisPKQmvFj8YvMdfykgtmJLZWkx4+BK9yLDogA+Lc/UEPnkuybWqI+ekEBAPS8DT0LJieWoHJ77uWOdA=="}],"memo":""},"blockNum":"164469"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1fqqn77pcjfrsj9k693zxdj4ye3mnjgw9pz0awe","send":"","pkg_path":"gno.land/r/demo/users","func":"Register","args":["noone","wooom","Salalalali"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhYpGdDkXoHN4CdQ0DvuvZxBzWGi29wKq8mjenLPqkFI"},"signature":"MO6M3zNXjSBfNSuIZD5bTuyZll4GFTvV/2d9dei3iCh0I1WtssSluENYDNkuQEHNT9gDo63T1F03eAcYbU0hgg=="}],"memo":""},"blockNum":"164471"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1fqqn77pcjfrsj9k693zxdj4ye3mnjgw9pz0awe","send":"","pkg_path":"gno.land/r/demo/boards","func":"CreateThread","args":["1","TEST","huhuhu"]}],"fee":{"gas_wanted":"2000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AhYpGdDkXoHN4CdQ0DvuvZxBzWGi29wKq8mjenLPqkFI"},"signature":"pNFChhiwglVc1rO8kvZQMoB9B9iF7fF9uJFEIK9pW5cMOoCXAlexxCoFrLgNUB4Ela2HW1zbPwPN54Z9m054HQ=="}],"memo":""},"blockNum":"164473"}
