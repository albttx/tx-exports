{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g1p6wtprf8wl2s5z08s0tmn7snxlq0tdjvv46tm9","send":"","pkg_path":"gno.land/r/boom/boom","func":"Render","args":[" "]}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AzKti/XiFTeigS2l358qt7i7UIfEeHD8HjiNZPR5DUlD"},"signature":"E8Pd0jcEVd6GVsJ7YVDdh4xIua+VKK5ig0Uup0mMDqcgIeDClWvfJjA3RiGUxuO/8a1xR23FQszODE6+muZ03Q=="}],"memo":"Deployed through play.gno.land"},"blockNum":"221978"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jcsmkq74jr6uxfpfcytjvruyuqje7lqk2zfxxp","package":{"Name":"nar","Path":"gno.land/r/demo/nar","Files":[{"Name":"GRC20.gno","Body":"package nar\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tnar  *grc20.AdminToken\r\n\tadmin std.Address = \"g1jcsmkq74jr6uxfpfcytjvruyuqje7lqk2zfxxp\"\r\n)\r\n\r\nfunc init() {\r\n\tnar = grc20.NewAdminToken(\"NarToken\", \"NAR\", 6)\r\n\tnar.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn nar.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := nar.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := nar.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tnar.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tnar.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tnar.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tnar.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tnar.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn nar.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := nar.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2oMVgXFZfsV3xSMrijG4QqL49fkopI0KyEr49rqmd7s"},"signature":"XhE72cJqOuxBqNXiCHMEuXA2CKc6DhIF265ObqmGMCFFt5Y0rvFQ7QqYI/7Kr5JZYEMXWxjfoZYpTD6CrQmjOQ=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222002"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g15gsy3nlxxjn0knd3xkucg4f6gf79tfwhg426sw","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"oFkecFip58SAC69m9l2lQ5LFtNmC62JZmiWd887SO9Uq6ZzV2lc5vHtpzEGMLh6wxTxy0OeFydQCYVc56D6NQw=="}],"memo":""},"blockNum":"222004"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g15gsy3nlxxjn0knd3xkucg4f6gf79tfwhg426sw","package":{"Name":"bkk","Path":"gno.land/r/demo/bkk","Files":[{"Name":"GRC20.gno","Body":"package bkk\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tbkk  *grc20.AdminToken\r\n\tadmin std.Address = \"g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5\"\r\n)\r\n\r\nfunc init() {\r\n\tbkk = grc20.NewAdminToken(\"bkkToken\", \"bkk\", 6)\r\n\tbkk.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn bkk.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := bkk.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := bkk.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tbkk.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tbkk.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tbkk.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tbkk.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tbkk.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn bkk.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := bkk.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ap3zzX15rnsV+/yYqqB3yiuHLLwOyNyChTuXNRnl/FHW"},"signature":"x9jbvVLjq0+rITSke9zVN94iCi3CVHuwcMp4WlQe5egkBFr9+hvHB9mtWJKwu6NyV5j/acRLG7l+eRDcq4lavw=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222008"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1lk45335udge6nefk733e852rmexrc94m52tdt9","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"cMEdwcjSnBke8Lg69exCaX8EjBVmx3gkcnY+iQL6C4p7KiEJJwgt0YeNRk2A35S74RWThzDRUqLflrQF92iB2w=="}],"memo":""},"blockNum":"222011"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g128ucp2mk3ax9urc2hhx0tr8xqm6g4p8j28x4yf","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"0PrG0OCmjug0iGFYKLvrQNatDFBpx6O/qYXQbL/2As0k5ERYU+GrRJW/2sHvzj5ymkAG4WfuskbPnsMNDPHEVQ=="}],"memo":""},"blockNum":"222014"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1hh0k8n2am2ldpl0j893wp8fdtwdf8qf9hsa5s8","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"05j96R46ry/gvU8oTtE2HiNVK4isUP8a0KCpAtElpq0oSS3G1aM6UuNMGZ6YYP9y3fhKLCLz6VlkhZp2jiweEA=="}],"memo":""},"blockNum":"222016"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1lk45335udge6nefk733e852rmexrc94m52tdt9","package":{"Name":"testing","Path":"gno.land/r/demo/testing","Files":[{"Name":"GRC20.gno","Body":"package testing\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\ttesting  *grc20.AdminToken\r\n\tadmin std.Address = \"g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5\"\r\n)\r\n\r\nfunc init() {\r\n\ttesting = grc20.NewAdminToken(\"testingToken\", \"testing\", 6)\r\n\ttesting.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn testing.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := testing.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := testing.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\ttesting.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\ttesting.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\ttesting.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\ttesting.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\ttesting.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn testing.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := testing.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/5GJvKUxAJDy8QvFD522GFYejC/WYsc4N8aPlVgJgIa"},"signature":"T2cb0o2ZfLxRrA7zPgxiA1fGiR1NFK5MM42gtNAqWV8YiAntN1pi1PXz8mRB1JMguE75j4P/I5qf+vTIwFf7UQ=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222018"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1lk45335udge6nefk733e852rmexrc94m52tdt9","package":{"Name":"testing","Path":"gno.land/r/demo/testing","Files":[{"Name":"GRC20.gno","Body":"package testing\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\ttesting  *grc20.AdminToken\r\n\tadmin std.Address = \"g1lk45335udge6nefk733e852rmexrc94m52tdt9\"\r\n)\r\n\r\nfunc init() {\r\n\ttesting = grc20.NewAdminToken(\"testingToken\", \"testing\", 6)\r\n\ttesting.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn testing.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := testing.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := testing.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\ttesting.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\ttesting.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\ttesting.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\ttesting.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\ttesting.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn testing.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := testing.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/5GJvKUxAJDy8QvFD522GFYejC/WYsc4N8aPlVgJgIa"},"signature":"6dJYXurws920JJ6/O1bvSJqApyhxCfGCNjsR1Q4JtDRmWjCPh4jsUfMS36uQrlf5+oA13bmS3QBwuBPyarapDg=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222020"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g128ucp2mk3ax9urc2hhx0tr8xqm6g4p8j28x4yf","package":{"Name":"cmg","Path":"gno.land/r/demo/cmg","Files":[{"Name":"GRC20.gno","Body":"package cmg\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tcmg  *grc20.AdminToken\r\n\tadmin std.Address = \"g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5\"\r\n)\r\n\r\nfunc init() {\r\n\tcmg = grc20.NewAdminToken(\"cmgToken\", \"cmg\", 6)\r\n\tcmg.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn cmg.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := cmg.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := cmg.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tcmg.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tcmg.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tcmg.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tcmg.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tcmg.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn cmg.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := cmg.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxVdh4kz7T3MgQdjBGcKn4Y0ebKw0905PvD//GnJUljf"},"signature":"GoIa78zX+pFyVqzjhimzehfYMDJemKeL1+9HlXn/nuhyI74tgAPWvzs7piAGTShrHLO0Ns1gdzP92IAcc/LGvg=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222023"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1lk45335udge6nefk733e852rmexrc94m52tdt9","package":{"Name":"testing1","Path":"gno.land/r/demo/testing1","Files":[{"Name":"GRC20.gno","Body":"package testing1\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\ttesting1  *grc20.AdminToken\r\n\tadmin std.Address = \"g1lk45335udge6nefk733e852rmexrc94m52tdt9\"\r\n)\r\n\r\nfunc init() {\r\n\ttesting1 = grc20.NewAdminToken(\"testing1Token\", \"testing1\", 6)\r\n\ttesting1.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn testing1.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := testing1.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := testing1.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\ttesting1.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\ttesting1.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\ttesting1.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\ttesting1.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\ttesting1.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn testing1.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := testing1.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/5GJvKUxAJDy8QvFD522GFYejC/WYsc4N8aPlVgJgIa"},"signature":"KsZewrwd7oE/YpwYR6RIYaEPGUunriF5dejgTcLtHpR0wBlc22ksKLtElywXupudiGyUbvfpR4eYtr5H5/nY5g=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222025"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1lk45335udge6nefk733e852rmexrc94m52tdt9","package":{"Name":"poop","Path":"gno.land/r/demo/poop","Files":[{"Name":"GRC20.gno","Body":"package poop\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tpoop  *grc20.AdminToken\r\n\tadmin std.Address = \"g1lk45335udge6nefk733e852rmexrc94m52tdt9\"\r\n)\r\n\r\nfunc init() {\r\n\tpoop = grc20.NewAdminToken(\"poopToken\", \"poop\", 6)\r\n\tpoop.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn poop.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := poop.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := poop.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tpoop.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tpoop.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tpoop.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tpoop.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tpoop.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn poop.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := poop.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A/5GJvKUxAJDy8QvFD522GFYejC/WYsc4N8aPlVgJgIa"},"signature":"+RPehQ2fgnxDQ+0lmy091M4i3Bll3sFnjeRpynidVyZup+0xUSMSY1a7T+xuS3MBgQFMUbdx21QyjbWrFEHKzQ=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222027"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1hh0k8n2am2ldpl0j893wp8fdtwdf8qf9hsa5s8","package":{"Name":"gtb","Path":"gno.land/r/demo/gtb","Files":[{"Name":"GRC20.gno","Body":"package gtb\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tgtb  *grc20.AdminToken\r\n\tadmin std.Address = \"g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5\"\r\n)\r\n\r\nfunc init() {\r\n\tgtb = grc20.NewAdminToken(\"gtbToken\", \"gtb\", 6)\r\n\tgtb.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn gtb.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := gtb.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := gtb.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgtb.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgtb.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tgtb.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgtb.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tgtb.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn gtb.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := gtb.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxS9j83f8ook0P8tAQSCuq+IBgsMgAPqUlX16EVs8WPU"},"signature":"l85GAWt4hVY8UIJZUpQzUpcZJjpvmhDDFOrlcV/ba7NE5WDALZrtsmw4DfjQv26DJWkssGIAaogFzRSECi4aZA=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222029"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g15gsy3nlxxjn0knd3xkucg4f6gf79tfwhg426sw","package":{"Name":"yht","Path":"gno.land/r/demo/yht","Files":[{"Name":"GRC20.gno","Body":"package yht\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tyht  *grc20.AdminToken\r\n\tadmin std.Address = \"g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5\"\r\n)\r\n\r\nfunc init() {\r\n\tyht = grc20.NewAdminToken(\"yhtToken\", \"yht\", 6)\r\n\tyht.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn yht.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := yht.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := yht.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tyht.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tyht.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tyht.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tyht.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tyht.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn yht.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := yht.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ap3zzX15rnsV+/yYqqB3yiuHLLwOyNyChTuXNRnl/FHW"},"signature":"pPZkUp+XyUoSKrcYJryJ0N4xbBOyBVy7h3JsMjkXKQ05jB7PxD+e4RvlhF1KFlioLAu+66kLRBRcBjXI/3kjTg=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222032"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g128ucp2mk3ax9urc2hhx0tr8xqm6g4p8j28x4yf","package":{"Name":"eed","Path":"gno.land/r/demo/eed","Files":[{"Name":"GRC20.gno","Body":"package eed\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\teed  *grc20.AdminToken\r\n\tadmin std.Address = \"g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5\"\r\n)\r\n\r\nfunc init() {\r\n\teed = grc20.NewAdminToken(\"eedToken\", \"eed\", 6)\r\n\teed.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn eed.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := eed.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := eed.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\teed.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\teed.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\teed.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\teed.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\teed.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn eed.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := eed.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxVdh4kz7T3MgQdjBGcKn4Y0ebKw0905PvD//GnJUljf"},"signature":"Nr6iT2m50U9vS0NdpVQLomff1ozTPqJk8i5LqwAAtA0P6KDoPn9siMIkwYkKjw8vS7TGopbWsz+/Z1yzZG0n2Q=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222035"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1hh0k8n2am2ldpl0j893wp8fdtwdf8qf9hsa5s8","package":{"Name":"hju","Path":"gno.land/r/demo/hju","Files":[{"Name":"GRC20.gno","Body":"package hju\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\thju  *grc20.AdminToken\r\n\tadmin std.Address = \"g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5\"\r\n)\r\n\r\nfunc init() {\r\n\thju = grc20.NewAdminToken(\"hjuToken\", \"hju\", 6)\r\n\thju.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn hju.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := hju.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := hju.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\thju.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\thju.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\thju.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\thju.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\thju.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn hju.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := hju.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxS9j83f8ook0P8tAQSCuq+IBgsMgAPqUlX16EVs8WPU"},"signature":"7Fcm2q4Oy+U9X29wJuVSGDOMVms4EgubDiOhYIX1PMxaNCxylEXr+Y2AXo04n2kzecIGaFYry3RapULmwtBvKg=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222039"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1h5w7hnqkxp7c23qqp8rs62slvdczsjzyfxsye4","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"tN9KnpTksOhbSe2b0kTGYdzdx7p3RHr6e8wZ1GLZO4hr2Jol/dEn0/v5x/SrPlV4Ivz675Ae7WX8ADSzIIl3IA=="}],"memo":""},"blockNum":"222097"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1h5w7hnqkxp7c23qqp8rs62slvdczsjzyfxsye4","package":{"Name":"honey","Path":"gno.land/r/demo/honey","Files":[{"Name":"GRC20.gno","Body":"package HONEY\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tHONEY  *grc20.AdminToken\r\n\tadmin std.Address = \"g1lk45335udge6nefk733e852rmexrc94m52tdt9\"\r\n)\r\n\r\nfunc init() {\r\n\tHONEY = grc20.NewAdminToken(\"HONEYToken\", \"HONEY\", 6)\r\n\tHONEY.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn HONEY.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := HONEY.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := HONEY.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tHONEY.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tHONEY.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tHONEY.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tHONEY.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tHONEY.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn HONEY.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := HONEY.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjPXBMIiQC2a6BTtklbriXGcthjkO9yMNbFqu9suf50Q"},"signature":"mRmBxTHbj9WmfGuP2g3XFGvowGivililD0RjU1S/9bMGvFzPKzTkhgsn5MkNzE7ogcJ3i+ZyAKo3CUfR1Rpuaw=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222099"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1h5w7hnqkxp7c23qqp8rs62slvdczsjzyfxsye4","package":{"Name":"honey","Path":"gno.land/r/demo/honey","Files":[{"Name":"GRC20.gno","Body":"package hon\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\thon  *grc20.AdminToken\r\n\tadmin std.Address = \"g1lk45335udge6nefk733e852rmexrc94m52tdt9\"\r\n)\r\n\r\nfunc init() {\r\n\thon = grc20.NewAdminToken(\"honToken\", \"hon\", 6)\r\n\thon.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn hon.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := hon.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := hon.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\thon.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\thon.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\thon.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\thon.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\thon.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn hon.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := hon.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjPXBMIiQC2a6BTtklbriXGcthjkO9yMNbFqu9suf50Q"},"signature":"tHwhts9YNw5MRAY98KMo6G9NhDneQhv0yrVfFvbs/hUXHZgMa5H4oQlI6WYRQTNcul1nn7bdAdDsBBhZuYzwIQ=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222101"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1h5w7hnqkxp7c23qqp8rs62slvdczsjzyfxsye4","package":{"Name":"soy","Path":"gno.land/r/demo/soy","Files":[{"Name":"GRC20.gno","Body":"package soy\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tsoy  *grc20.AdminToken\r\n\tadmin std.Address = \"g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5\"\r\n)\r\n\r\nfunc init() {\r\n\tsoy = grc20.NewAdminToken(\"soyToken\", \"soy\", 6)\r\n\tsoy.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn soy.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := soy.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := soy.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tsoy.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tsoy.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tsoy.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tsoy.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tsoy.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn soy.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := soy.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjPXBMIiQC2a6BTtklbriXGcthjkO9yMNbFqu9suf50Q"},"signature":"UMtcLoq3Y0hVEIRlTHS2siOKsCOiIsSJXjBiSr+ZgJAOm6Q9Kt6wvJ/y0/n4xhb8RCs7jSjbSmJppk/wg1zEfw=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222104"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1h5w7hnqkxp7c23qqp8rs62slvdczsjzyfxsye4","package":{"Name":"thc","Path":"gno.land/r/demo/thc","Files":[{"Name":"GRC20.gno","Body":"package thc\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tthc  *grc20.AdminToken\r\n\tadmin std.Address = \"g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5\"\r\n)\r\n\r\nfunc init() {\r\n\tthc = grc20.NewAdminToken(\"thcToken\", \"thc\", 6)\r\n\tthc.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn thc.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := thc.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := thc.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tthc.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tthc.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tthc.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tthc.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tthc.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn thc.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := thc.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AjPXBMIiQC2a6BTtklbriXGcthjkO9yMNbFqu9suf50Q"},"signature":"2dsnMjGwhq+JAQq7mO8HXXaWoVDLqxuNkDSesfSYnWYF4G1vVLnp8GKEr5+RhjrI3Vb6KCz1BWbIzMEZeAyZZQ=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222108"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g15gsy3nlxxjn0knd3xkucg4f6gf79tfwhg426sw","package":{"Name":"pui","Path":"gno.land/r/demo/pui","Files":[{"Name":"GRC20.gno","Body":"package pui\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tpui  *grc20.AdminToken\r\n\tadmin std.Address = \"g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5\"\r\n)\r\n\r\nfunc init() {\r\n\tpui = grc20.NewAdminToken(\"puiToken\", \"pui\", 6)\r\n\tpui.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn pui.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := pui.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := pui.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tpui.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tpui.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tpui.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tpui.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tpui.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn pui.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := pui.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ap3zzX15rnsV+/yYqqB3yiuHLLwOyNyChTuXNRnl/FHW"},"signature":"Fv90G/oLEWHf6H+NY/T+rG0cs/6zG4slNULqVZoG9k8yRKYOSwdjDY3gC7aA6Y9yuUNLDNfE0HGFba75DEF8ZA=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222126"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g128ucp2mk3ax9urc2hhx0tr8xqm6g4p8j28x4yf","package":{"Name":"swl","Path":"gno.land/r/demo/swl","Files":[{"Name":"GRC20.gno","Body":"package swl\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tswl  *grc20.AdminToken\r\n\tadmin std.Address = \"g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5\"\r\n)\r\n\r\nfunc init() {\r\n\tswl = grc20.NewAdminToken(\"swlToken\", \"swl\", 6)\r\n\tswl.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn swl.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := swl.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := swl.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tswl.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tswl.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tswl.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tswl.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tswl.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn swl.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := swl.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxVdh4kz7T3MgQdjBGcKn4Y0ebKw0905PvD//GnJUljf"},"signature":"aV6JQCU5sGT1k0Cxyotm5VsjnH7s6VJksp1fCCHn6B4RZa8uL79RvyB/UUWUJZ7hZLWq0tsJOxftO04l8zvw0Q=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222129"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1hh0k8n2am2ldpl0j893wp8fdtwdf8qf9hsa5s8","package":{"Name":"yed","Path":"gno.land/r/demo/yed","Files":[{"Name":"GRC20.gno","Body":"package yed\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tyed  *grc20.AdminToken\r\n\tadmin std.Address = \"g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5\"\r\n)\r\n\r\nfunc init() {\r\n\tyed = grc20.NewAdminToken(\"yedToken\", \"yed\", 6)\r\n\tyed.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn yed.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := yed.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := yed.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tyed.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tyed.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tyed.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tyed.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tyed.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn yed.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := yed.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxS9j83f8ook0P8tAQSCuq+IBgsMgAPqUlX16EVs8WPU"},"signature":"f3vLHi6JFVYpLSTkO8D8D1O6zSbPB+TpCeSbVVRbNNB7CdLQdIAFNmmzfmSaJHpstGT0htjfdZVxSZRSBRqwHQ=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222131"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g146nyqg843jtyxxdgaf7h7muvlsx2zapn6xqtme","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"maHuFYwt6UESVcyxoqQKDiOFfm9ePJJAXjrACJI097ctQEU6hzpE6gyNSkvYnNnBW5bxhjWe6ncMsxxlHgNCyg=="}],"memo":""},"blockNum":"222520"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g146nyqg843jtyxxdgaf7h7muvlsx2zapn6xqtme","package":{"Name":"ajan","Path":"gno.land/r/demo/ajan","Files":[{"Name":"GRC20.gno","Body":"package AJAN\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tAJAN  *grc20.AdminToken\r\n\tadmin std.Address = \"g146nyqg843jtyxxdgaf7h7muvlsx2zapn6xqtme\"\r\n)\r\n\r\nfunc init() {\r\n\tAJAN = grc20.NewAdminToken(\"Ajan\", \"AJAN\", 6)\r\n\tAJAN.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn AJAN.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := AJAN.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := AJAN.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tAJAN.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tAJAN.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tAJAN.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tAJAN.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tAJAN.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn AJAN.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := AJAN.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkgUWyLVmzYvK0DAj92MSLw2ZFqbmKKKvK+fcw6DAaWB"},"signature":"5vOGFlOzz/BK5DmMEzNavoUYm8AkZKktTnG+SiLJ8usqPHfXUKMDjgOJUX7wHfnQsaHD2CaNHvTs0PP8d0iXsg=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222527"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g146nyqg843jtyxxdgaf7h7muvlsx2zapn6xqtme","package":{"Name":"ajan","Path":"gno.land/p/demo/ajan","Files":[{"Name":"GRC20.gno","Body":"package AJAN\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tAJAN  *grc20.AdminToken\r\n\tadmin std.Address = \"g146nyqg843jtyxxdgaf7h7muvlsx2zapn6xqtme\"\r\n)\r\n\r\nfunc init() {\r\n\tAJAN = grc20.NewAdminToken(\"Ajan\", \"AJAN\", 6)\r\n\tAJAN.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn AJAN.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := AJAN.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := AJAN.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tAJAN.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tAJAN.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tAJAN.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tAJAN.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tAJAN.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn AJAN.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := AJAN.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkgUWyLVmzYvK0DAj92MSLw2ZFqbmKKKvK+fcw6DAaWB"},"signature":"CNUQ5dIa2Dasy09vgppSUSyBf8Rkg2t2nO5AectA0r81i8ye5bpayBrdBaSyBfdynlyhvdOgTibmj6psQSt4Iw=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222529"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g146nyqg843jtyxxdgaf7h7muvlsx2zapn6xqtme","package":{"Name":"ajan_test","Path":"gno.land/p/demo/ajan_test","Files":[{"Name":"GRC20.gno","Body":"package AJAN\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tAJAN  *grc20.AdminToken\r\n\tadmin std.Address = \"g146nyqg843jtyxxdgaf7h7muvlsx2zapn6xqtme\"\r\n)\r\n\r\nfunc init() {\r\n\tAJAN = grc20.NewAdminToken(\"Ajan\", \"AJAN\", 6)\r\n\tAJAN.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn AJAN.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := AJAN.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := AJAN.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tAJAN.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tAJAN.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tAJAN.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tAJAN.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tAJAN.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn AJAN.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := AJAN.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkgUWyLVmzYvK0DAj92MSLw2ZFqbmKKKvK+fcw6DAaWB"},"signature":"ZcwP3mR3nwwaMNnnrNF5wtQ3SZUde7q33l/YPBvPuTgZepg18O50JqPWUuy9WcHdUH8VOTkcoJLjYNjnWmUneQ=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222531"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g146nyqg843jtyxxdgaf7h7muvlsx2zapn6xqtme","package":{"Name":"ajan_test","Path":"gno.land/p/demo/ajan_test","Files":[{"Name":"GRC20.gno","Body":"package AJAN\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tAJAN  *grc20.AdminToken\r\n\tadmin std.Address = \"g146nyqg843jtyxxdgaf7h7muvlsx2zapn6xqtme\"\r\n)\r\n\r\nfunc init() {\r\n\tAJAN = grc20.NewAdminToken(\"ajan\", \"ajan\", 6)\r\n\tAJAN.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn AJAN.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := AJAN.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := AJAN.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tAJAN.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tAJAN.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tAJAN.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tAJAN.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tAJAN.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn AJAN.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := AJAN.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkgUWyLVmzYvK0DAj92MSLw2ZFqbmKKKvK+fcw6DAaWB"},"signature":"6uZMnUWMy2LVm0Vlre4vcEkXNLRDdju8Y/IR6usCKpsqEbJ3aJCpM4/d3ns7yOa6k1S6OpxO95LORV/Y/o/N8Q=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222533"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g146nyqg843jtyxxdgaf7h7muvlsx2zapn6xqtme","package":{"Name":"ajan_test","Path":"gno.land/p/demo/ajan_test","Files":[{"Name":"GRC20.gno","Body":"package ajan\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tajan  *grc20.AdminToken\r\n\tadmin std.Address = \"g146nyqg843jtyxxdgaf7h7muvlsx2zapn6xqtme\"\r\n)\r\n\r\nfunc init() {\r\n\tajan = grc20.NewAdminToken(\"ajan\", \"ajan\", 6)\r\n\tajan.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn ajan.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := ajan.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := ajan.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tajan.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tajan.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tajan.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tajan.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tajan.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn ajan.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := ajan.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkgUWyLVmzYvK0DAj92MSLw2ZFqbmKKKvK+fcw6DAaWB"},"signature":"qUoR/HBkKuRCHUp3vVApFk4rFgfO5RuLg5nnIBaJFjxKGhdqWl8aKYUBOAy51UgE/WvNAAme1uIoyKBiRGv3MA=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222535"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g146nyqg843jtyxxdgaf7h7muvlsx2zapn6xqtme","package":{"Name":"ajan_test1","Path":"gno.land/r/demo/ajan_test1","Files":[{"Name":"GRC20.gno","Body":"package ajan_test1\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tajan_test1  *grc20.AdminToken\r\n\tadmin std.Address = \"g146nyqg843jtyxxdgaf7h7muvlsx2zapn6xqtme\"\r\n)\r\n\r\nfunc init() {\r\n\tajan_test1 = grc20.NewAdminToken(\"ajan_test1\", \"ajan_test1\", 6)\r\n\tajan_test1.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn ajan_test1.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := ajan_test1.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := ajan_test1.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tajan_test1.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tajan_test1.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tajan_test1.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tajan_test1.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tajan_test1.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn ajan_test1.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := ajan_test1.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkgUWyLVmzYvK0DAj92MSLw2ZFqbmKKKvK+fcw6DAaWB"},"signature":"/j0IVHyQRutF/qmpZ1FpcJ6i/aDT5mKNevGc2uenhad4XYNsJ5mgeOEcziw+btGJ6KeSyrtmbMd6R/gSCVOKcA=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222538"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g146nyqg843jtyxxdgaf7h7muvlsx2zapn6xqtme","send":"","pkg_path":"gno.land/r/demo/ajan_test1","func":"Transfer","args":["g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5","10"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AkgUWyLVmzYvK0DAj92MSLw2ZFqbmKKKvK+fcw6DAaWB"},"signature":"2znK4F1ftNlw06NWecVkTy5Dh+NxzMbyUNTHKPw2nawhFczREuflLFuywT9K//95zkeN9w5j43v36cAzY0qZ0w=="}],"memo":""},"blockNum":"222541"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g15gsy3nlxxjn0knd3xkucg4f6gf79tfwhg426sw","package":{"Name":"hfd","Path":"gno.land/r/demo/hfd","Files":[{"Name":"GRC20.gno","Body":"package hfd\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\thfd  *grc20.AdminToken\r\n\tadmin std.Address = \"g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5\"\r\n)\r\n\r\nfunc init() {\r\n\thfd = grc20.NewAdminToken(\"hfdToken\", \"hfd\", 6)\r\n\thfd.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn hfd.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := hfd.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := hfd.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\thfd.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\thfd.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\thfd.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\thfd.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\thfd.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn hfd.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := hfd.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ap3zzX15rnsV+/yYqqB3yiuHLLwOyNyChTuXNRnl/FHW"},"signature":"6Gq1WPVkz9sG1FfwEcMyUv0ImPVHhWm5whrllwWMojd97QFm99a4IwasB6J9mpUaeX0NbY7OWYdm2t8ZyWnZBg=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222763"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g128ucp2mk3ax9urc2hhx0tr8xqm6g4p8j28x4yf","package":{"Name":"lop","Path":"gno.land/r/demo/lop","Files":[{"Name":"GRC20.gno","Body":"package lop\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tlop  *grc20.AdminToken\r\n\tadmin std.Address = \"g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5\"\r\n)\r\n\r\nfunc init() {\r\n\tlop = grc20.NewAdminToken(\"lopToken\", \"lop\", 6)\r\n\tlop.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn lop.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := lop.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := lop.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlop.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlop.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlop.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tlop.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tlop.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn lop.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := lop.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxVdh4kz7T3MgQdjBGcKn4Y0ebKw0905PvD//GnJUljf"},"signature":"3f1ryQatzFZ3lzTJZOnGps4Lu7cQeLuzYYCjg88H8xNqX8k9q5DBu5kSSmbnQAwaRfsCrdw7vAttyvV2QfYuiA=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222765"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1hh0k8n2am2ldpl0j893wp8fdtwdf8qf9hsa5s8","package":{"Name":"jjj","Path":"gno.land/r/demo/jjj","Files":[{"Name":"GRC20.gno","Body":"package jjj\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tjjj  *grc20.AdminToken\r\n\tadmin std.Address = \"g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5\"\r\n)\r\n\r\nfunc init() {\r\n\tjjj = grc20.NewAdminToken(\"jjjToken\", \"jjj\", 6)\r\n\tjjj.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn jjj.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := jjj.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := jjj.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tjjj.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tjjj.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tjjj.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tjjj.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tjjj.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn jjj.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := jjj.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxS9j83f8ook0P8tAQSCuq+IBgsMgAPqUlX16EVs8WPU"},"signature":"q/Rlpije218erks/REkzjdb5XCwHft8nAQ1bU5y96HtH0iGhRb+HP7PrDyB1DicCJfMLLxHzPUFZ2vRaaHo+Uw=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222767"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g15gsy3nlxxjn0knd3xkucg4f6gf79tfwhg426sw","package":{"Name":"lmc","Path":"gno.land/r/demo/lmc","Files":[{"Name":"GRC20.gno","Body":"package lmc\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tlmc  *grc20.AdminToken\r\n\tadmin std.Address = \"g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5\"\r\n)\r\n\r\nfunc init() {\r\n\tlmc = grc20.NewAdminToken(\"lmcToken\", \"lmc\", 6)\r\n\tlmc.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn lmc.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := lmc.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := lmc.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlmc.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlmc.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlmc.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tlmc.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tlmc.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn lmc.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := lmc.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Ap3zzX15rnsV+/yYqqB3yiuHLLwOyNyChTuXNRnl/FHW"},"signature":"9VJvO8eiJCIERjSmfFs9ZZWzHv1iQZp9acpcvtfYk0cXnSBs5j7AU4RCqaPpJ1VQ2s/d5TfaWte3pPBQl0ciNw=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222793"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1hh0k8n2am2ldpl0j893wp8fdtwdf8qf9hsa5s8","package":{"Name":"hjk","Path":"gno.land/r/demo/hjk","Files":[{"Name":"GRC20.gno","Body":"package hjk\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\thjk  *grc20.AdminToken\r\n\tadmin std.Address = \"g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5\"\r\n)\r\n\r\nfunc init() {\r\n\thjk = grc20.NewAdminToken(\"hjkToken\", \"hjk\", 6)\r\n\thjk.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn hjk.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := hjk.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := hjk.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\thjk.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\thjk.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\thjk.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\thjk.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\thjk.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn hjk.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := hjk.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxS9j83f8ook0P8tAQSCuq+IBgsMgAPqUlX16EVs8WPU"},"signature":"fCDxWhn8SejQeICIf+meI5/Hg8S9uew5hTfkol8A2qsaqWTGGUXq7jUSjQ0ZtREV1UOmKZDV3RIuMY2mynaE6w=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222796"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1hh0k8n2am2ldpl0j893wp8fdtwdf8qf9hsa5s8","package":{"Name":"pop","Path":"gno.land/r/demo/pop","Files":[{"Name":"GRC20.gno","Body":"package pop\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tpop  *grc20.AdminToken\r\n\tadmin std.Address = \"g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5\"\r\n)\r\n\r\nfunc init() {\r\n\tpop = grc20.NewAdminToken(\"popToken\", \"pop\", 6)\r\n\tpop.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn pop.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := pop.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := pop.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tpop.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tpop.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tpop.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tpop.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tpop.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn pop.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := pop.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AxS9j83f8ook0P8tAQSCuq+IBgsMgAPqUlX16EVs8WPU"},"signature":"b42TBi7TtvfMHtqERiCtuIxdt09H/Usc3J5HPv3IWXJocPkmv0Zn8deH75MA0mYFcRf2YzQk2+bs5bF0JSnwOw=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222798"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1sds4haqvvjtsfu6mpadmqz3nwexensy08t738n","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"p8m3a4F6PZRX5eP3L1UpaHBTcHbFZRQgX+g5z//Voi8RZRJTDACe+1MyHF9B4mg6v1Wjd5eHcuLTHcN88MerqQ=="}],"memo":""},"blockNum":"222811"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1jcsmkq74jr6uxfpfcytjvruyuqje7lqk2zfxxp","package":{"Name":"lbp","Path":"gno.land/r/demo/lbp","Files":[{"Name":"GRC20.gno","Body":"package lbp\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tlbp  *grc20.AdminToken\r\n\tadmin std.Address = \"g1jcsmkq74jr6uxfpfcytjvruyuqje7lqk2zfxxp\"\r\n)\r\n\r\nfunc init() {\r\n\tlbp = grc20.NewAdminToken(\"lbpToken\", \"lbp\", 6)\r\n\tlbp.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn lbp.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := lbp.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := lbp.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlbp.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlbp.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tlbp.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tlbp.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tlbp.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn lbp.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := lbp.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"A2oMVgXFZfsV3xSMrijG4QqL49fkopI0KyEr49rqmd7s"},"signature":"B5G2ATQjCvIr7I76VwzVKAnhskBuijEv7E1pgA3OKdR40at0nKXtl6175yOwf1LxezzWReYBzbr6j+FqXmi8tg=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222845"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1lkxw2sk7ecn5flmxr72n999r8w4eh227ln6s6r","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"HEfyyV0P2oqtl5BT4tT9nbVzI3CbYGLuqNTD35SBPShVSTwP+dJTJzTlruWFeky66rkDNZZUUKei2wU27cnTRQ=="}],"memo":""},"blockNum":"222848"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1sds4haqvvjtsfu6mpadmqz3nwexensy08t738n","package":{"Name":"buu","Path":"gno.land/r/demo/buu","Files":[{"Name":"GRC20.gno","Body":"package buu\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tbuu  *grc20.AdminToken\r\n\tadmin std.Address = \"g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5\"\r\n)\r\n\r\nfunc init() {\r\n\tbuu = grc20.NewAdminToken(\"buuToken\", \"buu\", 6)\r\n\tbuu.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn buu.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := buu.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := buu.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tbuu.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tbuu.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tbuu.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tbuu.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tbuu.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn buu.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := buu.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AlyBjKyT2XvcgilP1jaKXGqfiv/xU8Nf7ZffcQClYIcY"},"signature":"EPWb0pklQq6abFIO4ykJ+jYCWZXR4Js3tPHfxCyUjqQzgB/v3mkiI9Kvw845UnsMk4tczWQWytdCoMBk0lnM/Q=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222850"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1lkxw2sk7ecn5flmxr72n999r8w4eh227ln6s6r","package":{"Name":"chat","Path":"gno.land/r/demo/chat","Files":[{"Name":"GRC20.gno","Body":"package chat\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tchat  *grc20.AdminToken\r\n\tadmin std.Address = \"g1lkxw2sk7ecn5flmxr72n999r8w4eh227ln6s6r\"\r\n)\r\n\r\nfunc init() {\r\n\tchat = grc20.NewAdminToken(\"chatToken\", \"chat\", 6)\r\n\tchat.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn chat.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := chat.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := chat.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tchat.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tchat.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tchat.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tchat.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tchat.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn chat.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := chat.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgoVGKvhXqQ2pWw0gOFY+ZRy4JeZfR1Kre5N8cn2jnFJ"},"signature":"xOnl6YQ43ddLIo9bvsmitdOlRBlufRzSBMmhSc+9P5IQwWukK+gXJVAmRXbt+mPh/fYgXwl5wgRs6gtELnMxyQ=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222852"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1ujpuzjqpe9r4q7d53e05gzy85k8tg7lmt5qmn4","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"EPtV2hkzkX1R18+XDKqQYYakFD5ca5gY5M6/4BGJP8AjO3knbsCf4y59xfxryUxnvlUBciNz5RWysLfBXlEnvg=="}],"memo":""},"blockNum":"222854"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1ccdlhey0y52jdgse4g88t8d07h2k936qw9e3tv","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"O+ZqXgJlz7FtIoamaGvlYME35E6VjIlHWYIA6Q6RZrdtw3clZELiexTZsFujiMGBF8/RPatdWUvZHai+Enl7nw=="}],"memo":""},"blockNum":"222856"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1ujpuzjqpe9r4q7d53e05gzy85k8tg7lmt5qmn4","package":{"Name":"iop","Path":"gno.land/r/demo/iop","Files":[{"Name":"GRC20.gno","Body":"package iop\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tiop  *grc20.AdminToken\r\n\tadmin std.Address = \"g1hqzeju0p0eup9rgxa0pxvyc0y7wnzjrdvppsy5\"\r\n)\r\n\r\nfunc init() {\r\n\tiop = grc20.NewAdminToken(\"iopToken\", \"iop\", 6)\r\n\tiop.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn iop.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := iop.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := iop.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tiop.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tiop.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tiop.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tiop.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tiop.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn iop.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := iop.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AwMBcibFAxHUjq0SNd0HHPM5akXHU7rdB9fNokWEisml"},"signature":"jroS1G7QwDec4ann2bjLvs9HhA1IDMaY1zGCzALRJUYkAuBk9sxlIms292GlwxLbMY6yuKzmv1sGTMW7tVbRLg=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222874"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1zr2k9m68gy0fcjv0s6qawldvzg2nscpv6pnzh8","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"jl2efvNurAM8sUL7878N4zr+sUztjURqGsK5hrkCtBNHMEybk0oMzPTSE+B1CjlGyweNP/BmyJ67nXUiNaT/lQ=="}],"memo":""},"blockNum":"222901"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1zr2k9m68gy0fcjv0s6qawldvzg2nscpv6pnzh8","package":{"Name":"pearl","Path":"gno.land/r/demo/pearl","Files":[{"Name":"GRC20.gno","Body":"package pearl\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tpearl  *grc20.AdminToken\r\n\tadmin std.Address = \"g1zr2k9m68gy0fcjv0s6qawldvzg2nscpv6pnzh8\"\r\n)\r\n\r\nfunc init() {\r\n\tpearl = grc20.NewAdminToken(\"pearlToken\", \"pearl\", 6)\r\n\tpearl.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn pearl.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := pearl.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := pearl.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tpearl.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tpearl.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tpearl.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tpearl.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tpearl.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn pearl.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := pearl.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AmLhIs2lsssKhY4lnQtaew1pc6ur/YMOEq1pJgENfxXY"},"signature":"tnpNhUeu7KlT7nYWNcAlIZ/sy9XVn++ZC7WYs7eYtNALwjpBMA3u+U1p1dihL5ZTbCr7iQU6Rtt8GK+1pqbmfA=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222903"}
{"tx":{"msg":[{"@type":"/vm.m_call","caller":"g14vhcdsyf83ngsrrqc92kmw8q9xakqjm0v8448t","send":"","pkg_path":"gno.land/r/demo/minter","func":"Mint","args":["g1w0aqh55k5ajnk90a3u47y5dn83yyuae9n5vkqy","ugnot","310000000"]}],"fee":{"gas_wanted":"1000000","gas_fee":"1ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"AgiTyNXOXskkkxKv2DXaDxFtabuTPHlltbYwCOBpHL3w"},"signature":"U4h3YX/DlsWNcZzrtpCeZwCDa6u0nSIMsliuhzhyIS0ZgPZceHTKAykaIHVw9mL/FkwNoWv26vgLdJrGSwA4/A=="}],"memo":""},"blockNum":"222929"}
{"tx":{"msg":[{"@type":"/vm.m_addpkg","creator":"g1w0aqh55k5ajnk90a3u47y5dn83yyuae9n5vkqy","package":{"Name":"mon","Path":"gno.land/r/demo/mon","Files":[{"Name":"GRC20.gno","Body":"package mon\r\n\r\nimport (\r\n\t\"std\"\r\n\t\"strings\"\r\n\r\n\t\"gno.land/p/demo/grc/grc20\"\r\n\t\"gno.land/p/demo/ufmt\"\r\n\t\"gno.land/r/demo/users\"\r\n)\r\n\r\nvar (\r\n\tmon  *grc20.AdminToken\r\n\tadmin std.Address = \"g1w0aqh55k5ajnk90a3u47y5dn83yyuae9n5vkqy\"\r\n)\r\n\r\nfunc init() {\r\n\tmon = grc20.NewAdminToken(\"monToken\", \"mon\", 6)\r\n\tmon.Mint(admin, 1000000000) // @administrator\r\n}\r\n\r\n// method proxies as public functions.\r\n//\r\n\r\n// getters.\r\n\r\nfunc TotalSupply() uint64 {\r\n\treturn mon.TotalSupply()\r\n}\r\n\r\nfunc BalanceOf(owner users.AddressOrName) uint64 {\r\n\tbalance, err := mon.BalanceOf(owner.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn balance\r\n}\r\n\r\nfunc Allowance(owner, spender users.AddressOrName) uint64 {\r\n\tallowance, err := mon.Allowance(owner.Resolve(), spender.Resolve())\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\treturn allowance\r\n}\r\n\r\n// setters.\r\n\r\nfunc Transfer(to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tmon.Transfer(caller, to.Resolve(), amount)\r\n}\r\n\r\nfunc Approve(spender users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tmon.Approve(caller, spender.Resolve(), amount)\r\n}\r\n\r\nfunc TransferFrom(from, to users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tmon.TransferFrom(caller, from.Resolve(), to.Resolve(), amount)\r\n}\r\n\r\n// administration.\r\n\r\nfunc Mint(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tmon.Mint(address.Resolve(), amount)\r\n}\r\n\r\nfunc Burn(address users.AddressOrName, amount uint64) {\r\n\tcaller := std.GetOrigCaller()\r\n\tassertIsAdmin(caller)\r\n\tmon.Burn(address.Resolve(), amount)\r\n}\r\n\r\n// render.\r\n//\r\n\r\nfunc Render(path string) string {\r\n\tparts := strings.Split(path, \"/\")\r\n\tc := len(parts)\r\n\r\n\tswitch {\r\n\tcase path == \"\":\r\n\t\treturn mon.RenderHome()\r\n\tcase c == 2 \u0026\u0026 parts[0] == \"balance\":\r\n\t\towner := users.AddressOrName(parts[1])\r\n\t\tbalance, _ := mon.BalanceOf(owner.Resolve())\r\n\t\treturn ufmt.Sprintf(\"%d\\n\", balance)\r\n\tdefault:\r\n\t\treturn \"404\\n\"\r\n\t}\r\n}\r\n\r\nfunc assertIsAdmin(address std.Address) {\r\n\tif address != admin {\r\n\t\tpanic(\"restricted access\")\r\n\t}\r\n}"}]},"deposit":""}],"fee":{"gas_wanted":"10000000","gas_fee":"50000ugnot"},"signatures":[{"pub_key":{"@type":"/tm.PubKeySecp256k1","value":"Awfw6SakJXLNfeKNfxIfSiIg1IFy72TtC3ZAeltdAR2q"},"signature":"Pw8Ebzsj3E3tauS4Wd+I+X4mbjBqWFYX99Ri0gLLGKkP4w1CSCUAZkb5qdzaYUDEQd2SWL5p86lm6YjC4lbxvQ=="}],"memo":"Deployed through play.gno.land"},"blockNum":"222931"}
